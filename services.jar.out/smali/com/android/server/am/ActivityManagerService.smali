.class public final Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/ActivityManagerNative;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;,
        Lcom/android/server/am/ActivityManagerService$BadProcessInfo;,
        Lcom/android/server/am/ActivityManagerService$ForegroundToken;,
        Lcom/android/server/am/ActivityManagerService$Association;,
        Lcom/android/server/am/ActivityManagerService$GrantUri;,
        Lcom/android/server/am/ActivityManagerService$Identity;,
        Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;,
        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
        Lcom/android/server/am/ActivityManagerService$UiHandler;,
        Lcom/android/server/am/ActivityManagerService$MainHandler;,
        Lcom/android/server/am/ActivityManagerService$MemBinder;,
        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
        Lcom/android/server/am/ActivityManagerService$DbBinder;,
        Lcom/android/server/am/ActivityManagerService$CpuBinder;,
        Lcom/android/server/am/ActivityManagerService$Lifecycle;,
        Lcom/android/server/am/ActivityManagerService$ProcessInfoService;,
        Lcom/android/server/am/ActivityManagerService$PermissionController;,
        Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;,
        Lcom/android/server/am/ActivityManagerService$NeededUriGrants;,
        Lcom/android/server/am/ActivityManagerService$PreBootContinuation;,
        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
        Lcom/android/server/am/ActivityManagerService$MemItem;,
        Lcom/android/server/am/ActivityManagerService$LocalService;,
        Lcom/android/server/am/ActivityManagerService$SleepTokenImpl;,
        Lcom/android/server/am/ActivityManagerService$AppTaskImpl;,
        Lcom/android/server/am/ActivityManagerService$1;,
        Lcom/android/server/am/ActivityManagerService$2;
    }
.end annotation


# static fields
.field private static final ACTION_POWER_OFF_ALARM:Ljava/lang/String; = "org.codeaurora.alarm.action.POWER_OFF_ALARM"

.field static final ALLOW_FULL_ONLY:I = 0x2

.field static final ALLOW_NON_FULL:I = 0x0

.field static final ALLOW_NON_FULL_IN_PROFILE:I = 0x1

.field static final APP_BOOST_DEACTIVATE_MSG:I = 0x3a

.field static final APP_BOOST_MESSAGE_DELAY:I = 0xbb8

.field static final APP_BOOST_TIMEOUT:I = 0x9c4

.field static final APP_SWITCH_DELAY_TIME:J = 0x1388L

.field private static final ATTR_CREATED_TIME:Ljava/lang/String; = "createdTime"

.field private static final ATTR_MODE_FLAGS:Ljava/lang/String; = "modeFlags"

.field private static final ATTR_PREFIX:Ljava/lang/String; = "prefix"

.field private static final ATTR_SOURCE_PKG:Ljava/lang/String; = "sourcePkg"

.field private static final ATTR_SOURCE_USER_ID:Ljava/lang/String; = "sourceUserId"

.field private static final ATTR_TARGET_PKG:Ljava/lang/String; = "targetPkg"

.field private static final ATTR_TARGET_USER_ID:Ljava/lang/String; = "targetUserId"

.field private static final ATTR_URI:Ljava/lang/String; = "uri"

.field private static final ATTR_USER_HANDLE:Ljava/lang/String; = "userHandle"

.field static final BATTERY_STATS_TIME:J = 0x1b7740L

.field static final BROADCAST_BG_TIMEOUT:I = 0xea60

.field static final BROADCAST_FG_TIMEOUT:I = 0x2710

.field static final CALLED_PRE_BOOTS_FILENAME:Ljava/lang/String; = "called_pre_boots.dat"

.field static final CANCEL_HEAVY_NOTIFICATION_MSG:I = 0x19

.field static final CANCEL_PRIVACY_NOTIFICATION_MSG:I = 0x3d

.field static final CHECK_EXCESSIVE_WAKE_LOCKS_MSG:I = 0x1b

.field static final CLEAR_DNS_CACHE_MSG:I = 0x1c

.field static final COLLECT_PSS_BG_MSG:I = 0x1

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT:I = 0x2710

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG:I = 0x3b

.field static final CONTINUE_USER_SWITCH_MSG:I = 0x23

.field static final CPU_MIN_CHECK_DURATION:I = 0x493e0

.field static final DELETE_DUMPHEAP_MSG:I = 0x34

.field static final DISMISS_DIALOG_MSG:I = 0x30

.field static final DISPATCH_PROCESSES_CHANGED:I = 0x1f

.field static final DISPATCH_PROCESS_DIED:I = 0x20

.field static final DISPATCH_UIDS_CHANGED_MSG:I = 0x36

.field static final DO_PENDING_ACTIVITY_LAUNCHES_MSG:I = 0x15

.field static final DROPBOX_MAX_SIZE:I = 0x40000

.field static final DUMP_MEM_BUCKETS:[J

.field static final DUMP_MEM_OOM_ADJ:[I

.field static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field static final ENTER_ANIMATION_COMPLETE_MSG:I = 0x2c

.field static final FINALIZE_PENDING_INTENT_MSG:I = 0x17

.field static final FINISH_BOOTING_MSG:I = 0x2d

.field static final FIRST_ACTIVITY_STACK_MSG:I = 0x64

.field static final FIRST_BROADCAST_QUEUE_MSG:I = 0xc8

.field static final FIRST_COMPAT_MODE_MSG:I = 0x12c

.field static final FIRST_SUPERVISOR_STACK_MSG:I = 0x64

.field static final FOREGROUND_PROFILE_CHANGED_MSG:I = 0x35

.field static final FULL_PSS_LOWERED_INTERVAL:I = 0x1d4c0

.field static final FULL_PSS_MIN_INTERVAL:I = 0x927c0

.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5

.field static final GC_MIN_INTERVAL:I = 0xea60

.field static final GC_TIMEOUT:I = 0x1388

.field static final IMMERSIVE_MODE_LOCK_MSG:I = 0x25

.field static final INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I = 0xea60

.field static final IS_USER_BUILD:Z

.field static final KEY_DISPATCHING_TIMEOUT:I = 0x1388

.field static final KILL_APPLICATION_MSG:I = 0x16

.field private static final KSM_SHARED:I = 0x0

.field private static final KSM_SHARING:I = 0x1

.field private static final KSM_UNSHARED:I = 0x2

.field private static final KSM_VOLATILE:I = 0x3

.field static final LAST_PREBOOT_DELIVERED_FILE_VERSION:I = 0x2710

.field static final LOCK_SCREEN_HIDDEN:I = 0x0

.field static final LOCK_SCREEN_LEAVING:I = 0x1

.field static final LOCK_SCREEN_SHOWN:I = 0x2

.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388

.field static final MAX_PERSISTED_URI_GRANTS:I = 0x80

.field static final MAX_RUNNING_USERS:I = 0x3

.field static final MONITOR_CPU_MAX_TIME:J = 0xfffffffL

.field static final MONITOR_CPU_MIN_TIME:J = 0x1388L

.field static final MONITOR_CPU_USAGE:Z = true

.field static final MONITOR_THREAD_CPU_USAGE:Z = false

.field static final MY_PID:I

.field static final NOTIFY_CLEARTEXT_NETWORK_MSG:I = 0x32

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_DELAY:I = 0x3e8

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_MSG:I = 0x31

.field static final PENDING_ASSIST_EXTRAS_LONG_TIMEOUT:I = 0x7d0

.field static final PENDING_ASSIST_EXTRAS_TIMEOUT:I = 0x1f4

.field private static final PERSISTENT_MASK:I = 0x9

.field static final PERSIST_URI_GRANTS_MSG:I = 0x26

.field static final POST_DUMP_HEAP_NOTIFICATION_MSG:I = 0x33

.field static final POST_HEAVY_NOTIFICATION_MSG:I = 0x18

.field static final POST_PRIVACY_NOTIFICATION_MSG:I = 0x3c

.field static final POWER_CHECK_DELAY:I = 0xdbba0

.field private static final POWER_OFF_ALARM:Ljava/lang/String; = "powerOffAlarm"

.field static final PROC_START_TIMEOUT:I = 0x2710

.field static final PROC_START_TIMEOUT_MSG:I = 0x14

.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x124f80

.field static final PROP_REFRESH_THEME:Ljava/lang/String; = "sys.refresh_theme"

.field static final REPORT_MEM_USAGE_MSG:I = 0x21

.field static final REPORT_TIME_TRACKER_MSG:I = 0x37

.field static final REPORT_USER_SWITCH_COMPLETE_MSG:I = 0x38

.field static final REPORT_USER_SWITCH_MSG:I = 0x22

.field static final REQUEST_ALL_PSS_MSG:I = 0x27

.field static final SEND_LOCALE_TO_MOUNT_DAEMON_MSG:I = 0x2f

.field static final SERVICE_TIMEOUT_MSG:I = 0xc

.field static final SERVICE_USAGE_INTERACTION_TIME:I = 0x1b7740

.field static final SHOW_COMPAT_MODE_DIALOG_MSG:I = 0x1e

.field static final SHOW_ERROR_MSG:I = 0x1

.field static final SHOW_FACTORY_ERROR_MSG:I = 0x3

.field static final SHOW_FINGERPRINT_ERROR_MSG:I = 0xf

.field static final SHOW_NOT_RESPONDING_MSG:I = 0x2

.field static final SHOW_STRICT_MODE_VIOLATION_MSG:I = 0x1a

.field static final SHOW_UID_ERROR_MSG:I = 0xe

.field static final SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG:I = 0x39

.field static final START_PROFILES_MSG:I = 0x28

.field static final START_USER_SWITCH_MSG:I = 0x2e

.field static final STOCK_PM_FLAGS:I = 0x400

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field static final SYSTEM_USER_CURRENT_MSG:I = 0x2b

.field static final SYSTEM_USER_START_MSG:I = 0x2a

.field private static final TAG:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BACKUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BROADCAST:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CLEANUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CONFIGURATION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_FOCUS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_IMMERSIVE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKSCREEN:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKTASK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LRU:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_MU:Ljava/lang/String; = "ActivityManager_MU"

.field private static final TAG_OOM_ADJ:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_POWER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESSES:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESS_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROVIDER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PSS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_RECENTS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SERVICE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_STACK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SWITCH:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_UID_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_URI_GRANT:Ljava/lang/String; = "uri-grant"

.field private static final TAG_URI_GRANTS:Ljava/lang/String; = "uri-grants"

.field private static final TAG_URI_PERMISSION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_VISIBILITY:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_VISIBLE_BEHIND:Ljava/lang/String; = "ActivityManager"

.field static final UPDATE_CONFIGURATION_MSG:I = 0x4

.field static final UPDATE_HTTP_PROXY_MSG:I = 0x1d

.field static final UPDATE_TIME:I = 0x29

.field static final UPDATE_TIME_ZONE:I = 0xd

.field static final USAGE_STATS_INTERACTION_INTERVAL:J = 0x5265c00L

.field static final USER_SWITCH_TIMEOUT:I = 0x7d0

.field static final USER_SWITCH_TIMEOUT_MSG:I = 0x24

.field static final WAIT_FOR_DEBUGGER_MSG:I = 0x6

.field static final WAKE_LOCK_MIN_CHECK_DURATION:I = 0x493e0

.field private static final sCallerIdentity:Ljava/lang/ThreadLocal;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ThreadLocal",
            "<",
            "Lcom/android/server/am/ActivityManagerService$Identity;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field final GL_ES_VERSION:I

.field mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

.field mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

.field final mActiveUids:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/UidRecord;",
            ">;"
        }
    .end annotation
.end field

.field mAdjSeq:I

.field mAllowLowerMemLevel:Z

.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mAlwaysFinishActivities:Z

.field mAppBindArgs:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mAppOpsService:Lcom/android/server/AppOpsService;

.field mAppSwitchesAllowedTime:J

.field final mAssociations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Landroid/content/ComponentName;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$Association;",
            ">;>;>;>;"
        }
    .end annotation
.end field

.field mAutoStopProfiler:Z

.field final mAvailProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mAvailUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field mBServiceAppThreshold:I

.field mBackupAppName:Ljava/lang/String;

.field mBackupTarget:Lcom/android/server/am/BackupRecord;

.field final mBadProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$BadProcessInfo;",
            ">;"
        }
    .end annotation
.end field

.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mBgHandler:Landroid/os/Handler;

.field private mBoostStartTime:J

.field mBootAnimationComplete:Z

.field mBooted:Z

.field mBooting:Z

.field final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field mCallFinishBooting:Z

.field mCheckedForSetup:Z

.field mCompatModeDialog:Lcom/android/server/am/CompatModeDialog;

.field final mCompatModePackages:Lcom/android/server/am/CompatModePackages;

.field mConfiguration:Landroid/content/res/Configuration;

.field mConfigurationSeq:I

.field mContext:Landroid/content/Context;

.field mController:Landroid/app/IActivityController;

.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field private mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

.field private mCurResumedPackage:Ljava/lang/String;

.field private mCurResumedUid:I

.field mCurUserSwitchCallback:Ljava/lang/Object;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDebugApp:Ljava/lang/String;

.field mDebugTransient:Z

.field mDeviceOwnerName:Ljava/lang/String;

.field mDidAppSwitch:Z

.field mDidDexOpt:Z

.field mDidUpdate:Z

.field mEnableBServicePropagation:Z

.field mFactoryTest:I

.field mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field mFocusedActivity:Lcom/android/server/am/ActivityRecord;

.field private mForegroundActivitiesList:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/Integer;",
            "[",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field final mForegroundPackages:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field final mForegroundProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ForegroundToken;",
            ">;"
        }
    .end annotation
.end field

.field mFullPssPending:Z

.field private final mGrantFile:Landroid/util/AtomicFile;

.field private final mGrantedUriPermissions:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$GrantUri;",
            "Lcom/android/server/am/UriPermission;",
            ">;>;"
        }
    .end annotation
.end field

.field final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field final mHandlerThread:Lcom/android/server/ServiceThread;

.field mHasRecents:Z

.field mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

.field private mHomeKilled:Z

.field mHomeProcess:Lcom/android/server/am/ProcessRecord;

.field private mHomeProcessName:Ljava/lang/String;

.field private mInstaller:Lcom/android/server/pm/Installer;

.field public mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field final mIntentSenderRecords:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Lcom/android/server/am/PendingIntentRecord$Key;",
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/android/server/am/PendingIntentRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field private mIsBoosted:Z

.field final mIsolatedProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

.field mLastAddedTaskComponent:Landroid/content/ComponentName;

.field mLastAddedTaskUid:I

.field final mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

.field private mLastFocusedUserId:I

.field mLastFullPssTime:J

.field mLastIdleTime:J

.field mLastMemUsageReportTime:J

.field mLastMemoryLevel:I

.field mLastNumProcesses:I

.field mLastPowerCheckRealtime:J

.field mLastPowerCheckUptime:J

.field mLastWriteTime:J

.field mLaunchWarningShown:Z

.field final mLaunchingProviders:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ContentProviderRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

.field mLocalPowerManager:Landroid/os/PowerManagerInternal;

.field mLockScreenShown:I

.field mLockTaskPackages:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<[",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mLowRamStartTime:J

.field mLowRamTimeSinceLastIdle:J

.field mLruProcessActivityStart:I

.field mLruProcessServiceStart:I

.field final mLruProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLruSeq:I

.field mMemWatchDumpFile:Ljava/lang/String;

.field mMemWatchDumpPid:I

.field mMemWatchDumpProcName:Ljava/lang/String;

.field mMemWatchDumpUid:I

.field final mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Landroid/util/Pair",
            "<",
            "Ljava/lang/Long;",
            "Ljava/lang/String;",
            ">;>;"
        }
    .end annotation
.end field

.field mMinBServiceAgingTime:I

.field mNewNumAServiceProcs:I

.field mNewNumServiceProcs:I

.field mNextIsolatedProcessUid:I

.field mNumCachedHiddenProcs:I

.field mNumNonCachedProcs:I

.field mNumServiceProcs:I

.field mOnBattery:Z

.field mOpenGlTraceApp:Ljava/lang/String;

.field mOrigDebugApp:Ljava/lang/String;

.field mOrigWaitForDebugger:Z

.field final mPendingAssistExtras:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingPssProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPidsSelfLocked:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mPreviousProcess:Lcom/android/server/am/ProcessRecord;

.field mPreviousProcessVisibleTime:J

.field final mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

.field final mProcessCpuThread:Ljava/lang/Thread;

.field final mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

.field final mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/lang/Long;",
            ">;"
        }
    .end annotation
.end field

.field mProcessLimit:I

.field mProcessLimitOverride:I

.field final mProcessList:Lcom/android/server/am/ProcessList;

.field final mProcessNames:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IProcessObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field final mProcessesOnHold:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProcessesReady:Z

.field final mProcessesToGc:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProfileApp:Ljava/lang/String;

.field mProfileFd:Landroid/os/ParcelFileDescriptor;

.field mProfileFile:Ljava/lang/String;

.field mProfileProc:Lcom/android/server/am/ProcessRecord;

.field mProfileType:I

.field final mProviderMap:Lcom/android/server/am/ProviderMap;

.field final mReceiverResolver:Lcom/android/server/IntentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/IntentResolver",
            "<",
            "Lcom/android/server/am/BroadcastFilter;",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field private final mRecentTasks:Lcom/android/server/am/RecentTasks;

.field final mRegisteredReceivers:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/am/ReceiverList;",
            ">;"
        }
    .end annotation
.end field

.field final mRemovedProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

.field mSafeMode:Z

.field mSamplingInterval:I

.field final mServices:Lcom/android/server/am/ActiveServices;

.field private mShowDialogs:Z

.field mShuttingDown:Z

.field final mSleepTokens:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/app/ActivityManagerInternal$SleepToken;",
            ">;"
        }
    .end annotation
.end field

.field private mSleeping:Z

.field mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

.field mStartedUserArray:[I

.field final mStartedUsers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/UserState;",
            ">;"
        }
    .end annotation
.end field

.field final mStickyBroadcasts:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/Intent;",
            ">;>;>;"
        }
    .end annotation
.end field

.field private final mStrictModeBuffer:Ljava/lang/StringBuilder;

.field final mStringBuilder:Ljava/lang/StringBuilder;

.field mSystemReady:Z

.field mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field final mSystemThread:Landroid/app/ActivityThread;

.field mTargetUserId:I

.field final mTaskPersister:Lcom/android/server/am/TaskPersister;

.field private mTaskStackListeners:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/ITaskStackListener;",
            ">;"
        }
    .end annotation
.end field

.field mTestPssMode:Z

.field mThumbnailHeight:I

.field mThumbnailWidth:I

.field final mTmpLong:[J

.field mTopAction:Ljava/lang/String;

.field mTopComponent:Landroid/content/ComponentName;

.field mTopData:Ljava/lang/String;

.field mTopProcessState:I

.field mTraceDateFormat:Ljava/text/SimpleDateFormat;

.field mTrackingAssociations:Z

.field mUiContext:Landroid/content/Context;

.field final mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

.field final mUidObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IUidObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mUpdateLock:Landroid/os/UpdateLock;

.field mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field private mUserIsMonkey:Z

.field final mUserLru:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mUserManager:Lcom/android/server/pm/UserManagerService;

.field mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

.field final mUserSwitchObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IUserSwitchObserver;",
            ">;"
        }
    .end annotation
.end field

.field mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

.field mWaitForDebugger:Z

.field mWaitingUpdate:Z

.field private mWakefulness:I

.field mWindowManager:Lcom/android/server/wm/WindowManagerService;


# direct methods
.method static synthetic -get0(Lcom/android/server/am/ActivityManagerService;)J
    .locals 2

    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    return-wide v0
.end method

.method static synthetic -get1(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    return v0
.end method

.method static synthetic -get2(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    return v0
.end method

.method static synthetic -get3(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method static synthetic -get4(Lcom/android/server/am/ActivityManagerService;)Ljava/lang/StringBuilder;
    .locals 1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    return-object v0
.end method

.method static synthetic -get5(Lcom/android/server/am/ActivityManagerService;)Landroid/os/RemoteCallbackList;
    .locals 1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    return-object v0
.end method

.method static synthetic -set0(Lcom/android/server/am/ActivityManagerService;J)J
    .locals 1

    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    return-wide p1
.end method

.method static synthetic -set1(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0

    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    return p1
.end method

.method static synthetic -set2(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0

    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    return p1
.end method

.method static synthetic -wrap0(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 1
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v0

    return-object v0
.end method

.method static synthetic -wrap1(Lcom/android/server/am/ActivityManagerService;)Landroid/content/Context;
    .locals 1

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getUiContext()Landroid/content/Context;

    move-result-object v0

    return-object v0
.end method

.method static synthetic -wrap10(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic -wrap11(Lcom/android/server/am/ActivityManagerService;ILjava/lang/String;)V
    .locals 0
    .param p1, "userId"    # I
    .param p2, "userName"    # Ljava/lang/String;

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->showUserSwitchDialog(ILjava/lang/String;)V

    return-void
.end method

.method static synthetic -wrap12(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method static synthetic -wrap13(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->writeGrantedUriPermissions()V

    return-void
.end method

.method static synthetic -wrap14(Ljava/util/ArrayList;)V
    .locals 0
    .param p0, "list"    # Ljava/util/ArrayList;

    .prologue
    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V

    return-void
.end method

.method static synthetic -wrap2(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "callerWillRestart"    # Z
    .param p4, "purgeCache"    # Z
    .param p5, "doit"    # Z
    .param p6, "evenPersistent"    # Z
    .param p7, "uninstalling"    # Z
    .param p8, "userId"    # I
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    invoke-direct/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method static synthetic -wrap3(Lcom/android/server/am/ActivityManagerService;IZ)Z
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    move-result v0

    return v0
.end method

.method static synthetic -wrap4(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    .locals 1
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermissions"    # [Ljava/lang/String;
    .param p10, "appOp"    # I
    .param p11, "options"    # Landroid/os/Bundle;
    .param p12, "ordered"    # Z
    .param p13, "sticky"    # Z
    .param p14, "callingPid"    # I
    .param p15, "callingUid"    # I
    .param p16, "userId"    # I

    .prologue
    invoke-direct/range {p0 .. p16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v0

    return v0
.end method

.method static synthetic -wrap5()I
    .locals 1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->nativeMigrateFromBoost()I

    move-result v0

    return v0
.end method

.method static synthetic -wrap6(Lcom/android/server/am/ActivityManagerService;II)V
    .locals 0
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessDied(II)V

    return-void
.end method

.method static synthetic -wrap7(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessesChanged()V

    return-void
.end method

.method static synthetic -wrap8(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchUidsChanged()V

    return-void
.end method

.method static synthetic -wrap9(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static constructor <clinit>()V
    .locals 8

    .prologue
    const/4 v7, 0x3

    const/4 v6, 0x2

    const/4 v5, 0x1

    const/16 v4, 0xe

    const/4 v3, 0x0

    .line 323
    const-string/jumbo v0, "user"

    sget-object v1, Landroid/os/Build;->TYPE:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z

    .line 402
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 404
    new-array v0, v3, [Ljava/lang/String;

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 971
    new-instance v0, Ljava/lang/ThreadLocal;

    invoke-direct {v0}, Ljava/lang/ThreadLocal;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    .line 14829
    const/16 v0, 0x17

    new-array v0, v0, [J

    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    .line 14856
    new-array v0, v4, [I

    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    .line 14865
    new-array v0, v4, [Ljava/lang/String;

    .line 14866
    const-string/jumbo v1, "Native"

    aput-object v1, v0, v3

    .line 14867
    const-string/jumbo v1, "System"

    aput-object v1, v0, v5

    const-string/jumbo v1, "Persistent"

    aput-object v1, v0, v6

    const-string/jumbo v1, "Persistent Service"

    aput-object v1, v0, v7

    const-string/jumbo v1, "Foreground"

    const/4 v2, 0x4

    aput-object v1, v0, v2

    .line 14868
    const-string/jumbo v1, "Visible"

    const/4 v2, 0x5

    aput-object v1, v0, v2

    const-string/jumbo v1, "Perceptible"

    const/4 v2, 0x6

    aput-object v1, v0, v2

    .line 14869
    const-string/jumbo v1, "Heavy Weight"

    const/4 v2, 0x7

    aput-object v1, v0, v2

    const-string/jumbo v1, "Backup"

    const/16 v2, 0x8

    aput-object v1, v0, v2

    .line 14870
    const-string/jumbo v1, "A Services"

    const/16 v2, 0x9

    aput-object v1, v0, v2

    const-string/jumbo v1, "Home"

    const/16 v2, 0xa

    aput-object v1, v0, v2

    .line 14871
    const-string/jumbo v1, "Previous"

    const/16 v2, 0xb

    aput-object v1, v0, v2

    const-string/jumbo v1, "B Services"

    const/16 v2, 0xc

    aput-object v1, v0, v2

    const-string/jumbo v1, "Cached"

    const/16 v2, 0xd

    aput-object v1, v0, v2

    .line 14865
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    .line 14873
    new-array v0, v4, [Ljava/lang/String;

    .line 14874
    const-string/jumbo v1, "native"

    aput-object v1, v0, v3

    .line 14875
    const-string/jumbo v1, "sys"

    aput-object v1, v0, v5

    const-string/jumbo v1, "pers"

    aput-object v1, v0, v6

    const-string/jumbo v1, "persvc"

    aput-object v1, v0, v7

    const-string/jumbo v1, "fore"

    const/4 v2, 0x4

    aput-object v1, v0, v2

    .line 14876
    const-string/jumbo v1, "vis"

    const/4 v2, 0x5

    aput-object v1, v0, v2

    const-string/jumbo v1, "percept"

    const/4 v2, 0x6

    aput-object v1, v0, v2

    .line 14877
    const-string/jumbo v1, "heavy"

    const/4 v2, 0x7

    aput-object v1, v0, v2

    const-string/jumbo v1, "backup"

    const/16 v2, 0x8

    aput-object v1, v0, v2

    .line 14878
    const-string/jumbo v1, "servicea"

    const/16 v2, 0x9

    aput-object v1, v0, v2

    const-string/jumbo v1, "home"

    const/16 v2, 0xa

    aput-object v1, v0, v2

    .line 14879
    const-string/jumbo v1, "prev"

    const/16 v2, 0xb

    aput-object v1, v0, v2

    const-string/jumbo v1, "serviceb"

    const/16 v2, 0xc

    aput-object v1, v0, v2

    const-string/jumbo v1, "cached"

    const/16 v2, 0xd

    aput-object v1, v0, v2

    .line 14873
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    .line 271
    return-void

    .line 14829
    nop

    :array_0
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    .line 14856
    :array_1
    .array-data 4
        -0x11
        -0x10
        -0xc
        -0xb
        0x0
        0x1
        0x2
        0x3
        0x4
        0x5
        0x6
        0x7
        0x8
        0xf
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 9
    .param p1, "systemContext"    # Landroid/content/Context;

    .prologue
    .line 2425
    invoke-direct {p0}, Landroid/app/ActivityManagerNative;-><init>()V

    .line 424
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mHomeKilled:Z

    .line 425
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    .line 435
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    .line 436
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    .line 448
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    .line 447
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    .line 455
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 461
    const/4 v0, 0x2

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 474
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 509
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskPackages:Landroid/util/SparseArray;

    .line 516
    new-instance v0, Ljava/text/SimpleDateFormat;

    const-string/jumbo v1, "dd_MMM_HH_mm_ss.SSS"

    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTraceDateFormat:Ljava/text/SimpleDateFormat;

    .line 550
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 549
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    .line 555
    new-instance v0, Lcom/android/server/am/ProcessList;

    invoke-direct {v0}, Lcom/android/server/am/ProcessList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 563
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 574
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    .line 580
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 585
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 590
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    .line 617
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    .line 626
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 637
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    .line 644
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 650
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 655
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    .line 661
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 666
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 672
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 677
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    .line 682
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    .line 687
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 693
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 715
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    .line 720
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    .line 725
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    .line 730
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v1, v0, v2

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 736
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    .line 735
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    .line 753
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 752
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 761
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 771
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 777
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 784
    new-instance v0, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 783
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 825
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    .line 824
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 858
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 864
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 865
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 875
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 874
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    .line 902
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 1004
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 1010
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 1026
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x100

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 1032
    const-string/jumbo v0, "android.intent.action.MAIN"

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 1034
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1035
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1036
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1037
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1038
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1039
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    .line 1040
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .line 1041
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1042
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 1077
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 1083
    const/4 v0, 0x2

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 1106
    const/4 v0, 0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 1113
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    .line 1121
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 1126
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 1131
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 1136
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 1142
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 1148
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 1154
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 1155
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 1156
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 1164
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 1170
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 1181
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1186
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 1191
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 1196
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1197
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1205
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    .line 1204
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1223
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 1225
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1226
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1227
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1228
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1229
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1230
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1231
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 1232
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 1233
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 1236
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 1237
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 1238
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 1239
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 1240
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 1246
    const/4 v0, 0x1

    new-array v0, v0, [J

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTmpLong:[J

    .line 1258
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    .line 1259
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    .line 1260
    const/4 v0, 0x5

    new-array v0, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 1262
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    .line 1263
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    .line 1265
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 1266
    const/4 v0, 0x5

    new-array v0, v0, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 1268
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    .line 1269
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    .line 1284
    new-instance v0, Lcom/android/internal/os/ProcessCpuTracker;

    .line 1285
    const/4 v1, 0x0

    .line 1284
    invoke-direct {v0, v1}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    .line 1286
    new-instance v0, Ljava/util/concurrent/atomic/AtomicLong;

    const-wide/16 v2, 0x0

    invoke-direct {v0, v2, v3}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 1287
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 1289
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 1295
    new-instance v0, Landroid/os/UpdateLock;

    const-string/jumbo v1, "immersive"

    invoke-direct {v0, v1}, Landroid/os/UpdateLock;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUpdateLock:Landroid/os/UpdateLock;

    .line 1300
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1302
    sget v0, Lcom/android/server/am/ProcessList;->MAX_CACHED_APPS:I

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    .line 1303
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    .line 1310
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 1312
    const/16 v0, -0x2710

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 1315
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v1, v0, v2

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 1320
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    .line 1409
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 1413
    const-string/jumbo v0, "ro.sys.fw.bservice_age"

    const/16 v1, 0x1388

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 1412
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    .line 1416
    const-string/jumbo v0, "ro.sys.fw.bservice_limit"

    const/4 v1, 0x5

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 1415
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    .line 1419
    const-string/jumbo v0, "ro.sys.fw.bservice_enable"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    .line 1418
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    .line 2176
    new-instance v0, Lcom/android/server/am/ActivityManagerService$2;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    .line 2426
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2427
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2428
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2430
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Memory class: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2432
    new-instance v0, Lcom/android/server/ServiceThread;

    const-string/jumbo v1, "ActivityManager"

    .line 2433
    const/4 v2, -0x2

    const/4 v3, 0x0

    .line 2432
    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2434
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v0}, Lcom/android/server/ServiceThread;->start()V

    .line 2435
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2436
    new-instance v0, Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$UiHandler;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 2438
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2439
    const-string/jumbo v3, "foreground"

    const-wide/16 v4, 0x2710

    const/4 v6, 0x0

    move-object v1, p0

    .line 2438
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2440
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2441
    const-string/jumbo v3, "background"

    const-wide/32 v4, 0xea60

    const/4 v6, 0x1

    move-object v1, p0

    .line 2440
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2442
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    aput-object v1, v0, v2

    .line 2443
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x1

    aput-object v1, v0, v2

    .line 2445
    new-instance v0, Lcom/android/server/am/ActiveServices;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2446
    new-instance v0, Lcom/android/server/am/ProviderMap;

    invoke-direct {v0, p0}, Lcom/android/server/am/ProviderMap;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 2449
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v7

    .line 2450
    .local v7, "dataDir":Ljava/io/File;
    new-instance v8, Ljava/io/File;

    const-string/jumbo v0, "system"

    invoke-direct {v8, v7, v0}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 2451
    .local v8, "systemDir":Ljava/io/File;
    invoke-virtual {v8}, Ljava/io/File;->mkdirs()Z

    .line 2452
    new-instance v0, Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v8, v1}, Lcom/android/server/am/BatteryStatsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2453
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V

    .line 2454
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 2456
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v0

    .line 2455
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V

    .line 2459
    new-instance v0, Lcom/android/server/am/ProcessStatsService;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "procstats"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2461
    new-instance v0, Lcom/android/server/AppOpsService;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "appops.xml"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/AppOpsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 2463
    new-instance v0, Landroid/util/AtomicFile;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "urigrants.xml"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, v1}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    .line 2466
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    new-instance v1, Lcom/android/server/am/UserState;

    sget-object v2, Landroid/os/UserHandle;->OWNER:Landroid/os/UserHandle;

    const/4 v3, 0x1

    invoke-direct {v1, v2, v3}, Lcom/android/server/am/UserState;-><init>(Landroid/os/UserHandle;Z)V

    const/4 v2, 0x0

    invoke-virtual {v0, v2, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 2467
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2468
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 2470
    const-string/jumbo v0, "ro.opengles.version"

    .line 2471
    const/4 v1, 0x0

    .line 2470
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    .line 2473
    const-string/jumbo v0, "1"

    const-string/jumbo v1, "debug.track-associations"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 2475
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v0}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 2476
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setLocale(Ljava/util/Locale;)V

    .line 2478
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    const/4 v1, 0x1

    iput v1, v0, Landroid/content/res/Configuration;->seq:I

    const/4 v0, 0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 2479
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 2481
    new-instance v0, Lcom/android/server/am/CompatModePackages;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, p0, v8, v1}, Lcom/android/server/am/CompatModePackages;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    .line 2482
    new-instance v0, Lcom/android/server/firewall/IntentFirewall;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2483
    new-instance v0, Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, p0}, Lcom/android/server/am/RecentTasks;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    .line 2484
    new-instance v0, Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityStackSupervisor;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/RecentTasks;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 2485
    new-instance v0, Lcom/android/server/am/TaskPersister;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, v8, v1, v2}, Lcom/android/server/am/TaskPersister;-><init>(Ljava/io/File;Lcom/android/server/am/ActivityStackSupervisor;Lcom/android/server/am/RecentTasks;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    .line 2487
    new-instance v0, Lcom/android/server/am/ActivityManagerService$3;

    const-string/jumbo v1, "CpuTracker"

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    .line 2517
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 2518
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 2425
    return-void
.end method

.method private final addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 5
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 6046
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 6047
    .local v0, "old":Lcom/android/server/am/ProcessRecord;
    if-ne v0, p1, :cond_3

    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_3

    .line 6049
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Re-adding persistent process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6053
    :cond_0
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord;

    .line 6054
    .local v1, "uidRec":Lcom/android/server/am/UidRecord;
    if-nez v1, :cond_1

    .line 6055
    new-instance v1, Lcom/android/server/am/UidRecord;

    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {v1, v2}, Lcom/android/server/am/UidRecord;-><init>(I)V

    .line 6059
    .restart local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6060
    const/4 v2, 0x0

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 6062
    :cond_1
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 6063
    iget v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    add-int/lit8 v2, v2, 0x1

    iput v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 6064
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4, p1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 6065
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v2, :cond_2

    .line 6066
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, p1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6043
    :cond_2
    return-void

    .line 6050
    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_3
    if-eqz v0, :cond_0

    .line 6051
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Already have existing proc "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " when adding "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method private appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 2
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "oomAdj"    # I
    .param p3, "procState"    # I
    .param p4, "pss"    # J
    .param p6, "memtrack"    # J
    .param p8, "name"    # Ljava/lang/String;

    .prologue
    const/16 v1, 0x20

    .line 15384
    const-string/jumbo v0, "  "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15385
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15386
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15387
    invoke-static {p3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15388
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15389
    invoke-static {p1, p4, p5}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 15390
    const-string/jumbo v0, " kB: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15391
    invoke-virtual {p1, p8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15392
    const-wide/16 v0, 0x0

    cmp-long v0, p6, v0

    if-lez v0, :cond_0

    .line 15393
    const-string/jumbo v0, " ("

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15394
    invoke-virtual {p1, p6, p7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15395
    const-string/jumbo v0, " kB memtrack)"

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15383
    :cond_0
    return-void
.end method

.method private appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 9
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "sb"    # Ljava/lang/StringBuilder;

    .prologue
    .line 12636
    if-nez p1, :cond_0

    .line 12637
    const-string/jumbo v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12638
    return-void

    .line 12643
    :cond_0
    monitor-enter p0

    .line 12644
    :try_start_0
    const-string/jumbo v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12645
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 12646
    .local v1, "flags":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 12647
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string/jumbo v6, "Flags: 0x"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/16 v7, 0x10

    invoke-static {v1, v7}, Ljava/lang/Integer;->toString(II)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12648
    const/4 v2, 0x0

    .local v2, "ip":I
    :goto_0
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v6

    if-ge v2, v6, :cond_2

    .line 12649
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 12650
    .local v4, "pkg":Ljava/lang/String;
    const-string/jumbo v6, "Package: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12652
    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    const/4 v7, 0x0

    invoke-interface {v5, v4, v7, v6}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v3

    .line 12653
    .local v3, "pi":Landroid/content/pm/PackageInfo;
    if-eqz v3, :cond_1

    .line 12654
    const-string/jumbo v6, " v"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v3, Landroid/content/pm/PackageInfo;->versionCode:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 12655
    iget-object v6, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz v6, :cond_1

    .line 12656
    const-string/jumbo v6, " ("

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, ")"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12662
    .end local v3    # "pi":Landroid/content/pm/PackageInfo;
    :cond_1
    :goto_1
    :try_start_2
    const-string/jumbo v6, "\n"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12648
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12659
    :catch_0
    move-exception v0

    .line 12660
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Error getting package info: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1

    .line 12643
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "flags":I
    .end local v2    # "ip":I
    .end local v4    # "pkg":Ljava/lang/String;
    .end local v5    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_0
    move-exception v6

    monitor-exit p0

    throw v6

    .restart local v1    # "flags":I
    .restart local v2    # "ip":I
    .restart local v5    # "pm":Landroid/content/pm/IPackageManager;
    :cond_2
    monitor-exit p0

    .line 12629
    return-void
.end method

.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 11
    .param p0, "out"    # Ljava/lang/StringBuilder;
    .param p1, "memKB"    # J
    .param p3, "label"    # Ljava/lang/String;
    .param p4, "stackLike"    # Z

    .prologue
    const-wide/16 v8, 0x400

    .line 14838
    const/16 v5, 0x2e

    invoke-virtual {p3, v5}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v4

    .line 14839
    .local v4, "start":I
    if-ltz v4, :cond_0

    add-int/lit8 v4, v4, 0x1

    .line 14841
    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v2

    .line 14842
    .local v2, "end":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v5, v5

    if-ge v3, v5, :cond_3

    .line 14843
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    cmp-long v5, v6, p1

    if-ltz v5, :cond_2

    .line 14844
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    div-long v0, v6, v8

    .line 14845
    .local v0, "bucket":J
    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 14846
    if-eqz p4, :cond_1

    const-string/jumbo v5, "MB."

    :goto_2
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14847
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 14848
    return-void

    .line 14840
    .end local v0    # "bucket":J
    .end local v2    # "end":I
    .end local v3    # "i":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 14846
    .restart local v0    # "bucket":J
    .restart local v2    # "end":I
    .restart local v3    # "i":I
    :cond_1
    const-string/jumbo v5, "MB "

    goto :goto_2

    .line 14842
    .end local v0    # "bucket":J
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 14851
    :cond_3
    div-long v6, p1, v8

    invoke-virtual {p0, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 14852
    if-eqz p4, :cond_4

    const-string/jumbo v5, "MB."

    :goto_3
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14853
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 14837
    return-void

    .line 14852
    :cond_4
    const-string/jumbo v5, "MB "

    goto :goto_3
.end method

.method private appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 10
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "mi"    # Lcom/android/server/am/ProcessMemInfo;

    .prologue
    const/16 v9, 0xa

    .line 15400
    iget v2, p2, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v3, p2, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v4, p2, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v6, p2, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v8, p2, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 15401
    const-string/jumbo v0, " (pid "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15402
    iget v0, p2, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 15403
    const-string/jumbo v0, ") "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15404
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15405
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15406
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 15407
    const-string/jumbo v0, "                      "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15408
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15409
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15399
    :cond_0
    return-void
.end method

.method private final applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z
    .locals 25
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "doingAll"    # Z
    .param p3, "now"    # J
    .param p5, "nowElapsed"    # J

    .prologue
    .line 18935
    const/16 v23, 0x1

    .line 18937
    .local v23, "success":Z
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    if-eq v4, v5, :cond_0

    .line 18938
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "app_uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18939
    const-string/jumbo v5, ",app_pid="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18939
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18939
    const-string/jumbo v5, ",oom_adj="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18939
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18940
    const-string/jumbo v5, ",setAdj="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18940
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18940
    const-string/jumbo v5, ",hasShownUi="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18940
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v4, :cond_e

    const/4 v4, 0x1

    .line 18938
    :goto_0
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18941
    const-string/jumbo v5, ",cached="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18941
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-eqz v4, :cond_f

    const/4 v4, 0x1

    .line 18938
    :goto_1
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18942
    const-string/jumbo v5, ",fA="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18942
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eqz v4, :cond_10

    const/4 v4, 0x1

    .line 18938
    :goto_2
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18943
    const-string/jumbo v5, ",fS="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18943
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v4, :cond_11

    const/4 v4, 0x1

    .line 18938
    :goto_3
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18944
    const-string/jumbo v5, ",systemNoUi="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18944
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v4, :cond_12

    const/4 v4, 0x1

    .line 18938
    :goto_4
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18945
    const-string/jumbo v5, ",curSchedGroup="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18945
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18946
    const-string/jumbo v5, ",curProcState="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18946
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18946
    const-string/jumbo v5, ",setProcState="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18946
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18947
    const-string/jumbo v5, ",killed="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18947
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-eqz v4, :cond_13

    const/4 v4, 0x1

    .line 18938
    :goto_5
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18947
    const-string/jumbo v5, ",killedByAm="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18947
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v4, :cond_14

    const/4 v4, 0x1

    .line 18938
    :goto_6
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 18948
    const-string/jumbo v5, ",debugging="

    .line 18938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18948
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    if-eqz v4, :cond_15

    const/4 v4, 0x1

    .line 18938
    :goto_7
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    .line 18949
    .local v20, "seempStr":Ljava/lang/String;
    const/16 v4, 0x181

    move-object/from16 v0, v20

    invoke-static {v4, v0}, Landroid/util/SeempLog;->record_str(ILjava/lang/String;)I

    .line 18950
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    .line 18953
    .end local v20    # "seempStr":Ljava/lang/String;
    :cond_0
    const/4 v11, 0x0

    .line 18955
    .local v11, "changes":I
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-eq v4, v5, :cond_1

    .line 18956
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-static {v4, v5, v6}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 18960
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 18963
    :cond_1
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-eq v4, v5, :cond_2

    .line 18964
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 18968
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    if-eqz v4, :cond_16

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v4, :cond_16

    .line 18969
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v4, :cond_16

    .line 18970
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    const/4 v5, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 18971
    const/16 v23, 0x0

    .line 18996
    :cond_2
    :goto_8
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eq v4, v5, :cond_3

    .line 18997
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    .line 18998
    const/4 v11, 0x1

    .line 19000
    :cond_3
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_4

    .line 19001
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    .line 19002
    or-int/lit8 v11, v11, 0x2

    .line 19003
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_4

    .line 19010
    :try_start_0
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-interface {v4, v5}, Landroid/app/IApplicationThread;->setProcessState(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 19015
    :cond_4
    :goto_9
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v5, -0x1

    if-eq v4, v5, :cond_5

    .line 19016
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-static {v4, v5}, Lcom/android/server/am/ProcessList;->procStatesDifferForMem(II)Z

    move-result v4

    .line 19015
    if-eqz v4, :cond_18

    .line 19030
    :cond_5
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    .line 19031
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 19032
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    .line 19031
    const/4 v5, 0x1

    move-wide/from16 v8, p3

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 19047
    :cond_6
    :goto_a
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_1e

    .line 19051
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0xa

    if-ge v4, v5, :cond_1a

    const/16 v21, 0x1

    .line 19052
    .local v21, "setImportant":Z
    :goto_b
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xa

    if-ge v4, v5, :cond_1b

    const/4 v12, 0x1

    .line 19053
    .local v12, "curImportant":Z
    :goto_c
    if-eqz v21, :cond_7

    if-eqz v12, :cond_1c

    .line 19068
    :cond_7
    :goto_d
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    .line 19070
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 19071
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0xc

    if-lt v4, v5, :cond_8

    .line 19072
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 19074
    :cond_8
    if-nez p2, :cond_1d

    .line 19075
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p3

    invoke-direct {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 19086
    .end local v12    # "curImportant":Z
    .end local v21    # "setImportant":Z
    :cond_9
    :goto_e
    if-eqz v11, :cond_d

    .line 19089
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v15, v4, -0x1

    .line 19090
    .local v15, "i":I
    const/16 v16, 0x0

    .line 19091
    :goto_f
    if-ltz v15, :cond_a

    .line 19092
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 19093
    .local v16, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v5, :cond_1f

    .line 19100
    .end local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_a
    if-gez v15, :cond_c

    .line 19102
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 19103
    .local v10, "NA":I
    if-lez v10, :cond_20

    .line 19104
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    add-int/lit8 v5, v10, -0x1

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 19112
    .restart local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :goto_10
    const/4 v4, 0x0

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 19113
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    .line 19114
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    .line 19115
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-nez v4, :cond_b

    .line 19118
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0x1f

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    .line 19120
    :cond_b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v0, v16

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19122
    .end local v10    # "NA":I
    .end local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_c
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int/2addr v4, v11

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 19123
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    .line 19124
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    move-object/from16 v0, v16

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    .line 19125
    move-object/from16 v0, v16

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    if-eqz v4, :cond_21

    .line 19126
    const/4 v4, 0x3

    new-array v0, v4, [Ljava/lang/Object;

    move-object/from16 v17, v0

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x0

    aput-object v4, v17, v5

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x1

    aput-object v4, v17, v5

    move-object/from16 v0, v16

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v4

    const/4 v5, 0x2

    aput-object v4, v17, v5

    .line 19127
    .local v17, "o":[Ljava/lang/Object;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    move-object/from16 v0, v17

    invoke-interface {v4, v5, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 19140
    .end local v15    # "i":I
    .end local v17    # "o":[Ljava/lang/Object;
    :cond_d
    :goto_11
    return v23

    .line 18940
    .end local v11    # "changes":I
    :cond_e
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 18941
    :cond_f
    const/4 v4, 0x0

    goto/16 :goto_1

    .line 18942
    :cond_10
    const/4 v4, 0x0

    goto/16 :goto_2

    .line 18943
    :cond_11
    const/4 v4, 0x0

    goto/16 :goto_3

    .line 18944
    :cond_12
    const/4 v4, 0x0

    goto/16 :goto_4

    .line 18947
    :cond_13
    const/4 v4, 0x0

    goto/16 :goto_5

    :cond_14
    const/4 v4, 0x0

    goto/16 :goto_6

    .line 18948
    :cond_15
    const/4 v4, 0x0

    goto/16 :goto_7

    .line 18974
    .restart local v11    # "changes":I
    :cond_16
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 18976
    .local v18, "oldId":J
    :try_start_1
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-static {v4, v5}, Landroid/os/Process;->setProcessGroup(II)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18982
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18992
    :goto_12
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 18993
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-gtz v4, :cond_17

    const/4 v4, 0x1

    .line 18992
    :goto_13
    invoke-static {v5, v4}, Landroid/os/Process;->setSwappiness(IZ)Z

    goto/16 :goto_8

    .line 18977
    :catch_0
    move-exception v14

    .line 18978
    .local v14, "e":Ljava/lang/Exception;
    :try_start_2
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Failed setting process group of "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18979
    const-string/jumbo v6, " to "

    .line 18978
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18979
    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 18978
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18980
    invoke-virtual {v14}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 18982
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_12

    .line 18981
    .end local v14    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v4

    .line 18982
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18981
    throw v4

    .line 18993
    :cond_17
    const/4 v4, 0x0

    goto :goto_13

    .line 19038
    .end local v18    # "oldId":J
    :cond_18
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    cmp-long v4, p3, v4

    if-gtz v4, :cond_19

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    const-wide/32 v6, 0x1b7740

    add-long/2addr v4, v6

    cmp-long v4, p3, v4

    if-lez v4, :cond_6

    .line 19039
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    .line 19040
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 19039
    invoke-static {v6}, Lcom/android/server/am/ProcessList;->minTimeFromStateChange(Z)J

    move-result-wide v6

    add-long/2addr v4, v6

    cmp-long v4, p3, v4

    if-lez v4, :cond_6

    .line 19041
    :cond_19
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 19042
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 19043
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    .line 19042
    const/4 v5, 0x0

    move-wide/from16 v8, p3

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto/16 :goto_a

    .line 19051
    :cond_1a
    const/16 v21, 0x0

    .restart local v21    # "setImportant":Z
    goto/16 :goto_b

    .line 19052
    :cond_1b
    const/4 v12, 0x0

    .restart local v12    # "curImportant":Z
    goto/16 :goto_c

    .line 19058
    :cond_1c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v22

    .line 19059
    .local v22, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v22

    .line 19060
    :try_start_3
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19061
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 19060
    move-object/from16 v0, v22

    move-wide/from16 v1, p5

    invoke-virtual {v0, v4, v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    monitor-exit v22

    .line 19063
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    goto/16 :goto_d

    .line 19059
    :catchall_1
    move-exception v4

    monitor-exit v22

    throw v4

    .line 19077
    .end local v22    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_1d
    const/4 v4, 0x1

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    goto/16 :goto_e

    .line 19079
    .end local v12    # "curImportant":Z
    .end local v21    # "setImportant":Z
    :cond_1e
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v4, :cond_9

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v4, p5, v4

    .line 19080
    const-wide/32 v6, 0x5265c00

    .line 19079
    cmp-long v4, v4, v6

    if-lez v4, :cond_9

    .line 19083
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    goto/16 :goto_e

    .line 19098
    .restart local v15    # "i":I
    .restart local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_1f
    add-int/lit8 v15, v15, -0x1

    goto/16 :goto_f

    .line 19108
    .end local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    .restart local v10    # "NA":I
    :cond_20
    new-instance v16, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-direct/range {v16 .. v16}, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;-><init>()V

    .restart local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    goto/16 :goto_10

    .line 19128
    .end local v10    # "NA":I
    .end local v16    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_21
    move-object/from16 v0, v16

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    if-nez v4, :cond_d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    if-eqz v4, :cond_d

    .line 19129
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_11

    .line 19011
    .end local v15    # "i":I
    :catch_1
    move-exception v13

    .local v13, "e":Landroid/os/RemoteException;
    goto/16 :goto_9
.end method

.method private applyUserId(II)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "userId"    # I

    .prologue
    .line 20889
    invoke-static {p2, p1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    return v0
.end method

.method private final attachApplicationLocked(Landroid/app/IApplicationThread;I)Z
    .locals 36
    .param p1, "thread"    # Landroid/app/IApplicationThread;
    .param p2, "pid"    # I

    .prologue
    .line 6177
    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_0

    if-ltz p2, :cond_0

    .line 6178
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v10

    .line 6179
    :try_start_0
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, p2

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .local v24, "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit v10

    .line 6185
    .end local v24    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v24, :cond_2

    .line 6186
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "No pending application record for pid "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 6187
    const-string/jumbo v12, " (IApplicationThread "

    .line 6186
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 6187
    const-string/jumbo v12, "); dropping process"

    .line 6186
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6188
    const/16 v6, 0x7551

    move/from16 v0, p2

    invoke-static {v6, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 6189
    if-lez p2, :cond_1

    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_1

    .line 6190
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 6199
    :goto_1
    const/4 v6, 0x0

    return v6

    .line 6178
    :catchall_0
    move-exception v6

    monitor-exit v10

    throw v6

    .line 6182
    :cond_0
    const/16 v24, 0x0

    .local v24, "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 6194
    .end local v24    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_1
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_1

    .line 6195
    :catch_0
    move-exception v28

    .local v28, "e":Ljava/lang/Exception;
    goto :goto_1

    .line 6204
    .end local v28    # "e":Ljava/lang/Exception;
    :cond_2
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_3

    .line 6205
    const/4 v6, 0x1

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6213
    :cond_3
    move-object/from16 v0, v24

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 6215
    .local v7, "processName":Ljava/lang/String;
    :try_start_2
    new-instance v23, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    move-object/from16 v0, v23

    move-object/from16 v1, p0

    move-object/from16 v2, v24

    move/from16 v3, p2

    move-object/from16 v4, p1

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 6217
    .local v23, "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    const/4 v10, 0x0

    move-object/from16 v0, v23

    invoke-interface {v6, v0, v10}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 6218
    move-object/from16 v0, v23

    move-object/from16 v1, v24

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->deathRecipient:Landroid/os/IBinder$DeathRecipient;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 6225
    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    move-object/from16 v0, v24

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/4 v12, 0x0

    aput-object v10, v6, v12

    move-object/from16 v0, v24

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/4 v12, 0x1

    aput-object v10, v6, v12

    move-object/from16 v0, v24

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v12, 0x2

    aput-object v10, v6, v12

    const/16 v10, 0x753a

    invoke-static {v10, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6227
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 6228
    const/16 v6, -0x64

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/16 v6, -0x64

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 6229
    const/4 v6, -0x1

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    const/4 v6, -0x1

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 6230
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 6231
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6232
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 6233
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 6234
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 6235
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 6237
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x14

    move-object/from16 v0, v24

    invoke-virtual {v6, v10, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 6239
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v6, :cond_11

    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v31

    .line 6240
    :goto_2
    if-eqz v31, :cond_12

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v9

    .line 6242
    :goto_3
    if-eqz v9, :cond_4

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 6243
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x3b

    invoke-virtual {v6, v10}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v30

    .line 6244
    .local v30, "msg":Landroid/os/Message;
    move-object/from16 v0, v24

    move-object/from16 v1, v30

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 6245
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v12, 0x2710

    move-object/from16 v0, v30

    invoke-virtual {v6, v0, v12, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 6248
    .end local v30    # "msg":Landroid/os/Message;
    :cond_4
    if-nez v31, :cond_5

    .line 6249
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Launching preboot mode app: "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6256
    :cond_5
    const/4 v15, 0x0

    .line 6257
    .local v15, "testMode":I
    :try_start_3
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-eqz v6, :cond_6

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 6258
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v6, :cond_13

    .line 6259
    const/4 v15, 0x2

    .line 6261
    :goto_4
    const/4 v6, 0x1

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 6262
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v6, :cond_6

    .line 6263
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 6264
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    move-object/from16 v0, p0

    iput-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 6267
    :cond_6
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    move-object/from16 v34, v0

    .line 6268
    .local v34, "profileFile":Ljava/lang/String;
    const/16 v33, 0x0

    .line 6269
    .local v33, "profileFd":Landroid/os/ParcelFileDescriptor;
    const/16 v35, 0x0

    .line 6270
    .local v35, "samplingInterval":I
    const/16 v32, 0x0

    .line 6271
    .local v32, "profileAutoStop":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-eqz v6, :cond_7

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 6272
    move-object/from16 v0, v24

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 6273
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    move-object/from16 v34, v0

    .line 6274
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    move-object/from16 v33, v0

    .line 6275
    .local v33, "profileFd":Landroid/os/ParcelFileDescriptor;
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    move/from16 v35, v0

    .line 6276
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    move/from16 v32, v0

    .line 6278
    .end local v32    # "profileAutoStop":Z
    .end local v33    # "profileFd":Landroid/os/ParcelFileDescriptor;
    :cond_7
    const/16 v16, 0x0

    .line 6279
    .local v16, "enableOpenGlTrace":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v6, :cond_8

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 6280
    const/16 v16, 0x1

    .line 6281
    const/4 v6, 0x0

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 6285
    :cond_8
    const/16 v29, 0x0

    .line 6286
    .local v29, "isRestrictedBackupMode":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_a

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 6287
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x2

    if-eq v6, v10, :cond_9

    .line 6288
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x3

    if-ne v6, v10, :cond_14

    .line 6287
    :cond_9
    const/16 v29, 0x1

    .line 6292
    :cond_a
    :goto_5
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_16

    .line 6293
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 6292
    :goto_6
    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 6295
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v6, :cond_b

    .line 6296
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 6300
    :cond_b
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_17

    .line 6301
    move-object/from16 v0, v24

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 6302
    .local v8, "appInfo":Landroid/content/pm/ApplicationInfo;
    :goto_7
    move-object/from16 v0, p0

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v6

    move-object/from16 v0, v24

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    .line 6303
    if-eqz v33, :cond_c

    .line 6304
    invoke-virtual/range {v33 .. v33}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object v33

    .line 6306
    :cond_c
    if-nez v34, :cond_18

    const/4 v11, 0x0

    .line 6308
    :goto_8
    move-object/from16 v0, v24

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 6309
    move-object/from16 v0, v24

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    move-object/from16 v0, v24

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 6310
    move-object/from16 v0, v24

    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 6311
    if-nez v29, :cond_19

    if-eqz v31, :cond_19

    const/16 v17, 0x0

    :goto_9
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v18, v0

    .line 6312
    new-instance v19, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v19

    invoke-direct {v0, v6}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    move-object/from16 v20, v0

    .line 6313
    move-object/from16 v0, v24

    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Ljava/util/HashMap;

    move-result-object v21

    .line 6314
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    invoke-virtual {v6}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v22

    move-object/from16 v6, p1

    .line 6308
    invoke-interface/range {v6 .. v22}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;)V

    .line 6315
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 6316
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, v24

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v24

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2

    .line 6330
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6333
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6335
    const/16 v25, 0x0

    .line 6336
    .local v25, "badApp":Z
    const/16 v26, 0x0

    .line 6339
    .local v26, "didSomething":Z
    if-eqz v31, :cond_d

    .line 6341
    :try_start_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Lcom/android/server/am/ActivityStackSupervisor;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_3

    move-result v6

    if-eqz v6, :cond_d

    .line 6342
    const/16 v26, 0x1

    .line 6351
    :cond_d
    :goto_a
    if-nez v25, :cond_e

    .line 6353
    :try_start_5
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0, v7}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_4

    move-result v6

    or-int v26, v26, v6

    .line 6361
    .end local v26    # "didSomething":Z
    :cond_e
    :goto_b
    if-nez v25, :cond_f

    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v6

    if-eqz v6, :cond_f

    .line 6363
    :try_start_6
    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_5

    move-result v6

    or-int v26, v26, v6

    .line 6372
    :cond_f
    :goto_c
    if-nez v25, :cond_10

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_10

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, v24

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v6, v10, :cond_10

    .line 6375
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 6377
    :try_start_7
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 6378
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v10, v10, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v10}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v10

    .line 6379
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v12, v12, Lcom/android/server/am/BackupRecord;->backupMode:I

    .line 6377
    move-object/from16 v0, p1

    invoke-interface {v0, v6, v10, v12}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_6

    .line 6386
    :cond_10
    :goto_d
    if-eqz v25, :cond_1a

    .line 6387
    const-string/jumbo v6, "error during init"

    const/4 v10, 0x1

    move-object/from16 v0, v24

    invoke-virtual {v0, v6, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 6388
    const/4 v6, 0x0

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6389
    const/4 v6, 0x0

    return v6

    .line 6219
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v15    # "testMode":I
    .end local v16    # "enableOpenGlTrace":Z
    .end local v23    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    .end local v25    # "badApp":Z
    .end local v29    # "isRestrictedBackupMode":Z
    .end local v34    # "profileFile":Ljava/lang/String;
    .end local v35    # "samplingInterval":I
    :catch_1
    move-exception v27

    .line 6220
    .local v27, "e":Landroid/os/RemoteException;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 6221
    const-string/jumbo v6, "link fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 6222
    const/4 v6, 0x0

    return v6

    .line 6239
    .end local v27    # "e":Landroid/os/RemoteException;
    .restart local v23    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    :cond_11
    const/16 v31, 0x1

    .local v31, "normalMode":Z
    goto/16 :goto_2

    .line 6240
    .end local v31    # "normalMode":Z
    :cond_12
    const/4 v9, 0x0

    .local v9, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    goto/16 :goto_3

    .line 6260
    .end local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v15    # "testMode":I
    :cond_13
    const/4 v15, 0x1

    goto/16 :goto_4

    .line 6289
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v29    # "isRestrictedBackupMode":Z
    .restart local v34    # "profileFile":Ljava/lang/String;
    .restart local v35    # "samplingInterval":I
    :cond_14
    :try_start_8
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x1

    if-ne v6, v10, :cond_15

    const/16 v29, 0x1

    goto/16 :goto_5

    :cond_15
    const/16 v29, 0x0

    goto/16 :goto_5

    .line 6294
    :cond_16
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto/16 :goto_6

    .line 6301
    :cond_17
    move-object/from16 v0, v24

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    goto/16 :goto_7

    .line 6307
    :cond_18
    new-instance v11, Landroid/app/ProfilerInfo;

    move-object/from16 v0, v34

    move-object/from16 v1, v33

    move/from16 v2, v35

    move/from16 v3, v32

    invoke-direct {v11, v0, v1, v2, v3}, Landroid/app/ProfilerInfo;-><init>(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;IZ)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_2

    .local v11, "profilerInfo":Landroid/app/ProfilerInfo;
    goto/16 :goto_8

    .line 6311
    .end local v11    # "profilerInfo":Landroid/app/ProfilerInfo;
    :cond_19
    const/16 v17, 0x1

    goto/16 :goto_9

    .line 6317
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "enableOpenGlTrace":Z
    .end local v29    # "isRestrictedBackupMode":Z
    .end local v34    # "profileFile":Ljava/lang/String;
    .end local v35    # "samplingInterval":I
    :catch_2
    move-exception v28

    .line 6321
    .restart local v28    # "e":Ljava/lang/Exception;
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Exception thrown during bind of "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6323
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 6324
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 6325
    const-string/jumbo v6, "bind fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 6326
    const/4 v6, 0x0

    return v6

    .line 6344
    .end local v28    # "e":Ljava/lang/Exception;
    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v25    # "badApp":Z
    .restart local v26    # "didSomething":Z
    .restart local v29    # "isRestrictedBackupMode":Z
    .restart local v34    # "profileFile":Ljava/lang/String;
    .restart local v35    # "samplingInterval":I
    :catch_3
    move-exception v28

    .line 6345
    .restart local v28    # "e":Ljava/lang/Exception;
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Exception thrown launching activities in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6346
    const/16 v25, 0x1

    goto/16 :goto_a

    .line 6354
    .end local v28    # "e":Ljava/lang/Exception;
    :catch_4
    move-exception v28

    .line 6355
    .restart local v28    # "e":Ljava/lang/Exception;
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Exception thrown starting services in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6356
    const/16 v25, 0x1

    goto/16 :goto_b

    .line 6364
    .end local v26    # "didSomething":Z
    .end local v28    # "e":Ljava/lang/Exception;
    :catch_5
    move-exception v28

    .line 6366
    .restart local v28    # "e":Ljava/lang/Exception;
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6367
    const/16 v25, 0x1

    goto/16 :goto_c

    .line 6380
    .end local v28    # "e":Ljava/lang/Exception;
    :catch_6
    move-exception v28

    .line 6381
    .restart local v28    # "e":Ljava/lang/Exception;
    const-string/jumbo v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Exception thrown creating backup agent in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6382
    const/16 v25, 0x1

    goto/16 :goto_d

    .line 6392
    .end local v28    # "e":Ljava/lang/Exception;
    :cond_1a
    if-nez v26, :cond_1b

    .line 6393
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 6396
    :cond_1b
    const/4 v6, 0x1

    return v6
.end method

.method private final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    .locals 78
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermissions"    # [Ljava/lang/String;
    .param p10, "appOp"    # I
    .param p11, "options"    # Landroid/os/Bundle;
    .param p12, "ordered"    # Z
    .param p13, "sticky"    # Z
    .param p14, "callingPid"    # I
    .param p15, "callingUid"    # I
    .param p16, "userId"    # I

    .prologue
    .line 16740
    new-instance v14, Landroid/content/Intent;

    move-object/from16 v0, p3

    invoke-direct {v14, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 16743
    .end local p3    # "intent":Landroid/content/Intent;
    .local v14, "intent":Landroid/content/Intent;
    const/16 v4, 0x10

    invoke-virtual {v14, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 16746
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v4, :cond_0

    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x2000000

    and-int/2addr v4, v6

    if-nez v4, :cond_0

    .line 16747
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v14, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 16753
    :cond_0
    if-eqz p5, :cond_1

    if-eqz p12, :cond_3

    .line 16758
    :cond_1
    :goto_0
    const-string/jumbo v10, "broadcast"

    const/4 v8, 0x1

    const/4 v9, 0x0

    move-object/from16 v4, p0

    move/from16 v5, p14

    move/from16 v6, p15

    move/from16 v7, p16

    move-object/from16 v11, p2

    .line 16757
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p16

    .line 16764
    const/4 v4, -0x1

    move/from16 v0, p16

    if-eq v0, v4, :cond_2

    const/4 v4, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 16774
    :cond_2
    const/16 v22, 0x0

    .line 16775
    .local v22, "brOptions":Landroid/app/BroadcastOptions;
    if-eqz p11, :cond_6

    .line 16776
    new-instance v22, Landroid/app/BroadcastOptions;

    .end local v22    # "brOptions":Landroid/app/BroadcastOptions;
    move-object/from16 v0, v22

    move-object/from16 v1, p11

    invoke-direct {v0, v1}, Landroid/app/BroadcastOptions;-><init>(Landroid/os/Bundle;)V

    .line 16777
    .local v22, "brOptions":Landroid/app/BroadcastOptions;
    invoke-virtual/range {v22 .. v22}, Landroid/app/BroadcastOptions;->getTemporaryAppWhitelistDuration()J

    move-result-wide v6

    const-wide/16 v8, 0x0

    cmp-long v4, v6, v8

    if-lez v4, :cond_6

    .line 16782
    const-string/jumbo v5, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    .line 16783
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v8, -0x1

    const/4 v9, 0x1

    move-object/from16 v4, p0

    .line 16781
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-eqz v4, :cond_6

    .line 16785
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16786
    const-string/jumbo v6, " broadcast from "

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16786
    const-string/jumbo v6, " (pid="

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16787
    const-string/jumbo v6, ", uid="

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p15

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16787
    const-string/jumbo v6, ")"

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16788
    const-string/jumbo v6, " requires "

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16789
    const-string/jumbo v6, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    .line 16785
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16790
    .local v62, "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16791
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16754
    .end local v22    # "brOptions":Landroid/app/BroadcastOptions;
    .end local v62    # "msg":Ljava/lang/String;
    :cond_3
    const-string/jumbo v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Broadcast "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " not ordered but result callback requested!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    .line 16765
    :cond_4
    const/16 v4, 0x3e8

    move/from16 v0, p15

    if-ne v0, v4, :cond_5

    .line 16766
    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x2000000

    and-int/2addr v4, v6

    if-nez v4, :cond_2

    .line 16767
    :cond_5
    const-string/jumbo v4, "android.intent.action.ACTION_SHUTDOWN"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    .line 16768
    const-string/jumbo v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Skipping broadcast of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 16769
    const-string/jumbo v7, ": user "

    .line 16768
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p16

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 16769
    const-string/jumbo v7, " is stopped"

    .line 16768
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16770
    const/4 v4, -0x2

    return v4

    .line 16800
    :cond_6
    invoke-static/range {p15 .. p15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v49

    .line 16801
    .local v49, "callingAppId":I
    const/16 v4, 0x3e8

    move/from16 v0, v49

    if-eq v0, v4, :cond_7

    const/16 v4, 0x3e9

    move/from16 v0, v49

    if-ne v0, v4, :cond_9

    .line 16847
    :cond_7
    :goto_1
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v47

    .line 16848
    .local v47, "action":Ljava/lang/String;
    if-eqz v47, :cond_f

    .line 16849
    const-string/jumbo v4, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_e

    .line 16859
    :cond_8
    const-string/jumbo v5, "android.permission.BROADCAST_PACKAGE_REMOVED"

    .line 16860
    const/4 v8, -0x1

    const/4 v9, 0x1

    move-object/from16 v4, p0

    move/from16 v6, p14

    move/from16 v7, p15

    .line 16858
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-eqz v4, :cond_14

    .line 16862
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16863
    const-string/jumbo v6, " broadcast from "

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16863
    const-string/jumbo v6, " (pid="

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16864
    const-string/jumbo v6, ", uid="

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p15

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16864
    const-string/jumbo v6, ")"

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16865
    const-string/jumbo v6, " requires "

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16866
    const-string/jumbo v6, "android.permission.BROADCAST_PACKAGE_REMOVED"

    .line 16862
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16867
    .restart local v62    # "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16868
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16802
    .end local v47    # "action":Ljava/lang/String;
    .end local v62    # "msg":Ljava/lang/String;
    :cond_9
    const/16 v4, 0x7d0

    move/from16 v0, v49

    if-eq v0, v4, :cond_7

    const/16 v4, 0x3ea

    move/from16 v0, v49

    if-eq v0, v4, :cond_7

    .line 16803
    const/16 v4, 0x403

    move/from16 v0, v49

    if-eq v0, v4, :cond_7

    if-eqz p15, :cond_7

    .line 16805
    if-eqz p1, :cond_a

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v4, :cond_7

    .line 16807
    :cond_a
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 16808
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    .line 16807
    invoke-interface {v4, v6}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 16809
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16810
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    .line 16809
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16810
    const-string/jumbo v6, " from pid="

    .line 16809
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16811
    const-string/jumbo v6, ", uid="

    .line 16809
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p15

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16812
    .restart local v62    # "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16813
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16841
    .end local v62    # "msg":Ljava/lang/String;
    :catch_0
    move-exception v53

    .line 16842
    .local v53, "e":Landroid/os/RemoteException;
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v6, "Remote exception"

    move-object/from16 v0, v53

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 16843
    const/4 v4, 0x0

    return v4

    .line 16814
    .end local v53    # "e":Landroid/os/RemoteException;
    :cond_b
    :try_start_1
    const-string/jumbo v4, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_7

    .line 16819
    if-nez p1, :cond_c

    .line 16820
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16821
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    .line 16820
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16821
    const-string/jumbo v6, " from unknown caller."

    .line 16820
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16822
    .restart local v62    # "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16823
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16824
    .end local v62    # "msg":Ljava/lang/String;
    :cond_c
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_d

    .line 16827
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    .line 16828
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 16827
    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_7

    .line 16829
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16830
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    .line 16829
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16830
    const-string/jumbo v6, " to "

    .line 16829
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16831
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    .line 16829
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16831
    const-string/jumbo v6, " from "

    .line 16829
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16832
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 16829
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16833
    .restart local v62    # "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16834
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16838
    .end local v62    # "msg":Ljava/lang/String;
    :cond_d
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto/16 :goto_1

    .line 16849
    .restart local v47    # "action":Ljava/lang/String;
    :cond_e
    const-string/jumbo v4, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_8

    const-string/jumbo v4, "android.intent.action.PACKAGE_CHANGED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_8

    const-string/jumbo v4, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_8

    const-string/jumbo v4, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_8

    const-string/jumbo v4, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_10

    .line 16939
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v52

    .line 16941
    .local v52, "data":Landroid/net/Uri;
    if-eqz v52, :cond_f

    invoke-virtual/range {v52 .. v52}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v5

    .local v5, "ssp":Ljava/lang/String;
    if-eqz v5, :cond_f

    .line 16943
    const-string/jumbo v4, "android.intent.extra.REPLACING"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v69

    .line 16944
    .local v69, "replacing":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    move/from16 v0, v69

    invoke-virtual {v4, v5, v0}, Lcom/android/server/am/CompatModePackages;->handlePackageAddedLocked(Ljava/lang/String;Z)V

    .line 16947
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 16948
    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 16947
    invoke-interface {v4, v5, v6, v7}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v48

    .line 16949
    .local v48, "ai":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 16950
    if-eqz v48, :cond_21

    move-object/from16 v0, v48

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->versionCode:I

    .line 16949
    :goto_2
    invoke-virtual {v6, v5, v4}, Lcom/android/server/am/BatteryStatsService;->notePackageInstalled(Ljava/lang/String;I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 16983
    .end local v5    # "ssp":Ljava/lang/String;
    .end local v48    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v52    # "data":Landroid/net/Uri;
    .end local v69    # "replacing":Z
    :cond_f
    :goto_3
    if-eqz p13, :cond_2b

    .line 16984
    const-string/jumbo v4, "android.permission.BROADCAST_STICKY"

    move-object/from16 v0, p0

    move/from16 v1, p14

    move/from16 v2, p15

    invoke-virtual {v0, v4, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v4

    if-eqz v4, :cond_23

    .line 16987
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16988
    const-string/jumbo v6, ", uid="

    .line 16987
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p15

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16989
    const-string/jumbo v6, " requires "

    .line 16987
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 16989
    const-string/jumbo v6, "android.permission.BROADCAST_STICKY"

    .line 16987
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16990
    .restart local v62    # "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16991
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16849
    .end local v62    # "msg":Ljava/lang/String;
    :cond_10
    const-string/jumbo v4, "android.intent.action.TIMEZONE_CHANGED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_11

    .line 16959
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0xd

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto :goto_3

    .line 16849
    :cond_11
    const-string/jumbo v4, "android.intent.action.TIME_SET"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_12

    .line 16964
    const-string/jumbo v4, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-eqz v4, :cond_22

    const/16 v57, 0x1

    .line 16966
    .local v57, "is24Hour":I
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x29

    const/4 v8, 0x0

    move/from16 v0, v57

    invoke-virtual {v6, v7, v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 16967
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v72

    .line 16968
    .local v72, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v72

    .line 16969
    :try_start_3
    invoke-virtual/range {v72 .. v72}, Lcom/android/internal/os/BatteryStatsImpl;->noteCurrentTimeChangedLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit v72

    goto/16 :goto_3

    .line 16849
    .end local v57    # "is24Hour":I
    .end local v72    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_12
    const-string/jumbo v4, "android.intent.action.CLEAR_DNS_CACHE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_13

    .line 16973
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x1c

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto/16 :goto_3

    .line 16849
    :cond_13
    const-string/jumbo v4, "android.intent.action.PROXY_CHANGE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_f

    .line 16976
    const-string/jumbo v4, "android.intent.extra.PROXY_INFO"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v64

    check-cast v64, Landroid/net/ProxyInfo;

    .line 16977
    .local v64, "proxy":Landroid/net/ProxyInfo;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x1d

    move-object/from16 v0, v64

    invoke-virtual {v6, v7, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto/16 :goto_3

    .line 16870
    .end local v64    # "proxy":Landroid/net/ProxyInfo;
    :cond_14
    const-string/jumbo v4, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_15

    .line 16872
    invoke-virtual {v14}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v55

    .line 16873
    .local v55, "intentExtras":Landroid/os/Bundle;
    if-eqz v55, :cond_1a

    .line 16874
    const-string/jumbo v4, "android.intent.extra.UID"

    move-object/from16 v0, v55

    invoke-virtual {v0, v4}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result v75

    .line 16875
    .local v75, "uid":I
    :goto_5
    if-ltz v75, :cond_f

    .line 16876
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move/from16 v0, v75

    invoke-virtual {v4, v0}, Lcom/android/server/am/BatteryStatsService;->removeUid(I)V

    .line 16877
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    move/from16 v0, v75

    invoke-virtual {v4, v0}, Lcom/android/server/AppOpsService;->uidRemoved(I)V

    goto/16 :goto_3

    .line 16870
    .end local v55    # "intentExtras":Landroid/os/Bundle;
    .end local v75    # "uid":I
    :cond_15
    const-string/jumbo v4, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_16

    .line 16884
    const-string/jumbo v4, "android.intent.extra.changed_package_list"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v61

    .line 16885
    .local v61, "list":[Ljava/lang/String;
    if-eqz v61, :cond_f

    move-object/from16 v0, v61

    array-length v4, v0

    if-lez v4, :cond_f

    .line 16886
    const/16 v54, 0x0

    .local v54, "i":I
    :goto_6
    move-object/from16 v0, v61

    array-length v4, v0

    move/from16 v0, v54

    if-ge v0, v4, :cond_1b

    .line 16887
    aget-object v5, v61, v54

    .line 16888
    const-string/jumbo v13, "storage unmount"

    .line 16887
    const/4 v6, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    .line 16888
    const/4 v10, 0x0

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v12, p16

    .line 16887
    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 16886
    add-int/lit8 v54, v54, 0x1

    goto :goto_6

    .line 16870
    .end local v54    # "i":I
    .end local v61    # "list":[Ljava/lang/String;
    :cond_16
    const-string/jumbo v4, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_17

    .line 16897
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v6, -0x1

    invoke-virtual {v4, v6}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    goto/16 :goto_3

    .line 16870
    :cond_17
    const-string/jumbo v4, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_19

    .line 16901
    :goto_7
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v52

    .line 16903
    .restart local v52    # "data":Landroid/net/Uri;
    if-eqz v52, :cond_f

    invoke-virtual/range {v52 .. v52}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "ssp":Ljava/lang/String;
    if-eqz v5, :cond_f

    .line 16904
    const-string/jumbo v4, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v47

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v66

    .line 16905
    .local v66, "removed":Z
    if-eqz v66, :cond_1d

    .line 16906
    const-string/jumbo v4, "android.intent.extra.REPLACING"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-eqz v4, :cond_1c

    const/4 v11, 0x0

    .line 16908
    .local v11, "fullUninstall":Z
    :goto_8
    const-string/jumbo v4, "android.intent.extra.DONT_KILL_APP"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-eqz v4, :cond_1e

    const/16 v59, 0x0

    .line 16909
    .local v59, "killProcess":Z
    :goto_9
    if-eqz v59, :cond_18

    .line 16911
    const-string/jumbo v4, "android.intent.extra.UID"

    const/4 v6, -0x1

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v4

    .line 16910
    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    .line 16913
    if-eqz v66, :cond_1f

    const-string/jumbo v13, "pkg removed"

    .line 16912
    :goto_a
    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    move-object/from16 v4, p0

    move/from16 v12, p16

    .line 16910
    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 16915
    :cond_18
    if-eqz v66, :cond_20

    .line 16917
    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/String;

    const/4 v6, 0x0

    aput-object v5, v4, v6

    .line 16916
    const/4 v6, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v6, v4, v1}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 16918
    if-eqz v11, :cond_f

    .line 16919
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 16920
    const-string/jumbo v6, "android.intent.extra.UID"

    const/4 v7, -0x1

    invoke-virtual {v14, v6, v7}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v6

    .line 16919
    invoke-virtual {v4, v6, v5}, Lcom/android/server/AppOpsService;->packageRemoved(ILjava/lang/String;)V

    .line 16923
    const/4 v4, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v5, v1, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 16925
    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->removeTasksByPackageNameLocked(Ljava/lang/String;I)V

    .line 16926
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4, v5}, Lcom/android/server/am/BatteryStatsService;->notePackageUninstalled(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 16870
    .end local v5    # "ssp":Ljava/lang/String;
    .end local v11    # "fullUninstall":Z
    .end local v52    # "data":Landroid/net/Uri;
    .end local v59    # "killProcess":Z
    .end local v66    # "removed":Z
    :cond_19
    const-string/jumbo v4, "android.intent.action.PACKAGE_CHANGED"

    move-object/from16 v0, v47

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_f

    goto/16 :goto_7

    .line 16874
    .restart local v55    # "intentExtras":Landroid/os/Bundle;
    :cond_1a
    const/16 v75, -0x1

    .restart local v75    # "uid":I
    goto/16 :goto_5

    .line 16890
    .end local v55    # "intentExtras":Landroid/os/Bundle;
    .end local v75    # "uid":I
    .restart local v54    # "i":I
    .restart local v61    # "list":[Ljava/lang/String;
    :cond_1b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v6, -0x1

    invoke-virtual {v4, v6}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    .line 16892
    const/4 v4, 0x1

    .line 16891
    move-object/from16 v0, p0

    move-object/from16 v1, v61

    move/from16 v2, p16

    invoke-direct {v0, v4, v1, v2}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    goto/16 :goto_3

    .line 16906
    .end local v54    # "i":I
    .end local v61    # "list":[Ljava/lang/String;
    .restart local v5    # "ssp":Ljava/lang/String;
    .restart local v52    # "data":Landroid/net/Uri;
    .restart local v66    # "removed":Z
    :cond_1c
    const/4 v11, 0x1

    .restart local v11    # "fullUninstall":Z
    goto/16 :goto_8

    .line 16905
    .end local v11    # "fullUninstall":Z
    :cond_1d
    const/4 v11, 0x0

    .restart local v11    # "fullUninstall":Z
    goto/16 :goto_8

    .line 16908
    :cond_1e
    const/16 v59, 0x1

    .restart local v59    # "killProcess":Z
    goto/16 :goto_9

    .line 16913
    :cond_1f
    const-string/jumbo v13, "pkg changed"

    goto :goto_a

    .line 16931
    :cond_20
    const-string/jumbo v4, "android.intent.extra.changed_component_name_list"

    .line 16930
    invoke-virtual {v14, v4}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 16929
    move-object/from16 v0, p0

    move/from16 v1, p16

    move/from16 v2, v59

    invoke-direct {v0, v5, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V

    goto/16 :goto_3

    .line 16950
    .end local v11    # "fullUninstall":Z
    .end local v59    # "killProcess":Z
    .end local v66    # "removed":Z
    .restart local v48    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v69    # "replacing":Z
    :cond_21
    const/4 v4, 0x0

    goto/16 :goto_2

    .line 16965
    .end local v5    # "ssp":Ljava/lang/String;
    .end local v48    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v52    # "data":Landroid/net/Uri;
    .end local v69    # "replacing":Z
    :cond_22
    const/16 v57, 0x0

    .restart local v57    # "is24Hour":I
    goto/16 :goto_4

    .line 16968
    .restart local v72    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v4

    monitor-exit v72

    throw v4

    .line 16993
    .end local v57    # "is24Hour":I
    .end local v72    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_23
    if-eqz p9, :cond_24

    move-object/from16 v0, p9

    array-length v4, v0

    if-lez v4, :cond_24

    .line 16994
    const-string/jumbo v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Can\'t broadcast sticky intent "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 16995
    const-string/jumbo v7, " and enforce permissions "

    .line 16994
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 16995
    invoke-static/range {p9 .. p9}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .line 16994
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16996
    const/4 v4, -0x1

    return v4

    .line 16998
    :cond_24
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_25

    .line 16999
    new-instance v4, Ljava/lang/SecurityException;

    .line 17000
    const-string/jumbo v6, "Sticky broadcasts can\'t target a specific component"

    .line 16999
    invoke-direct {v4, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 17004
    :cond_25
    const/4 v4, -0x1

    move/from16 v0, p16

    if-eq v0, v4, :cond_27

    .line 17008
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 17009
    const/4 v6, -0x1

    .line 17008
    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v73

    check-cast v73, Landroid/util/ArrayMap;

    .line 17010
    .local v73, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v73, :cond_27

    .line 17011
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v60

    check-cast v60, Ljava/util/ArrayList;

    .line 17012
    .local v60, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v60, :cond_27

    .line 17013
    invoke-virtual/range {v60 .. v60}, Ljava/util/ArrayList;->size()I

    move-result v44

    .line 17015
    .local v44, "N":I
    const/16 v54, 0x0

    .restart local v54    # "i":I
    :goto_b
    move/from16 v0, v54

    move/from16 v1, v44

    if-ge v0, v1, :cond_27

    .line 17016
    move-object/from16 v0, v60

    move/from16 v1, v54

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_26

    .line 17017
    new-instance v4, Ljava/lang/IllegalArgumentException;

    .line 17018
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Sticky broadcast "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " for user "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p16

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 17019
    const-string/jumbo v7, " conflicts with existing global broadcast"

    .line 17018
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 17017
    invoke-direct {v4, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 17015
    :cond_26
    add-int/lit8 v54, v54, 0x1

    goto :goto_b

    .line 17025
    .end local v44    # "N":I
    .end local v54    # "i":I
    .end local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_27
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v73

    check-cast v73, Landroid/util/ArrayMap;

    .line 17026
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-nez v73, :cond_28

    .line 17027
    new-instance v73, Landroid/util/ArrayMap;

    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    invoke-direct/range {v73 .. v73}, Landroid/util/ArrayMap;-><init>()V

    .line 17028
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p16

    move-object/from16 v1, v73

    invoke-virtual {v4, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 17030
    :cond_28
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v60

    check-cast v60, Ljava/util/ArrayList;

    .line 17031
    .restart local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-nez v60, :cond_29

    .line 17032
    new-instance v60, Ljava/util/ArrayList;

    .end local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-direct/range {v60 .. v60}, Ljava/util/ArrayList;-><init>()V

    .line 17033
    .restart local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    move-object/from16 v1, v60

    invoke-virtual {v0, v4, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17035
    :cond_29
    invoke-virtual/range {v60 .. v60}, Ljava/util/ArrayList;->size()I

    move-result v74

    .line 17037
    .local v74, "stickiesCount":I
    const/16 v54, 0x0

    .restart local v54    # "i":I
    :goto_c
    move/from16 v0, v54

    move/from16 v1, v74

    if-ge v0, v1, :cond_2a

    .line 17038
    move-object/from16 v0, v60

    move/from16 v1, v54

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_2e

    .line 17040
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v14}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v60

    move/from16 v1, v54

    invoke-virtual {v0, v1, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 17044
    :cond_2a
    move/from16 v0, v54

    move/from16 v1, v74

    if-lt v0, v1, :cond_2b

    .line 17045
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v14}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v60

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 17050
    .end local v54    # "i":I
    .end local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v74    # "stickiesCount":I
    :cond_2b
    const/4 v4, -0x1

    move/from16 v0, p16

    if-ne v0, v4, :cond_2f

    .line 17052
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    move-object/from16 v77, v0

    .line 17059
    .local v77, "users":[I
    :goto_d
    const/16 v35, 0x0

    .line 17060
    .local v35, "receivers":Ljava/util/List;
    const/16 v23, 0x0

    .line 17062
    .local v23, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x40000000    # 2.0f

    and-int/2addr v4, v6

    if-nez v4, :cond_2c

    .line 17064
    move-object/from16 v0, p0

    move-object/from16 v1, p4

    move/from16 v2, p15

    move-object/from16 v3, v77

    invoke-direct {v0, v14, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;

    move-result-object v35

    .line 17066
    .end local v35    # "receivers":Ljava/util/List;
    :cond_2c
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-nez v4, :cond_33

    .line 17067
    const/4 v4, -0x1

    move/from16 v0, p16

    if-ne v0, v4, :cond_32

    const/16 v4, 0x7d0

    move/from16 v0, p15

    if-ne v0, v4, :cond_32

    .line 17069
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v76

    .line 17070
    .local v76, "ums":Lcom/android/server/pm/UserManagerService;
    const/16 v54, 0x0

    .end local v23    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v54    # "i":I
    :goto_e
    move-object/from16 v0, v77

    array-length v4, v0

    move/from16 v0, v54

    if-ge v0, v4, :cond_33

    .line 17072
    const-string/jumbo v4, "no_debugging_features"

    aget v6, v77, v54

    .line 17071
    move-object/from16 v0, v76

    invoke-virtual {v0, v4, v6}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_30

    .line 17070
    :cond_2d
    :goto_f
    add-int/lit8 v54, v54, 0x1

    goto :goto_e

    .line 17037
    .end local v76    # "ums":Lcom/android/server/pm/UserManagerService;
    .end local v77    # "users":[I
    .restart local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .restart local v74    # "stickiesCount":I
    :cond_2e
    add-int/lit8 v54, v54, 0x1

    goto/16 :goto_c

    .line 17055
    .end local v54    # "i":I
    .end local v60    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v74    # "stickiesCount":I
    :cond_2f
    const/4 v4, 0x1

    new-array v0, v4, [I

    move-object/from16 v77, v0

    const/4 v4, 0x0

    aput p16, v77, v4

    .restart local v77    # "users":[I
    goto :goto_d

    .line 17076
    .restart local v54    # "i":I
    .restart local v76    # "ums":Lcom/android/server/pm/UserManagerService;
    :cond_30
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 17077
    aget v6, v77, v54

    const/4 v7, 0x0

    .line 17076
    move-object/from16 v0, p4

    invoke-virtual {v4, v14, v0, v7, v6}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v65

    .line 17078
    .local v65, "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    if-nez v23, :cond_31

    .line 17079
    move-object/from16 v23, v65

    .local v23, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    goto :goto_f

    .line 17080
    .end local v23    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_31
    if-eqz v65, :cond_2d

    .line 17081
    move-object/from16 v0, v23

    move-object/from16 v1, v65

    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    goto :goto_f

    .line 17085
    .end local v54    # "i":I
    .end local v65    # "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v76    # "ums":Lcom/android/server/pm/UserManagerService;
    .local v23, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_32
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 17086
    const/4 v6, 0x0

    .line 17085
    move-object/from16 v0, p4

    move/from16 v1, p16

    invoke-virtual {v4, v14, v0, v6, v1}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v23

    .line 17091
    .end local v23    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_33
    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x20000000

    and-int/2addr v4, v6

    if-eqz v4, :cond_39

    const/16 v67, 0x1

    .line 17096
    .local v67, "replacePending":Z
    :goto_10
    if-eqz v23, :cond_3a

    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v45

    .line 17097
    .local v45, "NR":I
    :goto_11
    if-nez p12, :cond_35

    if-lez v45, :cond_35

    .line 17101
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v13

    .line 17102
    .local v13, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v12, Lcom/android/server/am/BroadcastRecord;

    .line 17105
    const/16 v30, 0x0

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move/from16 v17, p14

    move/from16 v18, p15

    move-object/from16 v19, p4

    move-object/from16 v20, p9

    move/from16 v21, p10

    move-object/from16 v24, p5

    move/from16 v25, p6

    move-object/from16 v26, p7

    move-object/from16 v27, p8

    move/from16 v28, p12

    move/from16 v29, p13

    move/from16 v31, p16

    .line 17102
    invoke-direct/range {v12 .. v31}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 17107
    .local v12, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v67, :cond_3b

    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->replaceParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v68

    .line 17108
    :goto_12
    if-nez v68, :cond_34

    .line 17109
    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 17110
    invoke-virtual {v13}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 17112
    :cond_34
    const/16 v23, 0x0

    .line 17113
    .restart local v23    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    const/16 v45, 0x0

    .line 17117
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v23    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_35
    const/16 v56, 0x0

    .line 17118
    .local v56, "ir":I
    if-eqz v35, :cond_43

    .line 17125
    const/16 v71, 0x0

    .line 17126
    .local v71, "skipPackages":[Ljava/lang/String;
    const-string/jumbo v4, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_36

    .line 17127
    const-string/jumbo v4, "android.intent.action.PACKAGE_RESTARTED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    .line 17126
    if-nez v4, :cond_36

    .line 17128
    const-string/jumbo v4, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    .line 17126
    if-eqz v4, :cond_3c

    .line 17129
    :cond_36
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v52

    .line 17130
    .restart local v52    # "data":Landroid/net/Uri;
    if-eqz v52, :cond_37

    .line 17131
    invoke-virtual/range {v52 .. v52}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v63

    .line 17132
    .local v63, "pkgName":Ljava/lang/String;
    if-eqz v63, :cond_37

    .line 17133
    const/4 v4, 0x1

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v71, v0

    .end local v71    # "skipPackages":[Ljava/lang/String;
    const/4 v4, 0x0

    aput-object v63, v71, v4

    .line 17139
    .end local v52    # "data":Landroid/net/Uri;
    .end local v63    # "pkgName":Ljava/lang/String;
    :cond_37
    :goto_13
    if-eqz v71, :cond_3e

    move-object/from16 v0, v71

    array-length v4, v0

    if-lez v4, :cond_3e

    .line 17140
    const/4 v4, 0x0

    move-object/from16 v0, v71

    array-length v6, v0

    :goto_14
    if-ge v4, v6, :cond_3e

    aget-object v70, v71, v4

    .line 17141
    .local v70, "skipPackage":Ljava/lang/String;
    if-eqz v70, :cond_3d

    .line 17142
    invoke-interface/range {v35 .. v35}, Ljava/util/List;->size()I

    move-result v46

    .line 17143
    .local v46, "NT":I
    const/16 v58, 0x0

    .local v58, "it":I
    :goto_15
    move/from16 v0, v58

    move/from16 v1, v46

    if-ge v0, v1, :cond_3d

    .line 17144
    move-object/from16 v0, v35

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v51

    check-cast v51, Landroid/content/pm/ResolveInfo;

    .line 17145
    .local v51, "curt":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v51

    iget-object v7, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v7, v7, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v70

    invoke-virtual {v7, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_38

    .line 17146
    move-object/from16 v0, v35

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 17147
    add-int/lit8 v58, v58, -0x1

    .line 17148
    add-int/lit8 v46, v46, -0x1

    .line 17143
    :cond_38
    add-int/lit8 v58, v58, 0x1

    goto :goto_15

    .line 17091
    .end local v45    # "NR":I
    .end local v46    # "NT":I
    .end local v51    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v56    # "ir":I
    .end local v58    # "it":I
    .end local v67    # "replacePending":Z
    .end local v70    # "skipPackage":Ljava/lang/String;
    :cond_39
    const/16 v67, 0x0

    .restart local v67    # "replacePending":Z
    goto/16 :goto_10

    .line 17096
    :cond_3a
    const/16 v45, 0x0

    .restart local v45    # "NR":I
    goto/16 :goto_11

    .line 17107
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_3b
    const/16 v68, 0x0

    .local v68, "replaced":Z
    goto/16 :goto_12

    .line 17136
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v68    # "replaced":Z
    .restart local v56    # "ir":I
    .restart local v71    # "skipPackages":[Ljava/lang/String;
    :cond_3c
    const-string/jumbo v4, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_37

    .line 17137
    const-string/jumbo v4, "android.intent.extra.changed_package_list"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v71

    .local v71, "skipPackages":[Ljava/lang/String;
    goto :goto_13

    .line 17140
    .end local v71    # "skipPackages":[Ljava/lang/String;
    .restart local v70    # "skipPackage":Ljava/lang/String;
    :cond_3d
    add-int/lit8 v4, v4, 0x1

    goto :goto_14

    .line 17155
    .end local v70    # "skipPackage":Ljava/lang/String;
    :cond_3e
    if-eqz v35, :cond_41

    invoke-interface/range {v35 .. v35}, Ljava/util/List;->size()I

    move-result v46

    .line 17156
    .restart local v46    # "NT":I
    :goto_16
    const/16 v58, 0x0

    .line 17157
    .restart local v58    # "it":I
    const/16 v51, 0x0

    .line 17158
    .local v51, "curt":Landroid/content/pm/ResolveInfo;
    const/16 v50, 0x0

    .line 17159
    .end local v51    # "curt":Landroid/content/pm/ResolveInfo;
    :goto_17
    move/from16 v0, v58

    move/from16 v1, v46

    if-ge v0, v1, :cond_43

    move/from16 v0, v56

    move/from16 v1, v45

    if-ge v0, v1, :cond_43

    .line 17160
    if-nez v51, :cond_3f

    .line 17161
    move-object/from16 v0, v35

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v51

    check-cast v51, Landroid/content/pm/ResolveInfo;

    .line 17163
    :cond_3f
    if-nez v50, :cond_40

    .line 17164
    move-object/from16 v0, v23

    move/from16 v1, v56

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v50

    check-cast v50, Lcom/android/server/am/BroadcastFilter;

    .line 17166
    :cond_40
    invoke-virtual/range {v50 .. v50}, Lcom/android/server/am/BroadcastFilter;->getPriority()I

    move-result v4

    move-object/from16 v0, v51

    iget v6, v0, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v4, v6, :cond_42

    .line 17168
    move-object/from16 v0, v35

    move/from16 v1, v58

    move-object/from16 v2, v50

    invoke-interface {v0, v1, v2}, Ljava/util/List;->add(ILjava/lang/Object;)V

    .line 17169
    add-int/lit8 v56, v56, 0x1

    .line 17170
    const/16 v50, 0x0

    .line 17171
    .local v50, "curr":Lcom/android/server/am/BroadcastFilter;
    add-int/lit8 v58, v58, 0x1

    .line 17172
    add-int/lit8 v46, v46, 0x1

    goto :goto_17

    .line 17155
    .end local v46    # "NT":I
    .end local v50    # "curr":Lcom/android/server/am/BroadcastFilter;
    .end local v58    # "it":I
    :cond_41
    const/16 v46, 0x0

    .restart local v46    # "NT":I
    goto :goto_16

    .line 17175
    .restart local v58    # "it":I
    :cond_42
    add-int/lit8 v58, v58, 0x1

    .line 17176
    const/16 v51, 0x0

    .restart local v51    # "curt":Landroid/content/pm/ResolveInfo;
    goto :goto_17

    .line 17180
    .end local v46    # "NT":I
    .end local v51    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v58    # "it":I
    :cond_43
    :goto_18
    move/from16 v0, v56

    move/from16 v1, v45

    if-ge v0, v1, :cond_45

    .line 17181
    if-nez v35, :cond_44

    .line 17182
    new-instance v35, Ljava/util/ArrayList;

    invoke-direct/range {v35 .. v35}, Ljava/util/ArrayList;-><init>()V

    .line 17184
    :cond_44
    move-object/from16 v0, v23

    move/from16 v1, v56

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, v35

    invoke-interface {v0, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 17185
    add-int/lit8 v56, v56, 0x1

    goto :goto_18

    .line 17188
    :cond_45
    if-eqz v35, :cond_47

    invoke-interface/range {v35 .. v35}, Ljava/util/List;->size()I

    move-result v4

    if-lez v4, :cond_47

    .line 17190
    :goto_19
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v13

    .line 17191
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v12, Lcom/android/server/am/BroadcastRecord;

    .line 17194
    const/16 v42, 0x0

    move-object/from16 v24, v12

    move-object/from16 v25, v13

    move-object/from16 v26, v14

    move-object/from16 v27, p1

    move-object/from16 v28, p2

    move/from16 v29, p14

    move/from16 v30, p15

    move-object/from16 v31, p4

    move-object/from16 v32, p9

    move/from16 v33, p10

    move-object/from16 v34, v22

    move-object/from16 v36, p5

    move/from16 v37, p6

    move-object/from16 v38, p7

    move-object/from16 v39, p8

    move/from16 v40, p12

    move/from16 v41, p13

    move/from16 v43, p16

    .line 17191
    invoke-direct/range {v24 .. v43}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 17201
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v67, :cond_48

    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v68

    .line 17202
    :goto_1a
    if-nez v68, :cond_46

    .line 17203
    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 17204
    invoke-virtual {v13}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 17208
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_46
    const/4 v4, 0x0

    return v4

    .line 17189
    :cond_47
    if-eqz p5, :cond_46

    goto :goto_19

    .line 17201
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_48
    const/16 v68, 0x0

    .restart local v68    # "replaced":Z
    goto :goto_1a

    .line 16951
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v45    # "NR":I
    .end local v56    # "ir":I
    .end local v67    # "replacePending":Z
    .end local v68    # "replaced":Z
    .end local v77    # "users":[I
    .restart local v5    # "ssp":Ljava/lang/String;
    .restart local v52    # "data":Landroid/net/Uri;
    .restart local v69    # "replacing":Z
    :catch_1
    move-exception v53

    .restart local v53    # "e":Landroid/os/RemoteException;
    goto/16 :goto_3
.end method

.method private buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V
    .locals 3
    .param p1, "pae"    # Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .param p2, "result"    # Landroid/os/Bundle;

    .prologue
    .line 11103
    if-eqz p2, :cond_0

    .line 11104
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string/jumbo v1, "android.intent.extra.ASSIST_CONTEXT"

    invoke-virtual {v0, v1, p2}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 11106
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    if-eqz v0, :cond_1

    .line 11107
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    iget-object v1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    const/4 v2, 0x1

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 11102
    :cond_1
    return-void
.end method

.method private canClearIdentity(III)Z
    .locals 7
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v4, -0x1

    const/4 v6, 0x0

    const/4 v5, 0x1

    .line 10349
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    if-ne v0, p3, :cond_0

    .line 10350
    return v5

    .line 10352
    :cond_0
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-eqz v0, :cond_1

    .line 10354
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_2

    .line 10356
    :cond_1
    return v5

    .line 10358
    :cond_2
    return v6
.end method

.method private final canGcNowLocked()Z
    .locals 7

    .prologue
    const/4 v2, 0x0

    .line 18732
    const/4 v0, 0x0

    .line 18733
    .local v0, "processingBroadcasts":Z
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v5, v4

    move v3, v2

    :goto_0
    if-ge v3, v5, :cond_2

    aget-object v1, v4, v3

    .line 18734
    .local v1, "q":Lcom/android/server/am/BroadcastQueue;
    iget-object v6, v1, Lcom/android/server/am/BroadcastQueue;->mParallelBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-nez v6, :cond_0

    iget-object v6, v1, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-eqz v6, :cond_1

    .line 18735
    :cond_0
    const/4 v0, 0x1

    .line 18733
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 18738
    .end local v1    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    if-nez v0, :cond_3

    .line 18739
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v2

    if-nez v2, :cond_4

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->allResumedActivitiesIdle()Z

    move-result v2

    .line 18738
    :cond_3
    :goto_1
    return v2

    .line 18739
    :cond_4
    const/4 v2, 0x1

    goto :goto_1
.end method

.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;
    .locals 21
    .param p1, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    .line 9462
    if-eqz p2, :cond_0

    move-object/from16 v0, p2

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 9463
    .local v5, "callingPid":I
    :goto_0
    if-eqz p2, :cond_1

    move-object/from16 v0, p2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 9464
    .local v6, "callingUid":I
    :goto_1
    const/4 v15, 0x0

    .line 9465
    .local v15, "checkedGrants":Z
    if-eqz p4, :cond_4

    .line 9467
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v20

    .line 9468
    .local v20, "tmpTargetUserId":I
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, v20

    if-eq v0, v4, :cond_3

    .line 9469
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v20

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 9470
    const/4 v4, 0x0

    return-object v4

    .line 9462
    .end local v5    # "callingPid":I
    .end local v6    # "callingUid":I
    .end local v15    # "checkedGrants":Z
    .end local v20    # "tmpTargetUserId":I
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .restart local v5    # "callingPid":I
    goto :goto_0

    .line 9463
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .restart local v6    # "callingUid":I
    goto :goto_1

    .line 9472
    .restart local v15    # "checkedGrants":Z
    .restart local v20    # "tmpTargetUserId":I
    :cond_2
    const/4 v15, 0x1

    .line 9476
    :cond_3
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "checkContentProviderPermissionLocked "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 9475
    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 9476
    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    .line 9474
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 9477
    move/from16 v0, p3

    move/from16 v1, v20

    if-eq v0, v1, :cond_4

    .line 9482
    const/4 v15, 0x0

    .line 9485
    .end local v20    # "tmpTargetUserId":I
    :cond_4
    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    .line 9486
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    .line 9485
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_5

    .line 9488
    const/4 v4, 0x0

    return-object v4

    .line 9490
    :cond_5
    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    .line 9491
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    .line 9490
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_6

    .line 9493
    const/4 v4, 0x0

    return-object v4

    .line 9496
    :cond_6
    move-object/from16 v0, p1

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    move-object/from16 v19, v0

    .line 9497
    .local v19, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v19, :cond_9

    .line 9498
    move-object/from16 v0, v19

    array-length v0, v0

    move/from16 v16, v0

    .line 9499
    .local v16, "i":I
    :cond_7
    if-lez v16, :cond_9

    .line 9500
    add-int/lit8 v16, v16, -0x1

    .line 9501
    aget-object v18, v19, v16

    .line 9502
    .local v18, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual/range {v18 .. v18}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v8

    .line 9503
    .local v8, "pprperm":Ljava/lang/String;
    if-eqz v8, :cond_8

    .line 9504
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    .line 9503
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_8

    .line 9506
    const/4 v4, 0x0

    return-object v4

    .line 9508
    :cond_8
    invoke-virtual/range {v18 .. v18}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v10

    .line 9509
    .local v10, "ppwperm":Ljava/lang/String;
    if-eqz v10, :cond_7

    .line 9510
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v13, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v14, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v9, p0

    move v11, v5

    move v12, v6

    .line 9509
    invoke-virtual/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_7

    .line 9512
    const/4 v4, 0x0

    return-object v4

    .line 9516
    .end local v8    # "pprperm":Ljava/lang/String;
    .end local v10    # "ppwperm":Ljava/lang/String;
    .end local v16    # "i":I
    .end local v18    # "pp":Landroid/content/pm/PathPermission;
    :cond_9
    if-nez v15, :cond_a

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 9517
    const/4 v4, 0x0

    return-object v4

    .line 9521
    :cond_a
    move-object/from16 v0, p1

    iget-boolean v4, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v4, :cond_c

    .line 9522
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9523
    const-string/jumbo v7, " from "

    .line 9522
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9523
    if-eqz p2, :cond_b

    .line 9522
    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_2
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9523
    const-string/jumbo v7, " (pid="

    .line 9522
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9524
    const-string/jumbo v7, ", uid="

    .line 9522
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9524
    const-string/jumbo v7, ") that is not exported from uid "

    .line 9522
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9525
    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9522
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .line 9532
    .local v17, "msg":Ljava/lang/String;
    :goto_3
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v17

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9533
    return-object v17

    .line 9523
    .end local v17    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_b
    const-string/jumbo p2, "(null)"

    goto :goto_2

    .line 9527
    :cond_c
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9528
    const-string/jumbo v7, " from "

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9528
    if-eqz p2, :cond_d

    .line 9527
    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_4
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9528
    const-string/jumbo v7, " (pid="

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9529
    const-string/jumbo v7, ", uid="

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9529
    const-string/jumbo v7, ") requires "

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9530
    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9530
    const-string/jumbo v7, " or "

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 9530
    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    .line 9527
    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .restart local v17    # "msg":Ljava/lang/String;
    goto :goto_3

    .line 9528
    .end local v17    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_d
    const-string/jumbo p2, "(null)"

    goto :goto_4
.end method

.method private final checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z
    .locals 13
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I
    .param p6, "considerUidPermissions"    # Z

    .prologue
    .line 7357
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p4

    if-ne v12, v0, :cond_0

    .line 7358
    const/4 v12, 0x1

    return v12

    .line 7359
    :cond_0
    iget-boolean v12, p2, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v12, :cond_1

    .line 7360
    const/4 v12, 0x0

    return v12

    .line 7363
    :cond_1
    and-int/lit8 v12, p5, 0x1

    if-nez v12, :cond_8

    const/4 v10, 0x1

    .line 7364
    .local v10, "readMet":Z
    :goto_0
    and-int/lit8 v12, p5, 0x2

    if-nez v12, :cond_9

    const/4 v11, 0x1

    .line 7367
    .local v11, "writeMet":Z
    :goto_1
    if-nez v10, :cond_2

    :try_start_0
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v12, :cond_2

    if-eqz p6, :cond_2

    .line 7368
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_2

    .line 7369
    const/4 v10, 0x1

    .line 7371
    :cond_2
    if-nez v11, :cond_3

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v12, :cond_3

    if-eqz p6, :cond_3

    .line 7372
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_3

    .line 7373
    const/4 v11, 0x1

    .line 7378
    :cond_3
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-nez v12, :cond_a

    const/4 v1, 0x1

    .line 7379
    .local v1, "allowDefaultRead":Z
    :goto_2
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-nez v12, :cond_b

    const/4 v2, 0x1

    .line 7382
    .local v2, "allowDefaultWrite":Z
    :goto_3
    iget-object v8, p2, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    .line 7383
    .local v8, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v8, :cond_5

    .line 7384
    move-object/from16 v0, p3

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v12}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v5

    .line 7385
    .local v5, "path":Ljava/lang/String;
    array-length v4, v8

    .line 7386
    .local v4, "i":I
    :cond_4
    :goto_4
    if-lez v4, :cond_5

    if-eqz v10, :cond_c

    if-eqz v11, :cond_c

    .line 7426
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    :cond_5
    if-eqz v1, :cond_6

    const/4 v10, 0x1

    .line 7427
    :cond_6
    if-eqz v2, :cond_7

    const/4 v11, 0x1

    .line 7433
    :cond_7
    if-eqz v10, :cond_10

    .end local v11    # "writeMet":Z
    :goto_5
    return v11

    .line 7363
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    .end local v10    # "readMet":Z
    :cond_8
    const/4 v10, 0x0

    .restart local v10    # "readMet":Z
    goto :goto_0

    .line 7364
    :cond_9
    const/4 v11, 0x0

    .restart local v11    # "writeMet":Z
    goto :goto_1

    .line 7378
    :cond_a
    const/4 v1, 0x0

    .restart local v1    # "allowDefaultRead":Z
    goto :goto_2

    .line 7379
    :cond_b
    const/4 v2, 0x0

    .restart local v2    # "allowDefaultWrite":Z
    goto :goto_3

    .line 7387
    .restart local v4    # "i":I
    .restart local v5    # "path":Ljava/lang/String;
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_c
    add-int/lit8 v4, v4, -0x1

    .line 7388
    aget-object v6, v8, v4

    .line 7389
    .local v6, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual {v6, v5}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_4

    .line 7390
    if-nez v10, :cond_d

    .line 7391
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v7

    .line 7396
    .local v7, "pprperm":Ljava/lang/String;
    if-eqz v7, :cond_d

    .line 7397
    if-eqz p6, :cond_e

    move/from16 v0, p4

    invoke-interface {p1, v7, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_e

    .line 7399
    const/4 v10, 0x1

    .line 7405
    .end local v7    # "pprperm":Ljava/lang/String;
    :cond_d
    :goto_6
    if-nez v11, :cond_4

    .line 7406
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v9

    .line 7411
    .local v9, "ppwperm":Ljava/lang/String;
    if-eqz v9, :cond_4

    .line 7412
    if-eqz p6, :cond_f

    move/from16 v0, p4

    invoke-interface {p1, v9, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v12

    if-nez v12, :cond_f

    .line 7414
    const/4 v11, 0x1

    .line 7413
    goto :goto_4

    .line 7401
    .end local v9    # "ppwperm":Ljava/lang/String;
    .restart local v7    # "pprperm":Ljava/lang/String;
    :cond_e
    const/4 v1, 0x0

    goto :goto_6

    .line 7416
    .end local v7    # "pprperm":Ljava/lang/String;
    .restart local v9    # "ppwperm":Ljava/lang/String;
    :cond_f
    const/4 v2, 0x0

    goto :goto_4

    .line 7429
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    .end local v6    # "pp":Landroid/content/pm/PathPermission;
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    .end local v9    # "ppwperm":Ljava/lang/String;
    :catch_0
    move-exception v3

    .line 7430
    .local v3, "e":Landroid/os/RemoteException;
    const/4 v12, 0x0

    return v12

    .line 7433
    .end local v3    # "e":Landroid/os/RemoteException;
    .restart local v1    # "allowDefaultRead":Z
    .restart local v2    # "allowDefaultWrite":Z
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_10
    const/4 v11, 0x0

    goto :goto_5
.end method

.method private final checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 7
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I

    .prologue
    const/4 v6, 0x1

    const/4 v2, 0x0

    .line 7346
    invoke-static {p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    iget v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v0, v1, :cond_0

    .line 7347
    const-string/jumbo v0, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v1, -0x1

    invoke-static {v0, p4, v1, v6}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    if-eqz v0, :cond_0

    .line 7349
    return v2

    :cond_0
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    .line 7352
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v0

    return v0
.end method

.method private checkTime(JLjava/lang/String;)V
    .locals 7
    .param p1, "startTime"    # J
    .param p3, "where"    # Ljava/lang/String;

    .prologue
    .line 9636
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 9637
    .local v0, "now":J
    sub-long v2, v0, p1

    const-wide/16 v4, 0x3e8

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    .line 9639
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Slow operation: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    sub-long v4, v0, p1

    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, "ms so far, now at "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9635
    :cond_0
    return-void
.end method

.method private final checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 11
    .param p1, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p2, "uid"    # I
    .param p3, "modeFlags"    # I

    .prologue
    const/4 v10, 0x1

    const/4 v9, 0x0

    .line 7478
    and-int/lit8 v7, p3, 0x40

    if-eqz v7, :cond_0

    const/4 v6, 0x1

    .line 7479
    .local v6, "persistable":Z
    :goto_0
    if-eqz v6, :cond_1

    const/4 v3, 0x3

    .line 7483
    .local v3, "minStrength":I
    :goto_1
    if-nez p2, :cond_2

    .line 7484
    return v10

    .line 7478
    .end local v3    # "minStrength":I
    .end local v6    # "persistable":Z
    :cond_0
    const/4 v6, 0x0

    .restart local v6    # "persistable":Z
    goto :goto_0

    .line 7480
    :cond_1
    const/4 v3, 0x1

    .restart local v3    # "minStrength":I
    goto :goto_1

    .line 7487
    :cond_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    .line 7488
    .local v5, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v5, :cond_3

    return v9

    .line 7491
    :cond_3
    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 7492
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_4

    invoke-virtual {v1, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v7

    if-lt v7, v3, :cond_4

    .line 7493
    return v10

    .line 7497
    :cond_4
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v0

    .line 7498
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2
    if-ge v2, v0, :cond_6

    .line 7499
    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 7500
    .local v4, "perm":Lcom/android/server/am/UriPermission;
    iget-object v7, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v7, v7, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    if-eqz v7, :cond_5

    iget-object v7, p1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v8, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v8, v8, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7, v8}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v7

    if-eqz v7, :cond_5

    .line 7501
    invoke-virtual {v4, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v7

    if-lt v7, v3, :cond_5

    .line 7502
    return v10

    .line 7498
    :cond_5
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 7506
    .end local v4    # "perm":Lcom/android/server/am/UriPermission;
    :cond_6
    return v9
.end method

.method private final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z
    .locals 16
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "index"    # I

    .prologue
    .line 15743
    if-ltz p4, :cond_0

    .line 15744
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15745
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v11}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 15748
    :cond_0
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15749
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15752
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    if-eqz v11, :cond_1

    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v11, :cond_6

    .line 15756
    :cond_1
    :goto_0
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-eqz v11, :cond_2

    .line 15757
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    invoke-virtual {v11}, Landroid/app/Dialog;->dismiss()V

    .line 15758
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 15760
    :cond_2
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-eqz v11, :cond_3

    .line 15761
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    invoke-virtual {v11}, Landroid/app/Dialog;->dismiss()V

    .line 15762
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 15765
    :cond_3
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 15766
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 15768
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, p1

    invoke-virtual {v0, v11}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 15769
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 15770
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, p1

    invoke-virtual {v0, v11}, Lcom/android/server/am/ProcessRecord;->makeInactive(Lcom/android/server/am/ProcessStatsService;)V

    .line 15771
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    .line 15772
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 15773
    const/4 v11, 0x0

    const/4 v12, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v11, v12}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 15774
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 15775
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 15776
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 15777
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    .line 15778
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    .line 15780
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, p1

    move/from16 v1, p3

    invoke-virtual {v11, v0, v1}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 15782
    const/4 v10, 0x0

    .line 15785
    .local v10, "restart":Z
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v11}, Landroid/util/ArrayMap;->size()I

    move-result v11

    add-int/lit8 v7, v11, -0x1

    .local v7, "i":I
    :goto_1
    if-ltz v7, :cond_8

    .line 15786
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v11, v7}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    .line 15787
    .local v5, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v11, :cond_7

    if-eqz p3, :cond_7

    const/4 v2, 0x0

    .line 15788
    .local v2, "always":Z
    :goto_2
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v5, v2}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    move-result v8

    .line 15789
    .local v8, "inLaunching":Z
    if-nez v8, :cond_4

    if-eqz v2, :cond_5

    :cond_4
    invoke-virtual {v5}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v11

    if-eqz v11, :cond_5

    .line 15792
    const/4 v10, 0x1

    .line 15795
    :cond_5
    const/4 v11, 0x0

    iput-object v11, v5, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 15796
    const/4 v11, 0x0

    iput-object v11, v5, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 15785
    add-int/lit8 v7, v7, -0x1

    goto :goto_1

    .line 15753
    .end local v2    # "always":Z
    .end local v5    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v7    # "i":I
    .end local v8    # "inLaunching":Z
    .end local v10    # "restart":Z
    :cond_6
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    invoke-virtual {v11}, Landroid/app/Dialog;->dismiss()V

    .line 15754
    const/4 v11, 0x0

    move-object/from16 v0, p1

    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    goto/16 :goto_0

    .line 15787
    .restart local v5    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v7    # "i":I
    .restart local v10    # "restart":Z
    :cond_7
    const/4 v2, 0x1

    .restart local v2    # "always":Z
    goto :goto_2

    .line 15798
    .end local v2    # "always":Z
    .end local v5    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_8
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v11}, Landroid/util/ArrayMap;->clear()V

    .line 15801
    const/4 v11, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v11}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    move-result v11

    if-eqz v11, :cond_9

    .line 15802
    const/4 v10, 0x1

    .line 15806
    :cond_9
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v11

    if-nez v11, :cond_b

    .line 15807
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v7, v11, -0x1

    :goto_3
    if-ltz v7, :cond_a

    .line 15808
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ContentProviderConnection;

    .line 15809
    .local v4, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v11, v4, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v11, v11, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v11, v4}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15810
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v13, v4, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget v13, v13, Lcom/android/server/am/ContentProviderRecord;->uid:I

    .line 15811
    iget-object v14, v4, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v14, v14, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    .line 15810
    move-object/from16 v0, p0

    invoke-virtual {v0, v11, v12, v13, v14}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 15807
    add-int/lit8 v7, v7, -0x1

    goto :goto_3

    .line 15813
    .end local v4    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_a
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->clear()V

    .line 15833
    :cond_b
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15836
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v11}, Landroid/util/ArraySet;->size()I

    move-result v11

    add-int/lit8 v7, v11, -0x1

    :goto_4
    if-ltz v7, :cond_c

    .line 15837
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v11, v7}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ReceiverList;

    move-object/from16 v0, p0

    invoke-virtual {v0, v11}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 15836
    add-int/lit8 v7, v7, -0x1

    goto :goto_4

    .line 15839
    :cond_c
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v11}, Landroid/util/ArraySet;->clear()V

    .line 15842
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v11, :cond_d

    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v12, v12, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v12, v12, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v11, v12, :cond_d

    .line 15847
    :try_start_0
    const-string/jumbo v11, "backup"

    invoke-static {v11}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v11

    .line 15846
    invoke-static {v11}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v3

    .line 15848
    .local v3, "bm":Landroid/app/backup/IBackupManager;
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v3, v11}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 15854
    .end local v3    # "bm":Landroid/app/backup/IBackupManager;
    :cond_d
    :goto_5
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v7, v11, -0x1

    :goto_6
    if-ltz v7, :cond_f

    .line 15855
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 15856
    .local v9, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v11, v9, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v11, v12, :cond_e

    .line 15857
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 15858
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v11, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15854
    :cond_e
    add-int/lit8 v7, v7, -0x1

    goto :goto_6

    .line 15861
    .end local v9    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_f
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v13, v13, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v14, 0x20

    const/4 v15, 0x0

    invoke-virtual {v11, v14, v12, v13, v15}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v11

    invoke-virtual {v11}, Landroid/os/Message;->sendToTarget()V

    .line 15865
    if-eqz p2, :cond_10

    .line 15866
    const/4 v11, 0x0

    return v11

    .line 15869
    :cond_10
    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v11, :cond_11

    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v11, :cond_18

    .line 15872
    :cond_11
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p0

    invoke-direct {v0, v11, v12}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 15873
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v11, v0, :cond_12

    .line 15874
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 15875
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v13, v13, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 15874
    const/16 v14, 0x19

    .line 15875
    const/4 v15, 0x0

    .line 15874
    invoke-virtual {v12, v14, v13, v15}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v12

    invoke-virtual {v11, v12}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 15876
    const/4 v11, 0x0

    move-object/from16 v0, p0

    iput-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 15889
    :cond_12
    :goto_7
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15891
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v11, :cond_13

    .line 15892
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v11, v11, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    .line 15893
    const/4 v11, 0x0

    move-object/from16 v0, p0

    iput-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    .line 15895
    :cond_13
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v11, :cond_14

    .line 15896
    const/4 v11, 0x0

    move-object/from16 v0, p0

    iput-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    .line 15899
    :cond_14
    if-eqz v10, :cond_15

    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v11, :cond_19

    .line 15908
    :cond_15
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v11, :cond_17

    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v12, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v11, v12, :cond_17

    .line 15911
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v12

    .line 15912
    :try_start_1
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v11, v13}, Landroid/util/SparseArray;->remove(I)V

    .line 15913
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v13, 0x14

    move-object/from16 v0, p1

    invoke-virtual {v11, v13, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit v12

    .line 15915
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v13, v13, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v11, v12, v13}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 15916
    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v11, :cond_16

    .line 15917
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v13, v13, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v11, v12, v13}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 15919
    :cond_16
    const/4 v11, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v11}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 15921
    :cond_17
    const/4 v11, 0x0

    return v11

    .line 15878
    :cond_18
    move-object/from16 v0, p1

    iget-boolean v11, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-nez v11, :cond_12

    .line 15882
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v11

    if-gez v11, :cond_12

    .line 15883
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15884
    const/4 v10, 0x1

    goto/16 :goto_7

    .line 15902
    :cond_19
    if-gez p4, :cond_1a

    .line 15903
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v11}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 15905
    :cond_1a
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15906
    const-string/jumbo v11, "restart"

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v11, v12}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 15907
    const/4 v11, 0x1

    return v11

    .line 15911
    :catchall_0
    move-exception v11

    monitor-exit v12

    throw v11

    .line 15849
    :catch_0
    move-exception v6

    .local v6, "e":Landroid/os/RemoteException;
    goto/16 :goto_5
.end method

.method private cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 14
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;
    .param p2, "killProcess"    # Z

    .prologue
    .line 8850
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v11, p1}, Lcom/android/server/am/RecentTasks;->remove(Ljava/lang/Object;)Z

    .line 8851
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 8852
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v11

    invoke-virtual {v11}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8853
    .local v0, "component":Landroid/content/ComponentName;
    if-nez v0, :cond_0

    .line 8854
    const-string/jumbo v11, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "No component for base intent of task: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8855
    return-void

    .line 8859
    :cond_0
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    new-instance v12, Landroid/content/Intent;

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v13

    invoke-direct {v12, v13}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v11, p1, v0, v12}, Lcom/android/server/am/ActiveServices;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Landroid/content/ComponentName;Landroid/content/Intent;)V

    .line 8861
    if-nez p2, :cond_1

    .line 8862
    return-void

    .line 8866
    :cond_1
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    .line 8867
    .local v5, "pkg":Ljava/lang/String;
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 8868
    .local v9, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v11}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v6

    .line 8869
    .local v6, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v11

    if-ge v1, v11, :cond_8

    .line 8871
    invoke-virtual {v6, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 8872
    .local v10, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v2, 0x0

    .local v2, "j":I
    :goto_1
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-ge v2, v11, :cond_7

    .line 8873
    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 8874
    .local v8, "proc":Lcom/android/server/am/ProcessRecord;
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    iget v12, p1, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v11, v12, :cond_3

    .line 8872
    :cond_2
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 8878
    :cond_3
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v11, :cond_2

    .line 8882
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v11, v5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_2

    .line 8887
    const/4 v3, 0x0

    .local v3, "k":I
    :goto_3
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    if-ge v3, v11, :cond_5

    .line 8888
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v11, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ActivityRecord;

    iget-object v4, v11, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 8889
    .local v4, "otherTask":Lcom/android/server/am/TaskRecord;
    iget v11, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    iget v12, v4, Lcom/android/server/am/TaskRecord;->taskId:I

    if-eq v11, v12, :cond_4

    iget-boolean v11, v4, Lcom/android/server/am/TaskRecord;->inRecents:Z

    if-eqz v11, :cond_4

    .line 8892
    return-void

    .line 8887
    :cond_4
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 8896
    .end local v4    # "otherTask":Lcom/android/server/am/TaskRecord;
    :cond_5
    iget-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v11, :cond_6

    .line 8898
    return-void

    .line 8902
    :cond_6
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 8869
    .end local v3    # "k":I
    .end local v8    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_7
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 8907
    .end local v2    # "j":I
    .end local v10    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_8
    const/4 v1, 0x0

    :goto_4
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v11

    if-ge v1, v11, :cond_a

    .line 8908
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 8909
    .local v7, "pr":Lcom/android/server/am/ProcessRecord;
    iget v11, v7, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v11, :cond_9

    .line 8910
    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v11, :cond_9

    .line 8911
    const-string/jumbo v11, "remove task"

    const/4 v12, 0x1

    invoke-virtual {v7, v11, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 8907
    :goto_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 8914
    :cond_9
    const-string/jumbo v11, "remove task"

    iput-object v11, v7, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    goto :goto_5

    .line 8849
    .end local v7    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_a
    return-void
.end method

.method private cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "killProcess"    # Z
    .param p4, "changedClasses"    # [Ljava/lang/String;

    .prologue
    .line 5771
    const/4 v3, 0x0

    .line 5772
    .local v3, "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    const/4 v12, 0x0

    .line 5773
    .local v12, "packageDisabled":Z
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v13

    .line 5775
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    if-nez p4, :cond_0

    .line 5777
    return-void

    .line 5781
    :cond_0
    const/4 v10, 0x0

    .line 5782
    .local v10, "enabled":I
    move-object/from16 v0, p4

    array-length v1, v0

    add-int/lit8 v11, v1, -0x1

    .end local v3    # "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .local v11, "i":I
    :goto_0
    if-ltz v11, :cond_1

    .line 5783
    aget-object v8, p4, v11

    .line 5785
    .local v8, "changedClass":Ljava/lang/String;
    invoke-virtual {v8, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 5789
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_2

    move/from16 v1, p2

    .line 5788
    :goto_1
    :try_start_0
    invoke-interface {v13, p1, v1}, Landroid/content/pm/IPackageManager;->getApplicationEnabledSetting(Ljava/lang/String;I)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result v10

    .line 5795
    const/4 v1, 0x1

    if-eq v10, v1, :cond_4

    .line 5796
    if-eqz v10, :cond_3

    const/4 v12, 0x1

    .line 5797
    :goto_2
    if-eqz v12, :cond_7

    .line 5800
    const/4 v3, 0x0

    .line 5822
    .end local v8    # "changedClass":Ljava/lang/String;
    :cond_1
    if-nez v12, :cond_9

    if-nez v3, :cond_9

    .line 5824
    return-void

    .line 5789
    .restart local v8    # "changedClass":Ljava/lang/String;
    :cond_2
    const/4 v1, 0x0

    goto :goto_1

    .line 5790
    :catch_0
    move-exception v9

    .line 5793
    .local v9, "e":Ljava/lang/Exception;
    return-void

    .line 5796
    .end local v9    # "e":Ljava/lang/Exception;
    :cond_3
    const/4 v12, 0x0

    goto :goto_2

    .line 5795
    :cond_4
    const/4 v12, 0x0

    goto :goto_2

    .line 5806
    :cond_5
    :try_start_1
    new-instance v2, Landroid/content/ComponentName;

    invoke-direct {v2, p1, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 5807
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_8

    move/from16 v1, p2

    .line 5805
    :goto_3
    invoke-interface {v13, v2, v1}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    move-result v10

    .line 5812
    const/4 v1, 0x1

    if-eq v10, v1, :cond_7

    .line 5813
    if-eqz v10, :cond_7

    .line 5814
    if-nez v3, :cond_6

    .line 5815
    new-instance v3, Landroid/util/ArraySet;

    move-object/from16 v0, p4

    array-length v1, v0

    invoke-direct {v3, v1}, Landroid/util/ArraySet;-><init>(I)V

    .line 5817
    :cond_6
    invoke-interface {v3, v8}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5782
    :cond_7
    add-int/lit8 v11, v11, -0x1

    goto :goto_0

    .line 5807
    :cond_8
    const/4 v1, 0x0

    goto :goto_3

    .line 5808
    :catch_1
    move-exception v9

    .line 5810
    .restart local v9    # "e":Ljava/lang/Exception;
    return-void

    .line 5828
    .end local v8    # "changedClass":Ljava/lang/String;
    .end local v9    # "e":Ljava/lang/Exception;
    :cond_9
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 5829
    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v2, p1

    move/from16 v6, p2

    .line 5828
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 5829
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 5828
    if-eqz v1, :cond_a

    .line 5830
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 5831
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 5835
    :cond_a
    move/from16 v0, p2

    invoke-direct {p0, p1, v3, v0}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageTasksLocked(Ljava/lang/String;Ljava/util/Set;I)V

    .line 5838
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 5839
    const/4 v5, 0x0

    const/4 v7, 0x1

    move-object v2, p1

    move/from16 v4, p2

    move/from16 v6, p3

    .line 5838
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    .line 5842
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    .line 5843
    .local v7, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 5844
    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v2, p1

    move/from16 v6, p2

    .line 5843
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    .line 5845
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v11, v1, -0x1

    :goto_4
    if-ltz v11, :cond_b

    .line 5846
    invoke-virtual {v7, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderRecord;

    const/4 v2, 0x0

    const/4 v4, 0x1

    invoke-direct {p0, v2, v1, v4}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 5845
    add-int/lit8 v11, v11, -0x1

    goto :goto_4

    .line 5850
    :cond_b
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    add-int/lit8 v11, v1, -0x1

    :goto_5
    if-ltz v11, :cond_c

    .line 5851
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v1, v1, v11

    .line 5852
    const/4 v2, 0x1

    .line 5851
    move/from16 v0, p2

    invoke-virtual {v1, p1, v3, v0, v2}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    .line 5850
    add-int/lit8 v11, v11, -0x1

    goto :goto_5

    .line 5769
    :cond_c
    return-void
.end method

.method private cleanupDisabledPackageTasksLocked(Ljava/lang/String;Ljava/util/Set;I)V
    .locals 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/Set",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .local p2, "filterByClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    const/4 v5, 0x0

    .line 8936
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v4

    add-int/lit8 v1, v4, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_4

    .line 8937
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/TaskRecord;

    .line 8938
    .local v3, "tr":Lcom/android/server/am/TaskRecord;
    const/4 v4, -0x1

    if-eq p3, v4, :cond_1

    iget v4, v3, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v4, p3, :cond_1

    .line 8936
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 8942
    :cond_1
    iget-object v4, v3, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v4}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8943
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_3

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 8944
    if-eqz p2, :cond_2

    invoke-virtual {v0}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v4

    invoke-interface {p2, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    .line 8945
    :goto_2
    if-eqz v2, :cond_0

    .line 8946
    iget v4, v3, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1

    .line 8944
    :cond_2
    const/4 v2, 0x1

    .local v2, "sameComponent":Z
    goto :goto_2

    .line 8943
    .end local v2    # "sameComponent":Z
    :cond_3
    const/4 v2, 0x0

    .restart local v2    # "sameComponent":Z
    goto :goto_2

    .line 8934
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v2    # "sameComponent":Z
    .end local v3    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_4
    return-void
.end method

.method private clearProfilerLocked()V
    .locals 4

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x0

    .line 19856
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v1, :cond_0

    .line 19858
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19862
    :cond_0
    :goto_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 19863
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 19864
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    .line 19865
    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 19866
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 19867
    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 19855
    return-void

    .line 19859
    :catch_0
    move-exception v0

    .local v0, "e":Ljava/io/IOException;
    goto :goto_0
.end method

.method private collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;
    .locals 16
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "users"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Intent;",
            "Ljava/lang/String;",
            "I[I)",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 16660
    const/4 v6, 0x0

    .line 16662
    .local v6, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/4 v9, 0x0

    .line 16663
    .local v9, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    const/4 v8, 0x0

    .line 16664
    .local v8, "scannedFirstReceivers":Z
    const/4 v12, 0x0

    :try_start_0
    move-object/from16 v0, p4

    array-length v13, v0

    .end local v6    # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_0
    if-ge v12, v13, :cond_a

    aget v11, p4, v12

    .line 16666
    .local v11, "user":I
    const/16 v14, 0x7d0

    move/from16 v0, p3

    if-ne v0, v14, :cond_1

    .line 16667
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v14

    .line 16668
    const-string/jumbo v15, "no_debugging_features"

    .line 16667
    invoke-virtual {v14, v15, v11}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v14

    .line 16666
    if-eqz v14, :cond_1

    .line 16664
    :cond_0
    :goto_1
    add-int/lit8 v12, v12, 0x1

    goto :goto_0

    .line 16671
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v14

    .line 16672
    const/16 v15, 0x400

    .line 16671
    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-interface {v14, v0, v1, v15, v11}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v5

    .line 16673
    .local v5, "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v11, :cond_3

    if-eqz v5, :cond_3

    .line 16676
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_2
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_3

    .line 16677
    invoke-interface {v5, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ResolveInfo;

    .line 16678
    .local v7, "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x20000000

    and-int/2addr v14, v15

    if-eqz v14, :cond_2

    .line 16679
    invoke-interface {v5, v4}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 16680
    add-int/lit8 v4, v4, -0x1

    .line 16676
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 16684
    .end local v4    # "i":I
    .end local v7    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_3
    if-eqz v5, :cond_4

    invoke-interface {v5}, Ljava/util/List;->size()I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v14

    if-nez v14, :cond_4

    .line 16685
    const/4 v5, 0x0

    .line 16687
    .end local v5    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_4
    if-nez v6, :cond_5

    .line 16688
    move-object v6, v5

    .local v6, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    goto :goto_1

    .line 16689
    .end local v6    # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_5
    if-eqz v5, :cond_0

    .line 16694
    if-nez v8, :cond_7

    .line 16696
    const/4 v8, 0x1

    .line 16697
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v10, v9

    .local v10, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_3
    :try_start_1
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_6

    .line 16698
    invoke-interface {v6, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ResolveInfo;

    .line 16699
    .restart local v7    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_e

    .line 16700
    new-instance v2, Landroid/content/ComponentName;

    .line 16701
    iget-object v14, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 16700
    invoke-direct {v2, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16702
    .local v2, "cn":Landroid/content/ComponentName;
    if-nez v10, :cond_d

    .line 16703
    new-instance v9, Ljava/util/HashSet;

    invoke-direct {v9}, Ljava/util/HashSet;-><init>()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 16705
    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v9, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_4
    :try_start_2
    invoke-virtual {v9, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 16697
    .end local v2    # "cn":Landroid/content/ComponentName;
    :goto_5
    add-int/lit8 v4, v4, 0x1

    move-object v10, v9

    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_3

    .end local v7    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_6
    move-object v9, v10

    .line 16711
    .end local v4    # "i":I
    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_7
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v10, v9

    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_6
    :try_start_3
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_c

    .line 16712
    invoke-interface {v5, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ResolveInfo;

    .line 16713
    .restart local v7    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_9

    .line 16714
    new-instance v2, Landroid/content/ComponentName;

    .line 16715
    iget-object v14, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 16714
    invoke-direct {v2, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16716
    .restart local v2    # "cn":Landroid/content/ComponentName;
    if-nez v10, :cond_b

    .line 16717
    new-instance v9, Ljava/util/HashSet;

    invoke-direct {v9}, Ljava/util/HashSet;-><init>()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 16719
    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_7
    :try_start_4
    invoke-virtual {v9, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_8

    .line 16720
    invoke-virtual {v9, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 16721
    invoke-interface {v6, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 16711
    .end local v2    # "cn":Landroid/content/ComponentName;
    :cond_8
    :goto_8
    add-int/lit8 v4, v4, 0x1

    move-object v10, v9

    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_6

    .line 16724
    :cond_9
    :try_start_5
    invoke-interface {v6, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_8

    .line 16729
    .end local v4    # "i":I
    .end local v7    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .end local v11    # "user":I
    :catch_0
    move-exception v3

    .line 16732
    :cond_a
    :goto_9
    return-object v6

    .line 16729
    .restart local v4    # "i":I
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "user":I
    :catch_1
    move-exception v3

    .local v3, "ex":Landroid/os/RemoteException;
    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_9

    .end local v3    # "ex":Landroid/os/RemoteException;
    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v2    # "cn":Landroid/content/ComponentName;
    .restart local v7    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_b
    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_7

    .end local v2    # "cn":Landroid/content/ComponentName;
    .end local v7    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_c
    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto/16 :goto_1

    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v2    # "cn":Landroid/content/ComponentName;
    .restart local v7    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_d
    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_4

    .end local v2    # "cn":Landroid/content/ComponentName;
    .end local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_e
    move-object v9, v10

    .end local v10    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v9    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_5
.end method

.method private final computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I
    .locals 33
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 17900
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    if-ne v3, v5, :cond_0

    .line 17902
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    return v3

    .line 17905
    :cond_0
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_1

    .line 17906
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 17907
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 17908
    const/16 v3, 0x10

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17909
    const/16 v3, 0xf

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v3, 0xf

    const/16 v5, 0xf

    move-object/from16 v0, p1

    iput v5, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    return v3

    .line 17912
    :cond_1
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 17913
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 17914
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 17915
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 17916
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17918
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 17920
    .local v11, "activitiesSize":I
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-gtz v3, :cond_6

    .line 17923
    const-string/jumbo v3, "fixed"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17924
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 17925
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 17926
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 17927
    const/4 v3, -0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 17928
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17933
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 17934
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_4

    .line 17935
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 17944
    :cond_2
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-nez v3, :cond_3

    .line 17945
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17947
    :cond_3
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    return v3

    .line 17936
    :cond_4
    if-lez v11, :cond_2

    .line 17937
    const/16 v24, 0x0

    .local v24, "j":I
    :goto_0
    move/from16 v0, v24

    if-ge v0, v11, :cond_2

    .line 17938
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/ActivityRecord;

    .line 17939
    .local v29, "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_5

    .line 17940
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 17937
    :cond_5
    add-int/lit8 v24, v24, 0x1

    goto :goto_0

    .line 17950
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_6
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 17952
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 17959
    .local v2, "PROCESS_STATE_TOP":I
    const/16 v21, 0x0

    .line 17961
    .local v21, "foregroundActivities":Z
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_9

    .line 17963
    const/4 v12, 0x0

    .line 17964
    .local v12, "adj":I
    const/16 v31, -0x1

    .line 17965
    .local v31, "schedGroup":I
    const-string/jumbo v3, "top-activity"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17966
    const/16 v21, 0x1

    .line 17967
    move/from16 v26, v2

    .line 17968
    .local v26, "procState":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_7

    .line 17969
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeKilled:Z

    .line 17970
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    .line 18018
    :cond_7
    :goto_1
    if-nez v21, :cond_12

    if-lez v11, :cond_12

    .line 18019
    const/16 v24, 0x0

    .restart local v24    # "j":I
    :goto_2
    move/from16 v0, v24

    if-ge v0, v11, :cond_12

    .line 18020
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/ActivityRecord;

    .line 18021
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v3, v0, :cond_f

    .line 18022
    const-string/jumbo v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Wtf, activity "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v29

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " in proc activity list not using proc "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18023
    const-string/jumbo v6, "?!? Using "

    .line 18022
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18023
    move-object/from16 v0, v29

    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 18022
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 18023
    const-string/jumbo v6, " instead."

    .line 18022
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18019
    :cond_8
    :goto_3
    add-int/lit8 v24, v24, 0x1

    goto :goto_2

    .line 17972
    .end local v12    # "adj":I
    .end local v24    # "j":I
    .end local v26    # "procState":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v31    # "schedGroup":I
    :cond_9
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v3, :cond_a

    .line 17974
    const/4 v12, 0x0

    .line 17975
    .restart local v12    # "adj":I
    const/16 v31, -0x1

    .line 17976
    .restart local v31    # "schedGroup":I
    const-string/jumbo v3, "instrumentation"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17977
    const/16 v26, 0x4

    .restart local v26    # "procState":I
    goto :goto_1

    .line 17978
    .end local v12    # "adj":I
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_a
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v28

    .local v28, "queue":Lcom/android/server/am/BroadcastQueue;
    if-eqz v28, :cond_c

    .line 17983
    const/4 v12, 0x0

    .line 17984
    .restart local v12    # "adj":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, v28

    if-ne v0, v3, :cond_b

    .line 17985
    const/16 v31, -0x1

    .line 17986
    .restart local v31    # "schedGroup":I
    :goto_4
    const-string/jumbo v3, "broadcast"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17987
    const/16 v26, 0xb

    .restart local v26    # "procState":I
    goto/16 :goto_1

    .line 17985
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_b
    const/16 v31, 0x0

    .restart local v31    # "schedGroup":I
    goto :goto_4

    .line 17988
    .end local v12    # "adj":I
    .end local v31    # "schedGroup":I
    :cond_c
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_e

    .line 17991
    const/4 v12, 0x0

    .line 17992
    .restart local v12    # "adj":I
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->execServicesFg:Z

    if-eqz v3, :cond_d

    .line 17993
    const/16 v31, -0x1

    .line 17994
    .restart local v31    # "schedGroup":I
    :goto_5
    const-string/jumbo v3, "exec-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17995
    const/16 v26, 0xa

    .restart local v26    # "procState":I
    goto/16 :goto_1

    .line 17993
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_d
    const/16 v31, 0x0

    .restart local v31    # "schedGroup":I
    goto :goto_5

    .line 17999
    .end local v12    # "adj":I
    .end local v31    # "schedGroup":I
    :cond_e
    const/16 v31, 0x0

    .line 18002
    .restart local v31    # "schedGroup":I
    move/from16 v12, p2

    .line 18003
    .restart local v12    # "adj":I
    const/16 v26, 0x10

    .line 18004
    .restart local v26    # "procState":I
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18005
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 18006
    const-string/jumbo v3, "cch-empty"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18008
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeKilled:Z

    if-eqz v3, :cond_7

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 18009
    const/16 v12, -0xc

    .line 18010
    const/16 v31, -0x1

    .line 18011
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18012
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 18013
    const-string/jumbo v3, "top-activity"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_1

    .line 18026
    .end local v28    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v24    # "j":I
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_f
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_23

    .line 18028
    const/4 v3, 0x1

    if-le v12, v3, :cond_10

    .line 18029
    const/4 v12, 0x1

    .line 18030
    const-string/jumbo v3, "visible"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18032
    :cond_10
    move/from16 v0, v26

    if-le v0, v2, :cond_11

    .line 18033
    move/from16 v26, v2

    .line 18035
    :cond_11
    const/16 v31, -0x1

    .line 18036
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18037
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 18038
    const/16 v21, 0x1

    .line 18081
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_12
    const/4 v3, 0x2

    if-le v12, v3, :cond_13

    .line 18082
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v3, :cond_2b

    .line 18084
    const/4 v12, 0x2

    .line 18085
    const/16 v26, 0x4

    .line 18086
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18087
    const-string/jumbo v3, "fg-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18088
    const/16 v31, -0x1

    .line 18100
    :cond_13
    :goto_6
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_15

    .line 18101
    const/4 v3, 0x4

    if-le v12, v3, :cond_14

    .line 18103
    const/4 v12, 0x4

    .line 18104
    const/16 v31, 0x0

    .line 18105
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18106
    const-string/jumbo v3, "heavy"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18108
    :cond_14
    const/16 v3, 0x9

    move/from16 v0, v26

    if-le v0, v3, :cond_15

    .line 18109
    const/16 v26, 0x9

    .line 18113
    :cond_15
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_17

    .line 18114
    const/4 v3, 0x6

    if-le v12, v3, :cond_16

    .line 18117
    const/4 v12, 0x6

    .line 18118
    const/16 v31, 0x0

    .line 18119
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18120
    const-string/jumbo v3, "home"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18122
    :cond_16
    const/16 v3, 0xc

    move/from16 v0, v26

    if-le v0, v3, :cond_17

    .line 18123
    const/16 v26, 0xc

    .line 18127
    :cond_17
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_19

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_19

    .line 18128
    const/4 v3, 0x7

    if-le v12, v3, :cond_18

    .line 18132
    const/4 v12, 0x7

    .line 18133
    const/16 v31, 0x0

    .line 18134
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18135
    const-string/jumbo v3, "previous"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18137
    :cond_18
    const/16 v3, 0xd

    move/from16 v0, v26

    if-le v0, v3, :cond_19

    .line 18138
    const/16 v26, 0xd

    .line 18149
    :cond_19
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 18150
    move-object/from16 v0, p1

    iput v12, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 18151
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 18153
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v3, :cond_1c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v3, v3, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_1c

    .line 18155
    const/4 v3, 0x3

    if-le v12, v3, :cond_1b

    .line 18157
    const/4 v12, 0x3

    .line 18158
    const/4 v3, 0x7

    move/from16 v0, v26

    if-le v0, v3, :cond_1a

    .line 18159
    const/16 v26, 0x7

    .line 18161
    :cond_1a
    const-string/jumbo v3, "backup"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18162
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18164
    :cond_1b
    const/16 v3, 0x8

    move/from16 v0, v26

    if-le v0, v3, :cond_1c

    .line 18165
    const/16 v26, 0x8

    .line 18169
    :cond_1c
    const/16 v25, 0x0

    .line 18171
    .local v25, "mayBeTop":Z
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v23, v3, -0x1

    .line 18172
    .local v23, "is":I
    :goto_7
    if-ltz v23, :cond_2d

    if-gtz v12, :cond_1d

    .line 18173
    if-nez v31, :cond_2c

    .line 18176
    :cond_1d
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v23

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Lcom/android/server/am/ServiceRecord;

    .line 18177
    .local v30, "s":Lcom/android/server/am/ServiceRecord;
    move-object/from16 v0, v30

    iget-boolean v3, v0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v3, :cond_1f

    .line 18178
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 18179
    const/16 v3, 0xa

    move/from16 v0, v26

    if-le v0, v3, :cond_1e

    .line 18180
    const/16 v26, 0xa

    .line 18182
    :cond_1e
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_31

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_31

    .line 18187
    const/4 v3, 0x5

    if-le v12, v3, :cond_1f

    .line 18188
    const-string/jumbo v3, "cch-started-ui-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18209
    :cond_1f
    :goto_8
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v18, v3, -0x1

    .line 18210
    .local v18, "conni":I
    :goto_9
    if-ltz v18, :cond_34

    if-gtz v12, :cond_20

    .line 18211
    if-nez v31, :cond_33

    .line 18214
    :cond_20
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    move/from16 v0, v18

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/util/ArrayList;

    .line 18215
    .local v16, "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    const/16 v22, 0x0

    .line 18216
    .local v22, "i":I
    :goto_a
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v3

    move/from16 v0, v22

    if-ge v0, v3, :cond_36

    if-gtz v12, :cond_21

    .line 18217
    if-nez v31, :cond_35

    .line 18222
    :cond_21
    move-object/from16 v0, v16

    move/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/am/ConnectionRecord;

    .line 18223
    .local v20, "cr":Lcom/android/server/am/ConnectionRecord;
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v3, v0, :cond_37

    .line 18219
    :cond_22
    :goto_b
    add-int/lit8 v22, v22, 0x1

    goto :goto_a

    .line 18040
    .end local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v18    # "conni":I
    .end local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v22    # "i":I
    .end local v23    # "is":I
    .end local v25    # "mayBeTop":Z
    .end local v30    # "s":Lcom/android/server/am/ServiceRecord;
    .restart local v24    # "j":I
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_23
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v5, :cond_24

    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_27

    .line 18041
    :cond_24
    const/4 v3, 0x2

    if-le v12, v3, :cond_25

    .line 18042
    const/4 v12, 0x2

    .line 18043
    const-string/jumbo v3, "pausing"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18045
    :cond_25
    move/from16 v0, v26

    if-le v0, v2, :cond_26

    .line 18046
    move/from16 v26, v2

    .line 18048
    :cond_26
    const/16 v31, -0x1

    .line 18049
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18050
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 18051
    const/16 v21, 0x1

    .line 18040
    goto/16 :goto_3

    .line 18052
    :cond_27
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->STOPPING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_2a

    .line 18053
    const/4 v3, 0x2

    if-le v12, v3, :cond_28

    .line 18054
    const/4 v12, 0x2

    .line 18055
    const-string/jumbo v3, "stopping"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18064
    :cond_28
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v3, :cond_29

    .line 18065
    const/16 v3, 0xd

    move/from16 v0, v26

    if-le v0, v3, :cond_29

    .line 18066
    const/16 v26, 0xd

    .line 18069
    :cond_29
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18070
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 18071
    const/16 v21, 0x1

    goto/16 :goto_3

    .line 18073
    :cond_2a
    const/16 v3, 0xe

    move/from16 v0, v26

    if-le v0, v3, :cond_8

    .line 18074
    const/16 v26, 0xe

    .line 18075
    const-string/jumbo v3, "cch-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_3

    .line 18089
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_2b
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    if-eqz v3, :cond_13

    .line 18091
    const/4 v12, 0x2

    .line 18092
    const/16 v26, 0x6

    .line 18093
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18094
    const-string/jumbo v3, "force-fg"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18095
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 18096
    const/16 v31, -0x1

    goto/16 :goto_6

    .line 18174
    .restart local v23    # "is":I
    .restart local v25    # "mayBeTop":Z
    :cond_2c
    const/4 v3, 0x2

    move/from16 v0, v26

    if-gt v0, v3, :cond_1d

    .line 18386
    :cond_2d
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v27, v3, -0x1

    .line 18387
    .local v27, "provi":I
    :goto_c
    if-ltz v27, :cond_53

    if-gtz v12, :cond_2e

    .line 18388
    if-nez v31, :cond_52

    .line 18391
    :cond_2e
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move/from16 v0, v27

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ContentProviderRecord;

    .line 18392
    .local v19, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v22, v3, -0x1

    .line 18393
    .restart local v22    # "i":I
    :goto_d
    if-ltz v22, :cond_5a

    if-gtz v12, :cond_2f

    .line 18394
    if-nez v31, :cond_59

    .line 18397
    :cond_2f
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/am/ContentProviderConnection;

    .line 18398
    .local v17, "conn":Lcom/android/server/am/ContentProviderConnection;
    move-object/from16 v0, v17

    iget-object v4, v0, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 18399
    .local v4, "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    if-ne v4, v0, :cond_5d

    .line 18396
    :cond_30
    :goto_e
    add-int/lit8 v22, v22, -0x1

    goto :goto_d

    .line 18191
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v19    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v22    # "i":I
    .end local v27    # "provi":I
    .restart local v30    # "s":Lcom/android/server/am/ServiceRecord;
    :cond_31
    move-object/from16 v0, v30

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const-wide/32 v8, 0x1b7740

    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-gez v3, :cond_32

    .line 18195
    const/4 v3, 0x5

    if-le v12, v3, :cond_32

    .line 18196
    const/4 v12, 0x5

    .line 18197
    const-string/jumbo v3, "started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18198
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18204
    :cond_32
    const/4 v3, 0x5

    if-le v12, v3, :cond_1f

    .line 18205
    const-string/jumbo v3, "cch-started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_8

    .line 18212
    .restart local v18    # "conni":I
    :cond_33
    const/4 v3, 0x2

    move/from16 v0, v26

    if-gt v0, v3, :cond_20

    .line 18175
    :cond_34
    add-int/lit8 v23, v23, -0x1

    goto/16 :goto_7

    .line 18218
    .restart local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .restart local v22    # "i":I
    :cond_35
    const/4 v3, 0x2

    move/from16 v0, v26

    if-gt v0, v3, :cond_21

    .line 18213
    :cond_36
    add-int/lit8 v18, v18, -0x1

    goto/16 :goto_9

    .line 18227
    .restart local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    :cond_37
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x20

    if-nez v3, :cond_40

    .line 18228
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v4, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 18229
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v14

    .line 18231
    .local v14, "clientAdj":I
    iget v15, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18232
    .local v15, "clientProcState":I
    const/16 v3, 0xe

    if-lt v15, v3, :cond_38

    .line 18236
    const/16 v15, 0x10

    .line 18238
    :cond_38
    const/4 v13, 0x0

    .line 18239
    .local v13, "adjType":Ljava/lang/String;
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_3a

    .line 18242
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_44

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_44

    .line 18247
    if-le v12, v14, :cond_39

    .line 18248
    const-string/jumbo v13, "cch-bound-ui-services"

    .line 18250
    .end local v13    # "adjType":Ljava/lang/String;
    :cond_39
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18251
    move v14, v12

    .line 18252
    move/from16 v15, v26

    .line 18268
    :cond_3a
    :goto_f
    if-le v12, v14, :cond_3b

    .line 18276
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_46

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_46

    .line 18277
    const/4 v3, 0x2

    if-le v14, v3, :cond_46

    .line 18278
    const-string/jumbo v13, "cch-bound-ui-services"

    .line 18301
    :cond_3b
    :goto_10
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_50

    .line 18302
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_3c

    .line 18303
    const/16 v31, -0x1

    .line 18305
    :cond_3c
    const/4 v3, 0x2

    if-gt v15, v3, :cond_3d

    .line 18306
    const/4 v3, 0x2

    if-ne v15, v3, :cond_4d

    .line 18316
    const/16 v25, 0x1

    .line 18317
    const/16 v15, 0x10

    .line 18345
    :cond_3d
    :goto_11
    move/from16 v0, v26

    if-le v0, v15, :cond_3e

    .line 18346
    move/from16 v26, v15

    .line 18348
    :cond_3e
    const/4 v3, 0x7

    move/from16 v0, v26

    if-ge v0, v3, :cond_3f

    .line 18349
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x20000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_3f

    .line 18350
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 18352
    :cond_3f
    if-eqz v13, :cond_40

    .line 18353
    move-object/from16 v0, p1

    iput-object v13, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18354
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 18356
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 18357
    move-object/from16 v0, p1

    iput v15, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 18358
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 18361
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    :cond_40
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x8000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_41

    .line 18362
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 18364
    :cond_41
    move-object/from16 v0, v20

    iget-object v10, v0, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;

    .line 18365
    .local v10, "a":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit16 v3, v3, 0x80

    if-eqz v3, :cond_22

    .line 18366
    if-eqz v10, :cond_22

    if-lez v12, :cond_22

    .line 18367
    iget-boolean v3, v10, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-nez v3, :cond_42

    iget-object v3, v10, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_51

    .line 18369
    :cond_42
    :goto_12
    const/4 v12, 0x0

    .line 18370
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_43

    .line 18371
    const/16 v31, -0x1

    .line 18373
    :cond_43
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18374
    const-string/jumbo v3, "service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18375
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 18377
    move-object/from16 v0, p1

    iput-object v10, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 18378
    move/from16 v0, v26

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 18379
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    goto/16 :goto_b

    .line 18254
    .end local v10    # "a":Lcom/android/server/am/ActivityRecord;
    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .restart local v13    # "adjType":Ljava/lang/String;
    .restart local v14    # "clientAdj":I
    .restart local v15    # "clientProcState":I
    :cond_44
    move-object/from16 v0, v30

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 18255
    const-wide/32 v8, 0x1b7740

    .line 18254
    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-ltz v3, :cond_3a

    .line 18261
    if-le v12, v14, :cond_45

    .line 18262
    const-string/jumbo v13, "cch-bound-services"

    .line 18264
    .end local v13    # "adjType":Ljava/lang/String;
    :cond_45
    move v14, v12

    goto/16 :goto_f

    .line 18280
    :cond_46
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x48

    if-eqz v3, :cond_4a

    .line 18282
    const/16 v3, -0xb

    if-lt v14, v3, :cond_49

    .line 18283
    move v12, v14

    .line 18295
    :cond_47
    :goto_13
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-nez v3, :cond_48

    .line 18296
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18298
    :cond_48
    const-string/jumbo v13, "service"

    .local v13, "adjType":Ljava/lang/String;
    goto/16 :goto_10

    .line 18283
    .end local v13    # "adjType":Ljava/lang/String;
    :cond_49
    const/16 v12, -0xb

    goto :goto_13

    .line 18284
    :cond_4a
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x40000000    # 2.0f

    and-int/2addr v3, v5

    if-eqz v3, :cond_4b

    .line 18285
    const/4 v3, 0x2

    if-ge v14, v3, :cond_4b

    .line 18286
    const/4 v3, 0x2

    if-le v12, v3, :cond_4b

    .line 18287
    const/4 v12, 0x2

    .line 18286
    goto :goto_13

    .line 18288
    :cond_4b
    const/4 v3, 0x1

    if-le v14, v3, :cond_4c

    .line 18289
    move v12, v14

    goto :goto_13

    .line 18291
    :cond_4c
    const/4 v3, 0x1

    if-le v12, v3, :cond_47

    .line 18292
    const/4 v12, 0x1

    goto :goto_13

    .line 18323
    :cond_4d
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x4000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_4e

    .line 18325
    const/4 v15, 0x3

    .line 18324
    goto/16 :goto_11

    .line 18326
    :cond_4e
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 18327
    const/4 v5, 0x1

    .line 18326
    if-ne v3, v5, :cond_4f

    .line 18328
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x2000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_4f

    .line 18331
    const/4 v15, 0x3

    .line 18329
    goto/16 :goto_11

    .line 18334
    :cond_4f
    const/4 v15, 0x6

    .line 18333
    goto/16 :goto_11

    .line 18340
    :cond_50
    const/4 v3, 0x7

    .line 18339
    if-ge v15, v3, :cond_3d

    .line 18342
    const/4 v15, 0x7

    .line 18341
    goto/16 :goto_11

    .line 18368
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    .restart local v10    # "a":Lcom/android/server/am/ActivityRecord;
    :cond_51
    iget-object v3, v10, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_22

    goto/16 :goto_12

    .line 18389
    .end local v10    # "a":Lcom/android/server/am/ActivityRecord;
    .end local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v18    # "conni":I
    .end local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v22    # "i":I
    .end local v30    # "s":Lcom/android/server/am/ServiceRecord;
    .restart local v27    # "provi":I
    :cond_52
    const/4 v3, 0x2

    move/from16 v0, v26

    if-gt v0, v3, :cond_2e

    .line 18472
    :cond_53
    if-eqz v25, :cond_54

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_54

    .line 18479
    packed-switch v26, :pswitch_data_0

    .line 18489
    :pswitch_0
    const/16 v26, 0x2

    .line 18494
    :cond_54
    :goto_14
    const/16 v3, 0x10

    move/from16 v0, v26

    if-lt v0, v3, :cond_55

    .line 18495
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-eqz v3, :cond_65

    .line 18497
    const/16 v26, 0xf

    .line 18498
    const-string/jumbo v3, "cch-client-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18507
    :cond_55
    :goto_15
    const/4 v3, 0x5

    if-ne v12, v3, :cond_57

    .line 18508
    if-eqz p4, :cond_56

    .line 18509
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    div-int/lit8 v5, v5, 0x3

    if-le v3, v5, :cond_66

    const/4 v3, 0x1

    :goto_16
    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 18510
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 18512
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-nez v3, :cond_68

    .line 18517
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v3, :cond_67

    .line 18518
    move-object/from16 v0, p1

    iget-wide v6, v0, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v3, v6, v8

    if-ltz v3, :cond_67

    .line 18519
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    .line 18520
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 18530
    :cond_56
    :goto_17
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_57

    .line 18531
    const/16 v12, 0x8

    .line 18535
    :cond_57
    move-object/from16 v0, p1

    iput v12, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 18539
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-le v12, v3, :cond_58

    .line 18540
    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 18541
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    const/4 v5, 0x2

    if-gt v3, v5, :cond_58

    .line 18542
    const/16 v31, -0x1

    .line 18551
    :cond_58
    move-object/from16 v0, p1

    invoke-virtual {v0, v12}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 18552
    move/from16 v0, v31

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 18553
    move/from16 v0, v26

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18554
    move/from16 v0, v21

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 18556
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    return v3

    .line 18395
    .restart local v19    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v22    # "i":I
    :cond_59
    const/4 v3, 0x2

    move/from16 v0, v26

    if-gt v0, v3, :cond_2f

    .line 18458
    :cond_5a
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_5c

    .line 18459
    if-lez v12, :cond_5b

    .line 18460
    const/4 v12, 0x0

    .line 18461
    const/16 v31, -0x1

    .line 18462
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18463
    const-string/jumbo v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18464
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 18466
    :cond_5b
    const/4 v3, 0x6

    move/from16 v0, v26

    if-le v0, v3, :cond_5c

    .line 18467
    const/16 v26, 0x6

    .line 18390
    :cond_5c
    add-int/lit8 v27, v27, -0x1

    goto/16 :goto_c

    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .restart local v17    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_5d
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 18403
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v14

    .line 18404
    .restart local v14    # "clientAdj":I
    iget v15, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18405
    .restart local v15    # "clientProcState":I
    const/16 v3, 0xe

    if-lt v15, v3, :cond_5e

    .line 18408
    const/16 v15, 0x10

    .line 18410
    :cond_5e
    if-le v12, v14, :cond_5f

    .line 18411
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_62

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_62

    .line 18412
    const/4 v3, 0x2

    if-le v14, v3, :cond_62

    .line 18413
    const-string/jumbo v3, "cch-ui-provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 18419
    :goto_18
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    and-int/2addr v3, v5

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 18420
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 18422
    move-object/from16 v0, p1

    iput-object v4, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 18423
    move-object/from16 v0, p1

    iput v15, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 18424
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 18426
    :cond_5f
    const/4 v3, 0x2

    if-gt v15, v3, :cond_60

    .line 18427
    const/4 v3, 0x2

    if-ne v15, v3, :cond_64

    .line 18437
    const/16 v25, 0x1

    .line 18438
    const/16 v15, 0x10

    .line 18448
    :cond_60
    :goto_19
    move/from16 v0, v26

    if-le v0, v15, :cond_61

    .line 18449
    move/from16 v26, v15

    .line 18451
    :cond_61
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_30

    .line 18452
    const/16 v31, -0x1

    goto/16 :goto_e

    .line 18415
    :cond_62
    if-lez v14, :cond_63

    .line 18416
    move v12, v14

    .line 18417
    :goto_1a
    const-string/jumbo v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_18

    .line 18416
    :cond_63
    const/4 v12, 0x0

    goto :goto_1a

    .line 18445
    :cond_64
    const/4 v15, 0x3

    .line 18444
    goto :goto_19

    .line 18485
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    .end local v17    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v19    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v22    # "i":I
    :pswitch_1
    const/16 v26, 0x3

    .line 18486
    goto/16 :goto_14

    .line 18499
    :cond_65
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v3, :cond_55

    .line 18502
    const/16 v26, 0xe

    .line 18503
    const-string/jumbo v3, "cch-as-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_15

    .line 18509
    :cond_66
    const/4 v3, 0x0

    goto/16 :goto_16

    .line 18523
    :cond_67
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    goto/16 :goto_17

    .line 18527
    :cond_68
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    goto/16 :goto_17

    .line 18479
    :pswitch_data_0
    .packed-switch 0x6
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 28
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 12791
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v10

    .line 12792
    .local v10, "timeMillis":J
    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    .line 12793
    .local v8, "shortMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v9, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    .line 12794
    .local v9, "longMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v0, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    move-object/from16 v22, v0

    .line 12795
    .local v22, "stackTrace":Ljava/lang/String;
    if-eqz v8, :cond_1

    if-eqz v9, :cond_1

    .line 12796
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v12, ": "

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 12801
    :cond_0
    :goto_0
    new-instance v21, Lcom/android/server/am/AppErrorResult;

    invoke-direct/range {v21 .. v21}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 12802
    .local v21, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 12803
    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v5, :cond_6

    .line 12805
    if-eqz p1, :cond_2

    :try_start_1
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 12806
    :goto_1
    if-eqz p1, :cond_3

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 12807
    .local v7, "pid":I
    :goto_2
    if-eqz p1, :cond_4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v23, v0

    .line 12808
    .local v23, "uid":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 12809
    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    .line 12808
    invoke-interface/range {v5 .. v12}, Landroid/app/IActivityController;->appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_6

    .line 12810
    const-string/jumbo v5, "1"

    const-string/jumbo v12, "ro.debuggable"

    const-string/jumbo v24, "0"

    move-object/from16 v0, v24

    invoke-static {v12, v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 12811
    const-string/jumbo v5, "Native crash"

    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    .line 12810
    if-eqz v5, :cond_5

    .line 12812
    const-string/jumbo v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v24, "Skip killing native crashed app "

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12813
    const-string/jumbo v24, "("

    .line 12812
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12813
    const-string/jumbo v24, ") during testing"

    .line 12812
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_4
    monitor-exit p0

    .line 12825
    return-void

    .line 12797
    .end local v7    # "pid":I
    .end local v21    # "result":Lcom/android/server/am/AppErrorResult;
    .end local v23    # "uid":I
    :cond_1
    if-eqz v8, :cond_0

    .line 12798
    move-object v9, v8

    goto/16 :goto_0

    .line 12805
    .restart local v21    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_2
    const/4 v6, 0x0

    .local v6, "name":Ljava/lang/String;
    goto :goto_1

    .line 12806
    .end local v6    # "name":Ljava/lang/String;
    :cond_3
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .restart local v7    # "pid":I
    goto :goto_2

    .line 12807
    :cond_4
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v23

    .restart local v23    # "uid":I
    goto :goto_3

    .line 12815
    :cond_5
    const-string/jumbo v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v24, "Force-killing crashed app "

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12816
    const-string/jumbo v24, " at watcher\'s request"

    .line 12815
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12817
    if-eqz p1, :cond_9

    .line 12818
    const-string/jumbo v5, "crash"

    const/4 v12, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_4

    .line 12827
    .end local v7    # "pid":I
    .end local v23    # "uid":I
    :catch_0
    move-exception v15

    .line 12828
    .local v15, "e":Landroid/os/RemoteException;
    const/4 v5, 0x0

    :try_start_3
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 12829
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v5

    const/4 v12, 0x0

    invoke-virtual {v5, v12}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 12833
    .end local v15    # "e":Landroid/os/RemoteException;
    :cond_6
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 12836
    .local v18, "origId":J
    if-eqz p1, :cond_a

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v5, :cond_a

    .line 12837
    const-string/jumbo v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v24, "Error in app "

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12838
    const-string/jumbo v24, " running instrumentation "

    .line 12837
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12838
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    move-object/from16 v24, v0

    .line 12837
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    .line 12838
    const-string/jumbo v24, ":"

    .line 12837
    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12839
    if-eqz v8, :cond_7

    const-string/jumbo v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v24, "  "

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12840
    :cond_7
    if-eqz v9, :cond_8

    const-string/jumbo v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v24, "  "

    move-object/from16 v0, v24

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12841
    :cond_8
    new-instance v16, Landroid/os/Bundle;

    invoke-direct/range {v16 .. v16}, Landroid/os/Bundle;-><init>()V

    .line 12842
    .local v16, "info":Landroid/os/Bundle;
    const-string/jumbo v5, "shortMsg"

    move-object/from16 v0, v16

    invoke-virtual {v0, v5, v8}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 12843
    const-string/jumbo v5, "longMsg"

    move-object/from16 v0, v16

    invoke-virtual {v0, v5, v9}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 12844
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v16

    invoke-virtual {v0, v1, v5, v2}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 12845
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 12846
    return-void

    .line 12821
    .end local v16    # "info":Landroid/os/Bundle;
    .end local v18    # "origId":J
    .restart local v7    # "pid":I
    .restart local v23    # "uid":I
    :cond_9
    :try_start_4
    invoke-static {v7}, Landroid/os/Process;->killProcess(I)V

    .line 12822
    move/from16 v0, v23

    invoke-static {v0, v7}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto/16 :goto_4

    .line 12802
    .end local v7    # "pid":I
    .end local v23    # "uid":I
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 12850
    .restart local v18    # "origId":J
    :cond_a
    if-eqz p1, :cond_b

    .line 12851
    :try_start_5
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v24, v0

    move/from16 v0, v24

    invoke-virtual {v5, v12, v0}, Lcom/android/server/am/BatteryStatsService;->noteProcessCrash(Ljava/lang/String;I)V

    .line 12856
    :cond_b
    if-eqz p1, :cond_f

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v22

    invoke-direct {v0, v1, v8, v9, v2}, Lcom/android/server/am/ActivityManagerService;->makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_f

    .line 12861
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v17

    .line 12862
    .local v17, "msg":Landroid/os/Message;
    const/4 v5, 0x1

    move-object/from16 v0, v17

    iput v5, v0, Landroid/os/Message;->what:I

    .line 12863
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    .line 12864
    .local v13, "data":Ljava/util/HashMap;
    const-string/jumbo v5, "result"

    move-object/from16 v0, v21

    invoke-virtual {v13, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12865
    const-string/jumbo v5, "app"

    move-object/from16 v0, p1

    invoke-virtual {v13, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12866
    move-object/from16 v0, v17

    iput-object v13, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 12867
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v17

    invoke-virtual {v5, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 12869
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    monitor-exit p0

    .line 12872
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v20

    .line 12874
    .local v20, "res":I
    const/4 v4, 0x0

    .line 12875
    .local v4, "appErrorIntent":Landroid/content/Intent;
    monitor-enter p0

    .line 12876
    if-eqz p1, :cond_c

    :try_start_6
    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_10

    .line 12882
    :cond_c
    :goto_5
    const/4 v5, 0x1

    move/from16 v0, v20

    if-ne v0, v5, :cond_d

    .line 12883
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    move-result-object v4

    .end local v4    # "appErrorIntent":Landroid/content/Intent;
    :cond_d
    monitor-exit p0

    .line 12887
    if-eqz v4, :cond_e

    .line 12889
    :try_start_7
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v12, Landroid/os/UserHandle;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v24, v0

    move/from16 v0, v24

    invoke-direct {v12, v0}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v5, v4, v12}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_7
    .catch Landroid/content/ActivityNotFoundException; {:try_start_7 .. :try_end_7} :catch_1

    .line 12790
    :cond_e
    :goto_6
    return-void

    .line 12857
    .end local v13    # "data":Ljava/util/HashMap;
    .end local v17    # "msg":Landroid/os/Message;
    .end local v20    # "res":I
    :cond_f
    :try_start_8
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    monitor-exit p0

    .line 12858
    return-void

    .line 12879
    .restart local v4    # "appErrorIntent":Landroid/content/Intent;
    .restart local v13    # "data":Ljava/util/HashMap;
    .restart local v17    # "msg":Landroid/os/Message;
    .restart local v20    # "res":I
    :cond_10
    :try_start_9
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v24, v0

    .line 12880
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v26

    invoke-static/range {v26 .. v27}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v25

    .line 12879
    move/from16 v0, v24

    move-object/from16 v1, v25

    invoke-virtual {v5, v12, v0, v1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    goto :goto_5

    .line 12875
    :catchall_1
    move-exception v5

    monitor-exit p0

    throw v5

    .line 12890
    .end local v4    # "appErrorIntent":Landroid/content/Intent;
    :catch_1
    move-exception v14

    .line 12891
    .local v14, "e":Landroid/content/ActivityNotFoundException;
    const-string/jumbo v5, "ActivityManager"

    const-string/jumbo v12, "bug report receiver dissappeared"

    invoke-static {v5, v12, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6
.end method

.method private createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    const/4 v4, 0x0

    .line 12911
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    if-nez v3, :cond_0

    .line 12912
    return-object v4

    .line 12915
    :cond_0
    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v3, :cond_1

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v3, :cond_5

    .line 12919
    :cond_1
    new-instance v0, Landroid/app/ApplicationErrorReport;

    invoke-direct {v0}, Landroid/app/ApplicationErrorReport;-><init>()V

    .line 12920
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v3, v0, Landroid/app/ApplicationErrorReport;->packageName:Ljava/lang/String;

    .line 12921
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    iput-object v3, v0, Landroid/app/ApplicationErrorReport;->installerPackageName:Ljava/lang/String;

    .line 12922
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v3, v0, Landroid/app/ApplicationErrorReport;->processName:Ljava/lang/String;

    .line 12923
    iput-wide p2, v0, Landroid/app/ApplicationErrorReport;->time:J

    .line 12924
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x1

    if-eqz v3, :cond_2

    move v1, v2

    :cond_2
    iput-boolean v1, v0, Landroid/app/ApplicationErrorReport;->systemApp:Z

    .line 12926
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v1, :cond_3

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v1, :cond_6

    .line 12927
    :cond_3
    iput v2, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 12928
    iput-object p4, v0, Landroid/app/ApplicationErrorReport;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    .line 12938
    :cond_4
    :goto_0
    return-object v0

    .line 12915
    .end local v0    # "report":Landroid/app/ApplicationErrorReport;
    :cond_5
    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-nez v3, :cond_1

    .line 12916
    return-object v4

    .line 12929
    .restart local v0    # "report":Landroid/app/ApplicationErrorReport;
    :cond_6
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v1, :cond_4

    .line 12930
    const/4 v1, 0x2

    iput v1, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 12931
    new-instance v1, Landroid/app/ApplicationErrorReport$AnrInfo;

    invoke-direct {v1}, Landroid/app/ApplicationErrorReport$AnrInfo;-><init>()V

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    .line 12933
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->activity:Ljava/lang/String;

    .line 12934
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->cause:Ljava/lang/String;

    .line 12935
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->info:Ljava/lang/String;

    goto :goto_0
.end method

.method private createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 11
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v10, 0x0

    const/4 v6, -0x1

    const/4 v7, 0x0

    .line 8522
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    .line 8525
    new-instance v2, Landroid/app/ActivityManager$RecentTaskInfo;

    invoke-direct {v2}, Landroid/app/ActivityManager$RecentTaskInfo;-><init>()V

    .line 8526
    .local v2, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    if-nez v5, :cond_1

    move v5, v6

    :goto_0
    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->id:I

    .line 8527
    iget v5, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    .line 8528
    new-instance v5, Landroid/content/Intent;

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v8

    invoke-direct {v5, v8}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    .line 8529
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;

    .line 8530
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->lastDescription:Ljava/lang/CharSequence;

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->description:Ljava/lang/CharSequence;

    .line 8531
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v5, :cond_0

    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    iget v6, v5, Lcom/android/server/am/ActivityStack;->mStackId:I

    :cond_0
    iput v6, v2, Landroid/app/ActivityManager$RecentTaskInfo;->stackId:I

    .line 8532
    iget v5, p1, Lcom/android/server/am/TaskRecord;->userId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->userId:I

    .line 8533
    new-instance v5, Landroid/app/ActivityManager$TaskDescription;

    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->lastTaskDescription:Landroid/app/ActivityManager$TaskDescription;

    invoke-direct {v5, v6}, Landroid/app/ActivityManager$TaskDescription;-><init>(Landroid/app/ActivityManager$TaskDescription;)V

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 8534
    iget-wide v8, p1, Lcom/android/server/am/TaskRecord;->firstActiveTime:J

    iput-wide v8, v2, Landroid/app/ActivityManager$RecentTaskInfo;->firstActiveTime:J

    .line 8535
    iget-wide v8, p1, Lcom/android/server/am/TaskRecord;->lastActiveTime:J

    iput-wide v8, v2, Landroid/app/ActivityManager$RecentTaskInfo;->lastActiveTime:J

    .line 8536
    iget v5, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskId:I

    .line 8537
    iget v5, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskColor:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskColor:I

    .line 8538
    iput v10, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    .line 8540
    const/4 v0, 0x0

    .line 8541
    .local v0, "base":Lcom/android/server/am/ActivityRecord;
    const/4 v4, 0x0

    .line 8544
    .local v4, "top":Lcom/android/server/am/ActivityRecord;
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .end local v0    # "base":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "top":Lcom/android/server/am/ActivityRecord;
    .local v1, "i":I
    :goto_1
    if-ltz v1, :cond_5

    .line 8545
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityRecord;

    .line 8546
    .local v3, "tmp":Lcom/android/server/am/ActivityRecord;
    iget-boolean v5, v3, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v5, :cond_2

    .line 8544
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 8526
    .end local v1    # "i":I
    .end local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    :cond_1
    iget v5, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    goto :goto_0

    .line 8549
    .restart local v1    # "i":I
    .restart local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    :cond_2
    move-object v0, v3

    .line 8550
    .local v0, "base":Lcom/android/server/am/ActivityRecord;
    if-eqz v4, :cond_3

    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v6, Lcom/android/server/am/ActivityStack$ActivityState;->INITIALIZING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v5, v6, :cond_4

    .line 8551
    :cond_3
    move-object v4, v0

    .line 8553
    :cond_4
    iget v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    add-int/lit8 v5, v5, 0x1

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    goto :goto_2

    .line 8556
    .end local v0    # "base":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    :cond_5
    if-eqz v0, :cond_7

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    :goto_3
    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->baseActivity:Landroid/content/ComponentName;

    .line 8557
    if-eqz v4, :cond_6

    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    :cond_6
    iput-object v7, v2, Landroid/app/ActivityManager$RecentTaskInfo;->topActivity:Landroid/content/ComponentName;

    .line 8559
    return-object v2

    :cond_7
    move-object v5, v7

    .line 8556
    goto :goto_3
.end method

.method private deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z
    .locals 12
    .param p1, "onFinishCallback"    # Ljava/lang/Runnable;
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Runnable;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;I)Z"
        }
    .end annotation

    .prologue
    .line 11868
    .local p2, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    new-instance v2, Landroid/content/Intent;

    const-string/jumbo v1, "android.intent.action.PRE_BOOT_COMPLETED"

    invoke-direct {v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11869
    .local v2, "intent":Landroid/content/Intent;
    const/4 v5, 0x0

    .line 11871
    .local v5, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 11872
    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 11871
    invoke-interface {v1, v2, v3, v4, p3}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    .line 11875
    .end local v5    # "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :goto_0
    if-nez v5, :cond_0

    .line 11876
    const/4 v1, 0x0

    return v1

    .line 11878
    :cond_0
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    add-int/lit8 v10, v1, -0x1

    .local v10, "i":I
    :goto_1
    if-ltz v10, :cond_2

    .line 11879
    invoke-interface {v5, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x1

    if-nez v1, :cond_1

    .line 11881
    invoke-interface {v5, v10}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 11878
    :cond_1
    add-int/lit8 v10, v10, -0x1

    goto :goto_1

    .line 11884
    :cond_2
    const/high16 v1, 0x2000000

    invoke-virtual {v2, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 11888
    if-nez p3, :cond_4

    .line 11889
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->readLastDonePreBootReceivers()Ljava/util/ArrayList;

    move-result-object v11

    .line 11890
    .local v11, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/4 v10, 0x0

    :goto_2
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    if-ge v10, v1, :cond_4

    .line 11891
    invoke-interface {v5, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v7, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 11892
    .local v7, "ai":Landroid/content/pm/ActivityInfo;
    new-instance v8, Landroid/content/ComponentName;

    iget-object v1, v7, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v3, v7, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v8, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 11893
    .local v8, "comp":Landroid/content/ComponentName;
    invoke-virtual {v11, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 11896
    invoke-interface {v5, v10}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 11897
    add-int/lit8 v10, v10, -0x1

    .line 11900
    invoke-virtual {p2, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11890
    :cond_3
    add-int/lit8 v10, v10, 0x1

    goto :goto_2

    .line 11905
    .end local v7    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v11    # "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_4
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    if-gtz v1, :cond_5

    .line 11906
    const/4 v1, 0x0

    return v1

    .line 11910
    :cond_5
    if-nez p3, :cond_6

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v6

    .line 11912
    .local v6, "users":[I
    :goto_3
    array-length v1, v6

    if-gtz v1, :cond_7

    .line 11913
    const/4 v1, 0x0

    return v1

    .line 11911
    .end local v6    # "users":[I
    :cond_6
    const/4 v1, 0x1

    new-array v6, v1, [I

    const/4 v1, 0x0

    aput p3, v6, v1

    .restart local v6    # "users":[I
    goto :goto_3

    .line 11916
    :cond_7
    new-instance v0, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Intent;Ljava/lang/Runnable;Ljava/util/ArrayList;Ljava/util/List;[I)V

    .line 11918
    .local v0, "cont":Lcom/android/server/am/ActivityManagerService$PreBootContinuation;
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;->go()V

    .line 11919
    const/4 v1, 0x1

    return v1

    .line 11873
    .end local v0    # "cont":Lcom/android/server/am/ActivityManagerService$PreBootContinuation;
    .end local v6    # "users":[I
    .end local v10    # "i":I
    .restart local v5    # "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :catch_0
    move-exception v9

    .local v9, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private dispatchProcessDied(II)V
    .locals 4
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .prologue
    .line 3894
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 3895
    .local v1, "i":I
    :cond_0
    :goto_0
    if-lez v1, :cond_1

    .line 3896
    add-int/lit8 v1, v1, -0x1

    .line 3897
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v2

    check-cast v2, Landroid/app/IProcessObserver;

    .line 3898
    .local v2, "observer":Landroid/app/IProcessObserver;
    if-eqz v2, :cond_0

    .line 3900
    :try_start_0
    invoke-interface {v2, p1, p2}, Landroid/app/IProcessObserver;->onProcessDied(II)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 3901
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0

    .line 3905
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v2    # "observer":Landroid/app/IProcessObserver;
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 3893
    return-void
.end method

.method private dispatchProcessesChanged()V
    .locals 9

    .prologue
    .line 3847
    monitor-enter p0

    .line 3848
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 3849
    .local v0, "N":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    array-length v6, v6

    if-ge v6, v0, :cond_0

    .line 3850
    new-array v6, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 3852
    :cond_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 3853
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3858
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 3859
    .local v2, "i":I
    :cond_1
    :goto_0
    if-lez v2, :cond_4

    .line 3860
    add-int/lit8 v2, v2, -0x1

    .line 3861
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v5

    check-cast v5, Landroid/app/IProcessObserver;

    .line 3862
    .local v5, "observer":Landroid/app/IProcessObserver;
    if-eqz v5, :cond_1

    .line 3864
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_1
    if-ge v4, v0, :cond_1

    .line 3865
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v3, v6, v4

    .line 3866
    .local v3, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v6, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v6, v6, 0x1

    if-eqz v6, :cond_2

    .line 3870
    iget v6, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v7, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    .line 3871
    iget-boolean v8, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    .line 3870
    invoke-interface {v5, v6, v7, v8}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V

    .line 3873
    :cond_2
    iget v6, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_3

    .line 3877
    iget v6, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v7, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget v8, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    invoke-interface {v5, v6, v7, v8}, Landroid/app/IProcessObserver;->onProcessStateChanged(III)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 3864
    :cond_3
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 3847
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    .end local v4    # "j":I
    .end local v5    # "observer":Landroid/app/IProcessObserver;
    :catchall_0
    move-exception v6

    monitor-exit p0

    throw v6

    .line 3884
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    :cond_4
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 3886
    monitor-enter p0

    .line 3887
    const/4 v4, 0x0

    .restart local v4    # "j":I
    :goto_2
    if-ge v4, v0, :cond_5

    .line 3888
    :try_start_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v7, v7, v4

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 3887
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    :cond_5
    monitor-exit p0

    .line 3845
    return-void

    .line 3886
    :catchall_1
    move-exception v6

    monitor-exit p0

    throw v6

    .line 3880
    .restart local v5    # "observer":Landroid/app/IProcessObserver;
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private dispatchUidsChanged()V
    .locals 10

    .prologue
    .line 3910
    monitor-enter p0

    .line 3911
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 3912
    .local v0, "N":I
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    array-length v7, v7

    if-ge v7, v0, :cond_0

    .line 3913
    new-array v7, v0, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 3915
    :cond_0
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v0, :cond_1

    .line 3916
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord$ChangeItem;

    .line 3917
    .local v1, "change":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aput-object v1, v7, v3

    .line 3918
    iget-object v7, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 v8, 0x0

    iput-object v8, v7, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 3919
    const/4 v7, 0x0

    iput-object v7, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 3915
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 3921
    .end local v1    # "change":Lcom/android/server/am/UidRecord$ChangeItem;
    :cond_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->clear()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3926
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v7, :cond_3

    .line 3927
    const/4 v5, 0x0

    .local v5, "j":I
    :goto_1
    if-ge v5, v0, :cond_3

    .line 3928
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v4, v7, v5

    .line 3929
    .local v4, "item":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-boolean v7, v4, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    if-eqz v7, :cond_2

    .line 3930
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget v8, v4, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v7, v8}, Landroid/os/PowerManagerInternal;->uidGone(I)V

    .line 3927
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 3910
    .end local v0    # "N":I
    .end local v3    # "i":I
    .end local v4    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .end local v5    # "j":I
    :catchall_0
    move-exception v7

    monitor-exit p0

    throw v7

    .line 3932
    .restart local v0    # "N":I
    .restart local v3    # "i":I
    .restart local v4    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .restart local v5    # "j":I
    :cond_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget v8, v4, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v9, v4, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-virtual {v7, v8, v9}, Landroid/os/PowerManagerInternal;->updateUidProcState(II)V

    goto :goto_2

    .line 3937
    .end local v4    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .end local v5    # "j":I
    :cond_3
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v7}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v3

    .line 3938
    :cond_4
    :goto_3
    if-lez v3, :cond_6

    .line 3939
    add-int/lit8 v3, v3, -0x1

    .line 3940
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v7, v3}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v6

    check-cast v6, Landroid/app/IUidObserver;

    .line 3941
    .local v6, "observer":Landroid/app/IUidObserver;
    if-eqz v6, :cond_4

    .line 3943
    const/4 v5, 0x0

    .restart local v5    # "j":I
    :goto_4
    if-ge v5, v0, :cond_4

    .line 3944
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v4, v7, v5

    .line 3945
    .restart local v4    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-boolean v7, v4, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    if-eqz v7, :cond_5

    .line 3948
    iget v7, v4, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-interface {v6, v7}, Landroid/app/IUidObserver;->onUidGone(I)V

    .line 3943
    :goto_5
    add-int/lit8 v5, v5, 0x1

    goto :goto_4

    .line 3953
    :cond_5
    iget v7, v4, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v8, v4, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-interface {v6, v7, v8}, Landroid/app/IUidObserver;->onUidStateChanged(II)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_5

    .line 3956
    .end local v4    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    :catch_0
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_3

    .line 3960
    .end local v2    # "e":Landroid/os/RemoteException;
    .end local v5    # "j":I
    .end local v6    # "observer":Landroid/app/IUidObserver;
    :cond_6
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v7}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 3962
    monitor-enter p0

    .line 3963
    const/4 v5, 0x0

    .restart local v5    # "j":I
    :goto_6
    if-ge v5, v0, :cond_7

    .line 3964
    :try_start_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v8, v8, v5

    invoke-virtual {v7, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 3963
    add-int/lit8 v5, v5, 0x1

    goto :goto_6

    :cond_7
    monitor-exit p0

    .line 3908
    return-void

    .line 3962
    :catchall_1
    move-exception v7

    monitor-exit p0

    throw v7
.end method

.method private dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
    .locals 7
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "fd"    # Ljava/io/FileDescriptor;
    .param p3, "pw"    # Ljava/io/PrintWriter;
    .param p4, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "args"    # [Ljava/lang/String;
    .param p6, "dumpAll"    # Z

    .prologue
    .line 14224
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, "  "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 14225
    .local v2, "innerPrefix":Ljava/lang/String;
    monitor-enter p0

    .line 14226
    :try_start_0
    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v4, "ACTIVITY "

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14227
    const-string/jumbo v4, " "

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14228
    const-string/jumbo v4, " pid="

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14229
    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_2

    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 14231
    :goto_0
    if-eqz p6, :cond_0

    .line 14232
    invoke-virtual {p4, p3, v2}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 14235
    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_1

    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_1

    .line 14238
    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V

    .line 14240
    :try_start_1
    new-instance v3, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v3}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 14242
    .local v3, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_2
    iget-object v4, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    invoke-virtual {v5}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v5

    .line 14243
    iget-object v6, p4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    .line 14242
    invoke-interface {v4, v5, v6, v2, p5}, Landroid/app/IApplicationThread;->dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V

    .line 14244
    invoke-virtual {v3, p2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 14246
    :try_start_3
    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 14223
    .end local v3    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_1
    :goto_1
    return-void

    .line 14230
    :cond_2
    :try_start_4
    const-string/jumbo v4, "(not running)"

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_0

    .line 14225
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .line 14245
    .restart local v3    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_1
    move-exception v4

    .line 14246
    :try_start_5
    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 14245
    throw v4
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 14248
    .end local v3    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v1

    .line 14249
    .local v1, "e":Ljava/io/IOException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, "Failure while dumping the activity: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 14250
    .end local v1    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 14251
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, "Got a RemoteException while dumping the activity"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1
.end method

.method private final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "uptime"    # J
    .param p4, "realtime"    # J
    .param p6, "isCheckinRequest"    # Z
    .param p7, "isCompact"    # Z

    .prologue
    .line 14884
    if-nez p6, :cond_0

    if-eqz p7, :cond_1

    .line 14886
    :cond_0
    const-string/jumbo v0, "time,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v0, ","

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    .line 14883
    :goto_0
    return-void

    .line 14888
    :cond_1
    const-string/jumbo v0, "Applications Memory Usage (kB):"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14889
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "Uptime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string/jumbo v1, " Realtime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0
.end method

.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V
    .locals 8
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "tag"    # Ljava/lang/String;
    .param p4, "sort"    # Z
    .param p5, "isCompact"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZ)V"
        }
    .end annotation

    .prologue
    .local p3, "items":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/4 v4, 0x1

    .line 14795
    if-eqz p4, :cond_0

    if-eqz p5, :cond_2

    .line 14809
    :cond_0
    :goto_0
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_1
    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v6, v0, :cond_6

    .line 14810
    invoke-virtual {p3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 14811
    .local v7, "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    if-nez p5, :cond_3

    .line 14812
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "%7d kB: "

    new-array v1, v4, [Ljava/lang/Object;

    iget-wide v2, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14821
    :goto_2
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v0, :cond_1

    .line 14822
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string/jumbo v1, "           "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    move-object v0, p0

    move v5, p5

    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 14809
    :cond_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 14796
    .end local v6    # "i":I
    .end local v7    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_2
    new-instance v0, Lcom/android/server/am/ActivityManagerService$21;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerService$21;-><init>()V

    invoke-static {p3, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    goto :goto_0

    .line 14813
    .restart local v6    # "i":I
    .restart local v7    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_3
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    if-eqz v0, :cond_5

    .line 14814
    const-string/jumbo v0, "proc,"

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14815
    const-string/jumbo v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 14816
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v0, :cond_4

    const-string/jumbo v0, ",a"

    :goto_3
    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2

    :cond_4
    const-string/jumbo v0, ",e"

    goto :goto_3

    .line 14818
    :cond_5
    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14819
    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_2

    .line 14794
    .end local v7    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_6
    return-void
.end method

.method private static final dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 9
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p2, "list"    # Ljava/util/List;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    const/4 v8, 0x0

    .line 14478
    const/4 v2, 0x0

    .line 14479
    .local v2, "numPers":I
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .line 14480
    .local v0, "N":I
    move v1, v0

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 14481
    invoke-interface {p2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 14482
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 14485
    :cond_0
    const-string/jumbo v5, "%s%s #%2d: %s"

    const/4 v4, 0x4

    new-array v6, v4, [Ljava/lang/Object;

    .line 14486
    aput-object p3, v6, v8

    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_2

    move-object v4, p5

    :goto_1
    const/4 v7, 0x1

    aput-object v4, v6, v7

    .line 14487
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v7, 0x2

    aput-object v4, v6, v7

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v4

    const/4 v7, 0x3

    aput-object v4, v6, v7

    .line 14485
    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14488
    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_1

    .line 14489
    add-int/lit8 v2, v2, 0x1

    .line 14480
    :cond_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    :cond_2
    move-object v4, p4

    .line 14486
    goto :goto_1

    .line 14492
    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return v2
.end method

.method private static final dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
    .locals 30
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "inclDetails"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Lcom/android/server/am/ActivityManagerService;",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Z",
            "Ljava/lang/String;",
            ")Z"
        }
    .end annotation

    .prologue
    .line 14501
    .local p2, "origList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/ProcessRecord;>;"
    new-instance v11, Ljava/util/ArrayList;

    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    invoke-direct {v11, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 14502
    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    if-ge v10, v0, :cond_2

    .line 14503
    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 14504
    .local v15, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v26

    if-eqz v26, :cond_1

    .line 14507
    :cond_0
    new-instance v27, Landroid/util/Pair;

    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v28

    move-object/from16 v0, v27

    move-object/from16 v1, v26

    move-object/from16 v2, v28

    invoke-direct {v0, v1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v0, v27

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14502
    :cond_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 14510
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    if-gtz v26, :cond_3

    .line 14511
    const/16 v26, 0x0

    return v26

    .line 14515
    :cond_3
    new-instance v4, Lcom/android/server/am/ActivityManagerService$20;

    invoke-direct {v4}, Lcom/android/server/am/ActivityManagerService$20;-><init>()V

    .line 14529
    .local v4, "comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    invoke-static {v11, v4}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 14531
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 14532
    .local v6, "curRealtime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-wide/from16 v26, v0

    sub-long v16, v6, v26

    .line 14533
    .local v16, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 14534
    .local v8, "curUptime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-wide/from16 v26, v0

    sub-long v22, v8, v26

    .line 14536
    .local v22, "uptimeSince":J
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    add-int/lit8 v10, v26, -0x1

    :goto_1
    if-ltz v10, :cond_11

    .line 14537
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v15, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 14538
    .restart local v15    # "r":Lcom/android/server/am/ProcessRecord;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v13

    .line 14540
    .local v13, "oomAdj":Ljava/lang/String;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move/from16 v26, v0

    packed-switch v26, :pswitch_data_0

    .line 14548
    const/16 v18, 0x3f

    .line 14552
    .local v18, "schedGroup":C
    :goto_2
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move/from16 v26, v0

    if-eqz v26, :cond_a

    .line 14553
    const/16 v5, 0x41

    .line 14559
    .local v5, "foreground":C
    :goto_3
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v14

    .line 14560
    .local v14, "procState":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14561
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v26, v0

    if-eqz v26, :cond_c

    move-object/from16 v26, p5

    :goto_4
    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14562
    const-string/jumbo v26, " #"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14563
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    add-int/lit8 v27, v26, -0x1

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v0, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Ljava/lang/Integer;

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Integer;->intValue()I

    move-result v26

    sub-int v12, v27, v26

    .line 14564
    .local v12, "num":I
    const/16 v26, 0xa

    move/from16 v0, v26

    if-ge v12, v0, :cond_4

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14565
    :cond_4
    move-object/from16 v0, p0

    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(I)V

    .line 14566
    const-string/jumbo v26, ": "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14567
    move-object/from16 v0, p0

    invoke-virtual {v0, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14568
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14569
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14570
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14571
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->print(C)V

    .line 14572
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14573
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14574
    const-string/jumbo v26, " trm:"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14575
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    const/16 v27, 0xa

    move/from16 v0, v26

    move/from16 v1, v27

    if-ge v0, v1, :cond_5

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14576
    :cond_5
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14577
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14578
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14579
    const-string/jumbo v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14580
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    move-object/from16 v26, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14581
    const/16 v26, 0x29

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(C)V

    .line 14582
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-nez v26, :cond_6

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_7

    .line 14583
    :cond_6
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14584
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14585
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Landroid/content/ComponentName;

    move/from16 v26, v0

    if-eqz v26, :cond_d

    .line 14586
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Landroid/content/ComponentName;

    invoke-virtual/range {v26 .. v26}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14592
    :goto_5
    const-string/jumbo v26, "<="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14593
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Lcom/android/server/am/ProcessRecord;

    move/from16 v26, v0

    if-eqz v26, :cond_f

    .line 14594
    const-string/jumbo v26, "Proc{"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14595
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14596
    const-string/jumbo v26, "}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14603
    :cond_7
    :goto_6
    if-eqz p6, :cond_9

    .line 14604
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14605
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14606
    const-string/jumbo v26, "oom: max="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14607
    const-string/jumbo v26, " curRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14608
    const-string/jumbo v26, " setRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14609
    const-string/jumbo v26, " cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14610
    const-string/jumbo v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 14611
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14612
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14613
    const-string/jumbo v26, "state: cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14614
    const-string/jumbo v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14615
    const-string/jumbo v26, " lastPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x400

    mul-long v26, v26, v28

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-static {v0, v1, v2}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 14616
    const-string/jumbo v26, " lastCachedPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x400

    mul-long v26, v26, v28

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-static {v0, v1, v2}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 14617
    invoke-virtual/range {p0 .. p0}, Ljava/io/PrintWriter;->println()V

    .line 14618
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14619
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14620
    const-string/jumbo v26, "cached="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->cached:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 14621
    const-string/jumbo v26, " empty="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->empty:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 14622
    const-string/jumbo v26, " hasAboveClient="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 14624
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    const/16 v27, 0xa

    move/from16 v0, v26

    move/from16 v1, v27

    if-lt v0, v1, :cond_9

    .line 14625
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_8

    .line 14627
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 14628
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 14629
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v26, v0

    .line 14630
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v27, v0

    .line 14629
    move-object/from16 v0, v19

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v1, v2, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v24

    .local v24, "wtime":J
    monitor-exit v19

    .line 14632
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    sub-long v20, v24, v26

    .line 14633
    .local v20, "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14634
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14635
    const-string/jumbo v26, "keep awake over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14636
    move-wide/from16 v0, v16

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 14637
    const-string/jumbo v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14638
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 14639
    const-string/jumbo v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14640
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v16

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 14641
    const-string/jumbo v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14643
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v20    # "timeUsed":J
    .end local v24    # "wtime":J
    :cond_8
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_9

    .line 14644
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v26, v0

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v28, v0

    sub-long v20, v26, v28

    .line 14645
    .restart local v20    # "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14646
    const-string/jumbo v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14647
    const-string/jumbo v26, "run cpu over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14648
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 14649
    const-string/jumbo v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14650
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 14651
    const-string/jumbo v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14652
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v22

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 14653
    const-string/jumbo v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14536
    .end local v20    # "timeUsed":J
    :cond_9
    add-int/lit8 v10, v10, -0x1

    goto/16 :goto_1

    .line 14542
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v14    # "procState":Ljava/lang/String;
    .end local v18    # "schedGroup":C
    :pswitch_0
    const/16 v18, 0x42

    .line 14543
    .restart local v18    # "schedGroup":C
    goto/16 :goto_2

    .line 14545
    .end local v18    # "schedGroup":C
    :pswitch_1
    const/16 v18, 0x46

    .line 14546
    .restart local v18    # "schedGroup":C
    goto/16 :goto_2

    .line 14554
    :cond_a
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    move/from16 v26, v0

    if-eqz v26, :cond_b

    .line 14555
    const/16 v5, 0x53

    .restart local v5    # "foreground":C
    goto/16 :goto_3

    .line 14557
    .end local v5    # "foreground":C
    :cond_b
    const/16 v5, 0x20

    .restart local v5    # "foreground":C
    goto/16 :goto_3

    .restart local v14    # "procState":Ljava/lang/String;
    :cond_c
    move-object/from16 v26, p4

    .line 14561
    goto/16 :goto_4

    .line 14587
    .restart local v12    # "num":I
    :cond_d
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_e

    .line 14588
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 14590
    :cond_e
    const-string/jumbo v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 14597
    :cond_f
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_10

    .line 14598
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_6

    .line 14600
    :cond_10
    const-string/jumbo v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_6

    .line 14628
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v26

    monitor-exit v19

    throw v26

    .line 14658
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v13    # "oomAdj":Ljava/lang/String;
    .end local v14    # "procState":Ljava/lang/String;
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "schedGroup":C
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_11
    const/16 v26, 0x1

    return v26

    .line 14540
    nop

    :pswitch_data_0
    .packed-switch -0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public static dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;
    .locals 9
    .param p0, "clearTraces"    # Z
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .prologue
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    const/4 v8, 0x0

    .line 4898
    const-string/jumbo v4, "dalvik.vm.stack-trace-file"

    invoke-static {v4, v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 4899
    .local v3, "tracesPath":Ljava/lang/String;
    if-eqz v3, :cond_0

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v4

    if-nez v4, :cond_1

    .line 4900
    :cond_0
    return-object v8

    .line 4903
    :cond_1
    new-instance v2, Ljava/io/File;

    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 4905
    .local v2, "tracesFile":Ljava/io/File;
    :try_start_0
    invoke-virtual {v2}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v1

    .line 4906
    .local v1, "tracesDir":Ljava/io/File;
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v4

    if-nez v4, :cond_2

    .line 4907
    invoke-virtual {v1}, Ljava/io/File;->mkdirs()Z

    .line 4908
    invoke-static {v1}, Landroid/os/SELinux;->restorecon(Ljava/io/File;)Z

    move-result v4

    if-nez v4, :cond_2

    .line 4909
    return-object v8

    .line 4912
    :cond_2
    invoke-virtual {v1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v4

    const/16 v5, 0x1fd

    const/4 v6, -0x1

    const/4 v7, -0x1

    invoke-static {v4, v5, v6, v7}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I

    .line 4914
    if-eqz p0, :cond_3

    invoke-virtual {v2}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-virtual {v2}, Ljava/io/File;->delete()Z

    .line 4915
    :cond_3
    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z

    .line 4916
    invoke-virtual {v2}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v4

    const/16 v5, 0x1b6

    const/4 v6, -0x1

    const/4 v7, -0x1

    invoke-static {v4, v5, v6, v7}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4922
    invoke-static {v3, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V

    .line 4923
    return-object v2

    .line 4917
    .end local v1    # "tracesDir":Ljava/io/File;
    :catch_0
    move-exception v0

    .line 4918
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Unable to prepare ANR traces file: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4919
    return-object v8
.end method

.method private static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V
    .locals 12
    .param p0, "tracesPath"    # Ljava/lang/String;
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    .prologue
    .line 4930
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    new-instance v5, Lcom/android/server/am/ActivityManagerService$4;

    const/16 v9, 0x8

    invoke-direct {v5, p0, v9}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Ljava/lang/String;I)V

    .line 4936
    .local v5, "observer":Landroid/os/FileObserver;
    :try_start_0
    invoke-virtual {v5}, Landroid/os/FileObserver;->startWatching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 4939
    if-eqz p1, :cond_0

    .line 4941
    :try_start_1
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 4942
    .local v3, "num":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v3, :cond_0

    .line 4943
    monitor-enter v5
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 4944
    :try_start_2
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/Integer;

    invoke-virtual {v9}, Ljava/lang/Integer;->intValue()I

    move-result v9

    const/4 v10, 0x3

    invoke-static {v9, v10}, Landroid/os/Process;->sendSignal(II)V

    .line 4945
    const-wide/16 v10, 0xc8

    invoke-virtual {v5, v10, v11}, Landroid/os/FileObserver;->wait(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    monitor-exit v5

    .line 4942
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4943
    :catchall_0
    move-exception v9

    monitor-exit v5

    throw v9
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 4948
    .end local v2    # "i":I
    .end local v3    # "num":I
    :catch_0
    move-exception v1

    .line 4949
    .local v1, "e":Ljava/lang/InterruptedException;
    :try_start_4
    const-string/jumbo v9, "ActivityManager"

    invoke-static {v9, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4954
    .end local v1    # "e":Ljava/lang/InterruptedException;
    :cond_0
    if-eqz p4, :cond_1

    .line 4955
    invoke-static/range {p4 .. p4}, Landroid/os/Process;->getPidsForCommands([Ljava/lang/String;)[I

    move-result-object v7

    .line 4956
    .local v7, "pids":[I
    if-eqz v7, :cond_1

    .line 4957
    const/4 v9, 0x0

    array-length v10, v7

    :goto_1
    if-ge v9, v10, :cond_1

    aget v6, v7, v9

    .line 4958
    .local v6, "pid":I
    invoke-static {v6, p0}, Landroid/os/Debug;->dumpNativeBacktraceToFile(ILjava/lang/String;)V

    .line 4957
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 4964
    .end local v6    # "pid":I
    .end local v7    # "pids":[I
    :cond_1
    if-eqz p2, :cond_3

    .line 4965
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 4966
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 4967
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 4969
    :try_start_5
    monitor-enter p2
    :try_end_5
    .catch Ljava/lang/InterruptedException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 4970
    const-wide/16 v10, 0x1f4

    :try_start_6
    invoke-virtual {p2, v10, v11}, Lcom/android/internal/os/ProcessCpuTracker;->wait(J)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    monitor-exit p2
    :try_end_7
    .catch Ljava/lang/InterruptedException; {:try_start_7 .. :try_end_7} :catch_1
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 4974
    :goto_2
    :try_start_8
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 4977
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I

    move-result v0

    .line 4978
    .local v0, "N":I
    const/4 v4, 0x0

    .line 4979
    .local v4, "numProcs":I
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_3
    if-ge v2, v0, :cond_3

    const/4 v9, 0x5

    if-ge v4, v9, :cond_3

    .line 4980
    invoke-virtual {p2, v2}, Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v8

    .line 4981
    .local v8, "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    iget v9, v8, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {p3, v9}, Landroid/util/SparseArray;->indexOfKey(I)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    move-result v9

    if-ltz v9, :cond_2

    .line 4982
    add-int/lit8 v4, v4, 0x1

    .line 4984
    :try_start_9
    monitor-enter v5
    :try_end_9
    .catch Ljava/lang/InterruptedException; {:try_start_9 .. :try_end_9} :catch_2
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 4985
    :try_start_a
    iget v9, v8, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v10, 0x3

    invoke-static {v9, v10}, Landroid/os/Process;->sendSignal(II)V

    .line 4986
    const-wide/16 v10, 0xc8

    invoke-virtual {v5, v10, v11}, Landroid/os/FileObserver;->wait(J)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    :try_start_b
    monitor-exit v5
    :try_end_b
    .catch Ljava/lang/InterruptedException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 4979
    :cond_2
    :goto_4
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 4969
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v4    # "numProcs":I
    .end local v8    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_1
    move-exception v9

    :try_start_c
    monitor-exit p2

    throw v9
    :try_end_c
    .catch Ljava/lang/InterruptedException; {:try_start_c .. :try_end_c} :catch_1
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 4972
    :catch_1
    move-exception v1

    .restart local v1    # "e":Ljava/lang/InterruptedException;
    goto :goto_2

    .line 4984
    .end local v1    # "e":Ljava/lang/InterruptedException;
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v4    # "numProcs":I
    .restart local v8    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_2
    move-exception v9

    :try_start_d
    monitor-exit v5

    throw v9
    :try_end_d
    .catch Ljava/lang/InterruptedException; {:try_start_d .. :try_end_d} :catch_2
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    .line 4988
    :catch_2
    move-exception v1

    .line 4989
    .restart local v1    # "e":Ljava/lang/InterruptedException;
    :try_start_e
    const-string/jumbo v9, "ActivityManager"

    invoke-static {v9, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    goto :goto_4

    .line 4995
    .end local v0    # "N":I
    .end local v1    # "e":Ljava/lang/InterruptedException;
    .end local v2    # "i":I
    .end local v4    # "numProcs":I
    .end local v8    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v9

    .line 4996
    invoke-virtual {v5}, Landroid/os/FileObserver;->stopWatching()V

    .line 4995
    throw v9

    .line 4996
    :cond_3
    invoke-virtual {v5}, Landroid/os/FileObserver;->stopWatching()V

    .line 4927
    return-void
.end method

.method private enforceWriteSettingsPermission(Ljava/lang/String;)V
    .locals 5
    .param p1, "func"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    .line 17571
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 17572
    .local v1, "uid":I
    if-nez v1, :cond_0

    .line 17573
    return-void

    .line 17576
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 17577
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v3, v1}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v3

    .line 17576
    invoke-static {v2, v1, v3, v4}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Z)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 17578
    return-void

    .line 17581
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Permission Denial: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 17582
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 17581
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 17583
    const-string/jumbo v3, ", uid="

    .line 17581
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 17584
    const-string/jumbo v3, " requires "

    .line 17581
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 17584
    const-string/jumbo v3, "android.permission.WRITE_SETTINGS"

    .line 17581
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 17585
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17586
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method private enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .locals 12
    .param p1, "requestType"    # I
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p5, "activityToken"    # Landroid/os/IBinder;
    .param p6, "userHandle"    # I
    .param p7, "args"    # Landroid/os/Bundle;
    .param p8, "timeout"    # J

    .prologue
    .line 11046
    const-string/jumbo v3, "android.permission.GET_TOP_ACTIVITY_INFO"

    .line 11047
    const-string/jumbo v6, "enqueueAssistContext()"

    .line 11046
    invoke-virtual {p0, v3, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11048
    monitor-enter p0

    .line 11049
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v4

    .line 11050
    .local v4, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v4, :cond_0

    .line 11051
    const-string/jumbo v3, "ActivityManager"

    const-string/jumbo v6, "getAssistContextExtras failed: no top activity"

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11052
    const/4 v3, 0x0

    monitor-exit p0

    return-object v3

    .line 11054
    :cond_0
    :try_start_1
    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_1

    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_2

    .line 11055
    :cond_1
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "getAssistContextExtras failed: no process for "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11056
    const/4 v3, 0x0

    monitor-exit p0

    return-object v3

    .line 11058
    :cond_2
    if-eqz p5, :cond_3

    .line 11059
    :try_start_2
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v10

    .line 11060
    .local v10, "caller":Lcom/android/server/am/ActivityRecord;
    if-eq v4, v10, :cond_3

    .line 11061
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "enqueueAssistContext failed: caller "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 11062
    const-string/jumbo v7, " is not current top "

    .line 11061
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11063
    const/4 v3, 0x0

    monitor-exit p0

    return-object v3

    .line 11067
    .end local v10    # "caller":Lcom/android/server/am/ActivityRecord;
    :cond_3
    :try_start_3
    new-instance v5, Landroid/os/Bundle;

    invoke-direct {v5}, Landroid/os/Bundle;-><init>()V

    .line 11068
    .local v5, "extras":Landroid/os/Bundle;
    if-eqz p7, :cond_4

    .line 11069
    move-object/from16 v0, p7

    invoke-virtual {v5, v0}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 11071
    :cond_4
    const-string/jumbo v3, "android.intent.extra.ASSIST_PACKAGE"

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v3, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 11072
    const-string/jumbo v3, "android.intent.extra.ASSIST_UID"

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v6, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v3, v6}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 11073
    new-instance v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-object v3, p0

    move-object v6, p2

    move-object v7, p3

    move-object/from16 v8, p4

    move/from16 v9, p6

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11075
    .local v2, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    :try_start_4
    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v3, v6, v2, p1}, Landroid/app/IApplicationThread;->requestAssistContextExtras(Landroid/os/IBinder;Landroid/os/IBinder;I)V

    .line 11077
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11078
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-wide/from16 v0, p8

    invoke-virtual {v3, v2, v0, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    monitor-exit p0

    .line 11083
    return-object v2

    .line 11079
    :catch_0
    move-exception v11

    .line 11080
    .local v11, "e":Landroid/os/RemoteException;
    :try_start_5
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "getAssistContextExtras failed: crash calling "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 11081
    const/4 v3, 0x0

    monitor-exit p0

    return-object v3

    .line 11048
    .end local v2    # "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .end local v4    # "activity":Lcom/android/server/am/ActivityRecord;
    .end local v5    # "extras":Landroid/os/Bundle;
    .end local v11    # "e":Landroid/os/RemoteException;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method private final enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V
    .locals 3
    .param p1, "uidRec"    # Lcom/android/server/am/UidRecord;
    .param p2, "gone"    # Z

    .prologue
    .line 19144
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    if-nez v1, :cond_1

    .line 19145
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-nez v1, :cond_0

    .line 19148
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v2, 0x36

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    .line 19150
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 19151
    .local v0, "NA":I
    if-lez v0, :cond_2

    .line 19152
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    add-int/lit8 v2, v0, -0x1

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 19160
    :goto_0
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object p1, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 19161
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iget v2, p1, Lcom/android/server/am/UidRecord;->uid:I

    iput v2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    .line 19162
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    iget-object v2, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19164
    .end local v0    # "NA":I
    :cond_1
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iput-boolean p2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    .line 19165
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iget v2, p1, Lcom/android/server/am/UidRecord;->setProcState:I

    iput v2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    .line 19143
    return-void

    .line 19156
    .restart local v0    # "NA":I
    :cond_2
    new-instance v1, Lcom/android/server/am/UidRecord$ChangeItem;

    invoke-direct {v1}, Lcom/android/server/am/UidRecord$ChangeItem;-><init>()V

    iput-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    goto :goto_0
.end method

.method private fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 12998
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->pid:I

    .line 12999
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->uid:I

    .line 13000
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 13001
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x1

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 13003
    :cond_0
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_1

    .line 13004
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 13006
    :cond_1
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_2

    .line 13007
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x4

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 13009
    :cond_2
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lastTrimLevel:I

    .line 13010
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 13011
    .local v0, "adj":I
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 13012
    .local v1, "procState":I
    invoke-static {v1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I

    move-result v2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I

    .line 13013
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonCode:I

    .line 13014
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->processState:I

    .line 12997
    return-void
.end method

.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v9, 0x0

    .line 12600
    if-nez p1, :cond_0

    .line 12601
    return-object v9

    .line 12604
    :cond_0
    monitor-enter p0

    .line 12605
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v6}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v6

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 12606
    .local v1, "NP":I
    const/4 v4, 0x0

    .local v4, "ip":I
    :goto_0
    if-ge v4, v1, :cond_3

    .line 12607
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v6}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v6

    invoke-virtual {v6, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 12608
    .local v2, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 12609
    .local v0, "NA":I
    const/4 v3, 0x0

    .local v3, "ia":I
    :goto_1
    if-ge v3, v0, :cond_2

    .line 12610
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 12611
    .local v5, "p":Lcom/android/server/am/ProcessRecord;
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_1

    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v6

    if-ne v6, p1, :cond_1

    monitor-exit p0

    .line 12612
    return-object v5

    .line 12609
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 12606
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 12617
    .end local v0    # "NA":I
    .end local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "ia":I
    :cond_3
    :try_start_1
    const-string/jumbo v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Can\'t find mystery application for "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 12618
    const-string/jumbo v8, " from pid="

    .line 12617
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 12618
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v8

    .line 12617
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 12619
    const-string/jumbo v8, " uid="

    .line 12617
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 12619
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 12617
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 12619
    const-string/jumbo v8, ": "

    .line 12617
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 12620
    return-object v9

    .line 12604
    .end local v1    # "NP":I
    .end local v4    # "ip":I
    :catchall_0
    move-exception v6

    monitor-exit p0

    throw v6
.end method

.method private findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 3
    .param p1, "sourcePkg"    # Ljava/lang/String;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    .line 7461
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 7462
    .local v1, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v1, :cond_0

    .line 7463
    invoke-static {}, Lcom/google/android/collect/Maps;->newArrayMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 7464
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 7467
    :cond_0
    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UriPermission;

    .line 7468
    .local v0, "perm":Lcom/android/server/am/UriPermission;
    if-nez v0, :cond_1

    .line 7469
    new-instance v0, Lcom/android/server/am/UriPermission;

    .end local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-direct {v0, p1, p2, p3, p4}, Lcom/android/server/am/UriPermission;-><init>(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)V

    .line 7470
    .restart local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7473
    :cond_1
    return-object v0
.end method

.method private findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 16
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "callName"    # Ljava/lang/String;

    .prologue
    .line 19936
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 19937
    const/4 v5, 0x1

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p2

    move-object/from16 v7, p3

    .line 19936
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 19938
    const/4 v13, 0x0

    .line 19940
    .local v13, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v12

    .line 19941
    .local v12, "pid":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19942
    :try_start_1
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object v13, v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v13, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0

    .line 19947
    .end local v12    # "pid":I
    .end local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v13, :cond_0

    .line 19949
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v9

    .line 19950
    .local v9, "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    move-object/from16 v0, p1

    invoke-virtual {v9, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/util/SparseArray;

    .line 19951
    .local v14, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz v14, :cond_0

    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 19952
    const/4 v1, 0x0

    invoke-virtual {v14, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ProcessRecord;

    .line 19953
    .restart local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_0

    iget v1, v13, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-eq v1, v0, :cond_0

    .line 19954
    const/4 v11, 0x1

    .local v11, "i":I
    :goto_1
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v11, v1, :cond_0

    .line 19955
    invoke-virtual {v14, v11}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 19956
    .local v15, "thisProc":Lcom/android/server/am/ProcessRecord;
    iget v1, v15, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-ne v1, v0, :cond_1

    .line 19957
    move-object v13, v15

    .line 19965
    .end local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .end local v11    # "i":I
    .end local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v15    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    return-object v13

    .line 19941
    .restart local v12    # "pid":I
    .local v13, "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v2

    throw v1
    :try_end_3
    .catch Ljava/lang/NumberFormatException; {:try_start_3 .. :try_end_3} :catch_0

    .line 19944
    .end local v12    # "pid":I
    .end local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v10

    .local v10, "e":Ljava/lang/NumberFormatException;
    goto :goto_0

    .line 19954
    .end local v10    # "e":Ljava/lang/NumberFormatException;
    .restart local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .restart local v11    # "i":I
    .local v13, "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v14    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v15    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v11, v11, 0x1

    goto :goto_1
.end method

.method private findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 3
    .param p1, "targetUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    const/4 v2, 0x0

    .line 7452
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 7453
    .local v0, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    .line 7454
    invoke-virtual {v0, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    return-object v1

    .line 7456
    :cond_0
    return-object v2
.end method

.method private forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 18
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 5669
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    .line 5670
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    .line 5669
    const/4 v4, 0x0

    .line 5670
    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v10, p3

    .line 5669
    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 5671
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v1, "android.intent.action.PACKAGE_RESTARTED"

    .line 5672
    const-string/jumbo v2, "package"

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-static {v2, v0, v3}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    .line 5671
    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 5673
    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_0

    .line 5674
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5677
    :cond_0
    const-string/jumbo v1, "android.intent.extra.UID"

    move/from16 v0, p2

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5678
    const-string/jumbo v1, "android.intent.extra.user_handle"

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v4, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5681
    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    .line 5679
    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 5680
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    .line 5681
    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/16 v16, 0x3e8

    move-object/from16 v1, p0

    .line 5679
    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 5668
    return-void
.end method

.method private final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 25
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "callerWillRestart"    # Z
    .param p4, "purgeCache"    # Z
    .param p5, "doit"    # Z
    .param p6, "evenPersistent"    # Z
    .param p7, "uninstalling"    # Z
    .param p8, "userId"    # I
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 5862
    const/4 v3, -0x1

    move/from16 v0, p8

    if-ne v0, v3, :cond_0

    if-nez p1, :cond_0

    .line 5863
    const-string/jumbo v3, "ActivityManager"

    const-string/jumbo v4, "Can\'t force stop all processes of all users, that is insane!"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5866
    :cond_0
    if-gez p2, :cond_1

    if-eqz p1, :cond_1

    .line 5869
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-interface {v3, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v3

    .line 5868
    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result p2

    .line 5874
    :cond_1
    :goto_0
    if-eqz p5, :cond_9

    .line 5875
    if-eqz p1, :cond_4

    .line 5876
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Force stopping "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " appid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5877
    const-string/jumbo v5, " user="

    .line 5876
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5877
    const-string/jumbo v5, ": "

    .line 5876
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p9

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5882
    :goto_1
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v22

    .line 5883
    .local v22, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v22 .. v22}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v19, v3, -0x1

    .local v19, "ip":I
    :goto_2
    if-ltz v19, :cond_9

    .line 5884
    move-object/from16 v0, v22

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/util/SparseArray;

    .line 5885
    .local v14, "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v18, v3, -0x1

    .local v18, "i":I
    :goto_3
    if-ltz v18, :cond_7

    .line 5886
    const/16 v23, 0x0

    .line 5887
    .local v23, "remove":Z
    move/from16 v0, v18

    invoke-virtual {v14, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v17

    .line 5888
    .local v17, "entUid":I
    if-eqz p1, :cond_6

    .line 5889
    const/4 v3, -0x1

    move/from16 v0, p8

    if-ne v0, v3, :cond_5

    .line 5890
    invoke-static/range {v17 .. v17}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    move/from16 v0, p2

    if-ne v3, v0, :cond_2

    .line 5891
    const/16 v23, 0x1

    .line 5901
    :cond_2
    :goto_4
    if-eqz v23, :cond_3

    .line 5902
    move/from16 v0, v18

    invoke-virtual {v14, v0}, Landroid/util/SparseArray;->removeAt(I)V

    .line 5885
    :cond_3
    add-int/lit8 v18, v18, -0x1

    goto :goto_3

    .line 5879
    .end local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v17    # "entUid":I
    .end local v18    # "i":I
    .end local v19    # "ip":I
    .end local v22    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v23    # "remove":Z
    :cond_4
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Force stopping u"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p9

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 5894
    .restart local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .restart local v17    # "entUid":I
    .restart local v18    # "i":I
    .restart local v19    # "ip":I
    .restart local v22    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .restart local v23    # "remove":Z
    :cond_5
    move/from16 v0, p8

    move/from16 v1, p2

    invoke-static {v0, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v3

    move/from16 v0, v17

    if-ne v0, v3, :cond_2

    .line 5895
    const/16 v23, 0x1

    goto :goto_4

    .line 5898
    :cond_6
    invoke-static/range {v17 .. v17}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    move/from16 v0, p8

    if-ne v3, v0, :cond_2

    .line 5899
    const/16 v23, 0x1

    goto :goto_4

    .line 5905
    .end local v17    # "entUid":I
    .end local v23    # "remove":Z
    :cond_7
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-nez v3, :cond_8

    .line 5906
    move-object/from16 v0, v22

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 5883
    :cond_8
    add-int/lit8 v19, v19, -0x1

    goto/16 :goto_2

    .line 5913
    .end local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v18    # "i":I
    .end local v19    # "ip":I
    .end local v22    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    :cond_9
    if-nez p1, :cond_a

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "stop user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p8

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    .line 5912
    :goto_5
    const/16 v7, -0x64

    const/4 v9, 0x1

    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move/from16 v5, p2

    move/from16 v6, p8

    move/from16 v8, p3

    move/from16 v10, p5

    move/from16 v11, p6

    .line 5911
    invoke-direct/range {v3 .. v12}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    move-result v15

    .line 5915
    .local v15, "didSomething":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 5916
    const/4 v5, 0x0

    move-object/from16 v4, p1

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p8

    .line 5915
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v3

    if-eqz v3, :cond_c

    .line 5917
    if-nez p5, :cond_b

    .line 5918
    const/4 v3, 0x1

    return v3

    .line 5913
    .end local v15    # "didSomething":Z
    :cond_a
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "stop "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    goto :goto_5

    .line 5920
    .restart local v15    # "didSomething":Z
    :cond_b
    const/4 v15, 0x1

    .line 5923
    .end local v15    # "didSomething":Z
    :cond_c
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 5924
    const/4 v5, 0x0

    const/4 v8, 0x1

    move-object/from16 v4, p1

    move/from16 v6, p8

    move/from16 v7, p6

    move/from16 v9, p5

    .line 5923
    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    move-result v3

    if-eqz v3, :cond_e

    .line 5925
    if-nez p5, :cond_d

    .line 5926
    const/4 v3, 0x1

    return v3

    .line 5928
    :cond_d
    const/4 v15, 0x1

    .line 5931
    :cond_e
    if-nez p1, :cond_f

    .line 5933
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p8

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 5936
    :cond_f
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 5937
    .local v9, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v5, 0x0

    move-object/from16 v4, p1

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p8

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    move-result v3

    if-eqz v3, :cond_11

    .line 5939
    if-nez p5, :cond_10

    .line 5940
    const/4 v3, 0x1

    return v3

    .line 5942
    :cond_10
    const/4 v15, 0x1

    .line 5944
    :cond_11
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v18, v3, -0x1

    .restart local v18    # "i":I
    :goto_6
    if-ltz v18, :cond_12

    .line 5945
    move/from16 v0, v18

    invoke-virtual {v9, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    const/4 v4, 0x0

    const/4 v5, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v3, v5}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 5944
    add-int/lit8 v18, v18, -0x1

    goto :goto_6

    .line 5949
    :cond_12
    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p8

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 5951
    if-eqz p5, :cond_13

    .line 5952
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v3, v3

    add-int/lit8 v18, v3, -0x1

    :goto_7
    if-ltz v18, :cond_13

    .line 5953
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v18

    .line 5954
    const/4 v4, 0x0

    .line 5953
    move-object/from16 v0, p1

    move/from16 v1, p8

    move/from16 v2, p5

    invoke-virtual {v3, v0, v4, v1, v2}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v3

    or-int/2addr v15, v3

    .line 5952
    .restart local v15    # "didSomething":Z
    add-int/lit8 v18, v18, -0x1

    goto :goto_7

    .line 5958
    .end local v15    # "didSomething":Z
    :cond_13
    if-eqz p1, :cond_14

    if-eqz p7, :cond_1c

    .line 5963
    :cond_14
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_1c

    .line 5965
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v20

    .line 5966
    .local v20, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_15
    :goto_8
    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1c

    .line 5967
    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Ljava/lang/ref/WeakReference;

    .line 5968
    .local v24, "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-nez v24, :cond_16

    .line 5969
    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->remove()V

    goto :goto_8

    .line 5972
    :cond_16
    invoke-virtual/range {v24 .. v24}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/PendingIntentRecord;

    .line 5973
    .local v21, "pir":Lcom/android/server/am/PendingIntentRecord;
    if-nez v21, :cond_17

    .line 5974
    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->remove()V

    goto :goto_8

    .line 5977
    :cond_17
    if-nez p1, :cond_19

    .line 5979
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v3, v0, :cond_15

    .line 5997
    :cond_18
    if-nez p5, :cond_1b

    .line 5998
    const/4 v3, 0x1

    return v3

    .line 5984
    :cond_19
    move-object/from16 v0, v21

    iget v3, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    move/from16 v0, p2

    if-ne v3, v0, :cond_15

    .line 5988
    const/4 v3, -0x1

    move/from16 v0, p8

    if-eq v0, v3, :cond_1a

    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v3, v0, :cond_15

    .line 5992
    :cond_1a
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_18

    goto :goto_8

    .line 6000
    :cond_1b
    const/4 v15, 0x1

    .line 6001
    .local v15, "didSomething":Z
    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->remove()V

    .line 6002
    const/4 v3, 0x1

    move-object/from16 v0, v21

    iput-boolean v3, v0, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 6003
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v3, :cond_15

    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-eqz v3, :cond_15

    .line 6004
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    move-object/from16 v0, v21

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_8

    .line 6010
    .end local v15    # "didSomething":Z
    .end local v20    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v21    # "pir":Lcom/android/server/am/PendingIntentRecord;
    .end local v24    # "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_1c
    if-eqz p5, :cond_1e

    .line 6011
    if-eqz p4, :cond_1d

    if-eqz p1, :cond_1d

    .line 6012
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v13

    .line 6013
    .local v13, "ac":Lcom/android/server/AttributeCache;
    if-eqz v13, :cond_1d

    .line 6014
    move-object/from16 v0, p1

    invoke-virtual {v13, v0}, Lcom/android/server/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 6017
    .end local v13    # "ac":Lcom/android/server/AttributeCache;
    :cond_1d
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v3, :cond_1e

    .line 6018
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 6019
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 6023
    :cond_1e
    return v15

    .line 5870
    .end local v9    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .end local v18    # "i":I
    :catch_0
    move-exception v16

    .local v16, "e":Landroid/os/RemoteException;
    goto/16 :goto_0
.end method

.method private forceStopUserLocked(ILjava/lang/String;)V
    .locals 18
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 5685
    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 5686
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v1, "android.intent.action.USER_STOPPED"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5687
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5689
    const-string/jumbo v1, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5692
    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 5690
    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 5691
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    .line 5692
    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    .line 5690
    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 5684
    return-void
.end method

.method private final generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
    .locals 14
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ProviderInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 9402
    const/4 v9, 0x0

    .line 9404
    .local v9, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 9405
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v12, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 9406
    const/16 v13, 0xc00

    .line 9404
    invoke-interface {v1, v3, v12, v13}, Landroid/content/pm/IPackageManager;->queryContentProviders(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v10

    .line 9407
    .local v10, "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v10, :cond_0

    invoke-virtual {v10}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v9

    .line 9412
    .end local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v10    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    :goto_0
    iget v11, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 9413
    .local v11, "userId":I
    if-eqz v9, :cond_4

    .line 9414
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v6

    .line 9415
    .local v6, "N":I
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/2addr v3, v6

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->ensureCapacity(I)V

    .line 9416
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_1
    if-ge v8, v6, :cond_4

    .line 9418
    invoke-interface {v9, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 9419
    .local v2, "cpi":Landroid/content/pm/ProviderInfo;
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9420
    iget-object v12, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v13, v2, Landroid/content/pm/ProviderInfo;->flags:I

    .line 9419
    invoke-virtual {p0, v1, v3, v12, v13}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    .line 9421
    .local v5, "singleton":Z
    if-eqz v5, :cond_1

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    if-eqz v1, :cond_1

    .line 9426
    invoke-interface {v9, v8}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 9427
    add-int/lit8 v6, v6, -0x1

    .line 9428
    add-int/lit8 v8, v8, -0x1

    .line 9416
    :goto_2
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 9407
    .end local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v5    # "singleton":Z
    .end local v6    # "N":I
    .end local v8    # "i":I
    .end local v11    # "userId":I
    .restart local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v10    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    :cond_0
    const/4 v9, 0x0

    goto :goto_0

    .line 9432
    .end local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v10    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    .restart local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .restart local v5    # "singleton":Z
    .restart local v6    # "N":I
    .restart local v8    # "i":I
    .restart local v11    # "userId":I
    :cond_1
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9433
    .local v4, "comp":Landroid/content/ComponentName;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v11}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 9434
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v0, :cond_2

    .line 9435
    new-instance v0, Lcom/android/server/am/ContentProviderRecord;

    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object v1, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V

    .line 9436
    .restart local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v0}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9440
    :cond_2
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v3, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9441
    iget-boolean v1, v2, Landroid/content/pm/ProviderInfo;->multiprocess:Z

    if-eqz v1, :cond_3

    const-string/jumbo v1, "android"

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 9449
    :goto_3
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    goto :goto_2

    .line 9446
    :cond_3
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->versionCode:I

    .line 9447
    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 9446
    invoke-virtual {p1, v1, v3, v12}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    goto :goto_3

    .line 9452
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v4    # "comp":Landroid/content/ComponentName;
    .end local v5    # "singleton":Z
    .end local v6    # "N":I
    .end local v8    # "i":I
    :cond_4
    return-object v9

    .line 9408
    .end local v11    # "userId":I
    .restart local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :catch_0
    move-exception v7

    .local v7, "ex":Landroid/os/RemoteException;
    goto/16 :goto_0
.end method

.method private generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "condition"    # I
    .param p3, "activity"    # Ljava/lang/String;
    .param p4, "shortMsg"    # Ljava/lang/String;
    .param p5, "longMsg"    # Ljava/lang/String;
    .param p6, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 12170
    new-instance v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;

    invoke-direct {v0}, Landroid/app/ActivityManager$ProcessErrorStateInfo;-><init>()V

    .line 12172
    .local v0, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iput p2, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->condition:I

    .line 12173
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->processName:Ljava/lang/String;

    .line 12174
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->pid:I

    .line 12175
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->uid:I

    .line 12176
    iput-object p3, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    .line 12177
    iput-object p4, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    .line 12178
    iput-object p5, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    .line 12179
    iput-object p6, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->stackTrace:Ljava/lang/String;

    .line 12181
    return-object v0
.end method

.method private static getCalledPreBootReceiversFile()Ljava/io/File;
    .locals 4

    .prologue
    .line 11731
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v0

    .line 11732
    .local v0, "dataDir":Ljava/io/File;
    new-instance v2, Ljava/io/File;

    const-string/jumbo v3, "system"

    invoke-direct {v2, v0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 11733
    .local v2, "systemDir":Ljava/io/File;
    new-instance v1, Ljava/io/File;

    const-string/jumbo v3, "called_pre_boots.dat"

    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 11734
    .local v1, "fname":Ljava/io/File;
    return-object v1
.end method

.method private getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 6761
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6762
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6763
    return-object v1

    .line 6765
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    return-object v1
.end method

.method private getCommonServicesLocked(Z)Ljava/util/HashMap;
    .locals 3
    .param p1, "isolated"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .prologue
    .line 2733
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    if-nez v0, :cond_0

    .line 2734
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    .line 2738
    if-nez p1, :cond_0

    .line 2740
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string/jumbo v1, "package"

    const-string/jumbo v2, "package"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2741
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string/jumbo v1, "window"

    const-string/jumbo v2, "window"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2742
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string/jumbo v1, "alarm"

    .line 2743
    const-string/jumbo v2, "alarm"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    .line 2742
    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2746
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    return-object v0
.end method

.method private getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 10012
    const/4 v1, 0x0

    const/4 v4, 0x1

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method private final getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 43
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z
    .param p5, "userId"    # I

    .prologue
    .line 9646
    const/16 v22, 0x0

    .line 9647
    .local v22, "conn":Lcom/android/server/am/ContentProviderConnection;
    const/4 v6, 0x0

    .line 9649
    .local v6, "cpi":Landroid/content/pm/ProviderInfo;
    monitor-enter p0

    .line 9650
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v40

    .line 9652
    .local v40, "startTime":J
    const/16 v39, 0x0

    .line 9653
    .local v39, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_0

    .line 9654
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v39

    .line 9655
    .local v39, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v39, :cond_0

    .line 9656
    new-instance v5, Ljava/lang/SecurityException;

    .line 9657
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Unable to find app for caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9658
    const-string/jumbo v11, " (pid="

    .line 9657
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9658
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 9657
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9659
    const-string/jumbo v11, ") when getting content provider "

    .line 9657
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 9656
    invoke-direct {v5, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9649
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v40    # "startTime":J
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 9663
    .restart local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    .restart local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .restart local v40    # "startTime":J
    :cond_0
    const/16 v21, 0x1

    .line 9665
    .local v21, "checkCrossUser":Z
    :try_start_1
    const-string/jumbo v5, "getContentProviderImpl: getProviderByName"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9668
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-virtual {v5, v0, v1}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v4

    .line 9671
    .local v4, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v4, :cond_1

    if-eqz p5, :cond_1

    .line 9672
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v10, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v5, v0, v10}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v4

    .line 9673
    if-eqz v4, :cond_1

    .line 9674
    iget-object v6, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 9675
    .local v6, "cpi":Landroid/content/pm/ProviderInfo;
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9676
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v12, v6, Landroid/content/pm/ProviderInfo;->flags:I

    .line 9675
    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 9677
    move-object/from16 v0, v39

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v5

    .line 9675
    if-eqz v5, :cond_2

    .line 9678
    const/16 p5, 0x0

    .line 9679
    const/16 v21, 0x0

    .line 9687
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    :cond_1
    :goto_0
    if-eqz v4, :cond_3

    const/16 v38, 0x1

    .line 9688
    .local v38, "providerRunning":Z
    :goto_1
    if-eqz v38, :cond_a

    .line 9689
    iget-object v6, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 9691
    .restart local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    const-string/jumbo v5, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9692
    move-object/from16 v0, p0

    move-object/from16 v1, v39

    move/from16 v2, p5

    move/from16 v3, v21

    invoke-direct {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v34

    .local v34, "msg":Ljava/lang/String;
    if-eqz v34, :cond_4

    .line 9694
    new-instance v5, Ljava/lang/SecurityException;

    move-object/from16 v0, v34

    invoke-direct {v5, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9681
    .end local v34    # "msg":Ljava/lang/String;
    .end local v38    # "providerRunning":Z
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_2
    const/4 v4, 0x0

    .line 9682
    .local v4, "cpr":Lcom/android/server/am/ContentProviderRecord;
    const/4 v6, 0x0

    .local v6, "cpi":Landroid/content/pm/ProviderInfo;
    goto :goto_0

    .line 9687
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    :cond_3
    const/16 v38, 0x0

    .restart local v38    # "providerRunning":Z
    goto :goto_1

    .line 9696
    .local v6, "cpi":Landroid/content/pm/ProviderInfo;
    .restart local v34    # "msg":Ljava/lang/String;
    :cond_4
    const-string/jumbo v5, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9698
    if-eqz v39, :cond_5

    move-object/from16 v0, v39

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 9703
    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v29

    .line 9706
    .local v29, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v5, 0x0

    move-object/from16 v0, v29

    iput-object v5, v0, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 9707
    return-object v29

    .line 9710
    .end local v29    # "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    :cond_5
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v36

    .line 9712
    .local v36, "origId":J
    const-string/jumbo v5, "getContentProviderImpl: incProviderCountLocked"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9714
    const/16 v31, 0x0

    .line 9717
    .local v31, "importantCaller":Z
    move-object/from16 v0, p0

    move-object/from16 v1, v39

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v22

    .line 9718
    .local v22, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-eqz v22, :cond_6

    move-object/from16 v0, v22

    iget v5, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    move-object/from16 v0, v22

    iget v10, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr v5, v10

    const/4 v10, 0x1

    if-ne v5, v10, :cond_6

    .line 9719
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_6

    move-object/from16 v0, v39

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v10, 0x2

    if-gt v5, v10, :cond_6

    .line 9724
    const/16 v31, 0x1

    .line 9725
    const-string/jumbo v5, "getContentProviderImpl: before updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9726
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const/4 v10, 0x0

    const/4 v11, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 9727
    const-string/jumbo v5, "getContentProviderImpl: after updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9731
    :cond_6
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_9

    .line 9741
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v5, v5, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v5, :cond_b

    const/16 v42, 0x0

    .line 9742
    .local v42, "success":Z
    :goto_2
    if-eqz v42, :cond_7

    .line 9743
    const-string/jumbo v5, "getContentProviderImpl: before updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9744
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v42

    .line 9745
    .local v42, "success":Z
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v5, v5, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    move-object/from16 v1, v39

    move-object/from16 v2, p2

    invoke-direct {v0, v1, v5, v2}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 9746
    const-string/jumbo v5, "getContentProviderImpl: after updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9754
    .end local v42    # "success":Z
    :cond_7
    if-eqz v42, :cond_8

    if-eqz v31, :cond_8

    if-eqz v39, :cond_8

    move-object/from16 v0, v39

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v5, :cond_c

    .line 9759
    :cond_8
    :goto_3
    if-nez v42, :cond_9

    .line 9763
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Existing provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v4, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v11}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9764
    const-string/jumbo v11, " is gone; waiting it to restart for "

    .line 9763
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v39

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9765
    const/4 v5, 0x0

    iput-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 9766
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iput-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 9767
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9771
    :cond_9
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9775
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v31    # "importantCaller":Z
    .end local v34    # "msg":Ljava/lang/String;
    .end local v36    # "origId":J
    :cond_a
    if-nez v38, :cond_1d

    .line 9777
    :try_start_3
    const-string/jumbo v5, "getContentProviderImpl: before resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9778
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 9780
    const/16 v10, 0xc00

    .line 9778
    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-interface {v5, v0, v10, v1}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v6

    .line 9781
    .restart local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    const-string/jumbo v5, "getContentProviderImpl: after resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_5
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 9784
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    :goto_4
    if-nez v6, :cond_d

    .line 9785
    const/4 v5, 0x0

    monitor-exit p0

    return-object v5

    .line 9741
    .restart local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    .restart local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .restart local v31    # "importantCaller":Z
    .restart local v34    # "msg":Ljava/lang/String;
    .restart local v36    # "origId":J
    :cond_b
    const/16 v42, 0x1

    .local v42, "success":Z
    goto/16 :goto_2

    .line 9755
    .end local v42    # "success":Z
    :cond_c
    :try_start_4
    move-object/from16 v0, v39

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v5, v10, :cond_8

    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v5, v5, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v5, :cond_8

    .line 9756
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v10, 0x1

    invoke-static {v5, v10}, Lcom/android/server/am/ProcessList;->isAlive(IZ)Z

    move-result v42

    .local v42, "success":Z
    goto/16 :goto_3

    .line 9791
    .end local v6    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v31    # "importantCaller":Z
    .end local v34    # "msg":Ljava/lang/String;
    .end local v36    # "origId":J
    .end local v42    # "success":Z
    :cond_d
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9792
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v12, v6, Landroid/content/pm/ProviderInfo;->flags:I

    .line 9791
    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_f

    .line 9793
    move-object/from16 v0, v39

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v9

    .line 9794
    :goto_5
    if-eqz v9, :cond_e

    .line 9795
    const/16 p5, 0x0

    .line 9797
    :cond_e
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    iput-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9798
    const-string/jumbo v5, "getContentProviderImpl: got app info for user"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9801
    const-string/jumbo v5, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9802
    if-eqz v9, :cond_10

    const/4 v5, 0x0

    :goto_6
    move-object/from16 v0, p0

    move-object/from16 v1, v39

    move/from16 v2, p5

    invoke-direct {v0, v6, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v34

    .restart local v34    # "msg":Ljava/lang/String;
    if-eqz v34, :cond_11

    .line 9804
    new-instance v5, Ljava/lang/SecurityException;

    move-object/from16 v0, v34

    invoke-direct {v5, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9791
    .end local v34    # "msg":Ljava/lang/String;
    :cond_f
    const/4 v9, 0x0

    .local v9, "singleton":Z
    goto :goto_5

    .line 9802
    .end local v9    # "singleton":Z
    :cond_10
    const/4 v5, 0x1

    goto :goto_6

    .line 9806
    .restart local v34    # "msg":Ljava/lang/String;
    :cond_11
    const-string/jumbo v5, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9808
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v5, :cond_12

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-eqz v5, :cond_13

    .line 9819
    :cond_12
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v1, v5}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v5

    if-nez v5, :cond_14

    .line 9820
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9821
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9821
    const-string/jumbo v11, "/"

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9822
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9822
    const-string/jumbo v11, " for provider "

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9823
    const-string/jumbo v11, ": user "

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p5

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9823
    const-string/jumbo v11, " is stopped"

    .line 9820
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 9824
    const/4 v5, 0x0

    monitor-exit p0

    return-object v5

    .line 9808
    :cond_13
    :try_start_5
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-nez v5, :cond_12

    .line 9809
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    const-string/jumbo v10, "system"

    invoke-virtual {v5, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_12

    .line 9813
    new-instance v5, Ljava/lang/IllegalArgumentException;

    .line 9814
    const-string/jumbo v10, "Attempt to launch content provider before system ready"

    .line 9813
    invoke-direct {v5, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9827
    :cond_14
    new-instance v8, Landroid/content/ComponentName;

    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v8, v5, v10}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9828
    .local v8, "comp":Landroid/content/ComponentName;
    const-string/jumbo v5, "getContentProviderImpl: before getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9829
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move/from16 v0, p5

    invoke-virtual {v5, v8, v0}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v23

    .line 9830
    .local v23, "cpr":Lcom/android/server/am/ContentProviderRecord;
    const-string/jumbo v5, "getContentProviderImpl: after getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9831
    if-nez v23, :cond_15

    const/16 v28, 0x1

    .line 9832
    .local v28, "firstClass":Z
    :goto_7
    if-eqz v28, :cond_17

    .line 9833
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-result-wide v32

    .line 9835
    .local v32, "ident":J
    :try_start_6
    const-string/jumbo v5, "getContentProviderImpl: before getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9837
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 9839
    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9840
    const/16 v11, 0x400

    .line 9837
    move/from16 v0, p5

    invoke-interface {v5, v10, v11, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    .line 9841
    .local v7, "ai":Landroid/content/pm/ApplicationInfo;
    const-string/jumbo v5, "getContentProviderImpl: after getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9842
    if-nez v7, :cond_16

    .line 9843
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "No package info for content provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9844
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    .line 9843
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 9852
    :try_start_7
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 9845
    const/4 v5, 0x0

    monitor-exit p0

    return-object v5

    .line 9831
    .end local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v28    # "firstClass":Z
    .end local v32    # "ident":J
    :cond_15
    const/16 v28, 0x0

    .restart local v28    # "firstClass":Z
    goto :goto_7

    .line 9847
    .restart local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v32    # "ident":J
    :cond_16
    :try_start_8
    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v7, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    .line 9848
    new-instance v4, Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v5, p0

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_0
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 9852
    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .local v4, "cpr":Lcom/android/server/am/ContentProviderRecord;
    :try_start_9
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9856
    .end local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v32    # "ident":J
    :goto_8
    const-string/jumbo v5, "getContentProviderImpl: now have ContentProviderRecord"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9858
    if-eqz v39, :cond_18

    move-object/from16 v0, v39

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    if-eqz v5, :cond_18

    .line 9863
    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    move-result-object v5

    monitor-exit p0

    return-object v5

    .line 9849
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v32    # "ident":J
    :catch_0
    move-exception v26

    .line 9852
    .local v26, "ex":Landroid/os/RemoteException;
    :try_start_a
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .end local v26    # "ex":Landroid/os/RemoteException;
    .end local v32    # "ident":J
    :cond_17
    move-object/from16 v4, v23

    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_8

    .line 9851
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v32    # "ident":J
    :catchall_1
    move-exception v5

    .line 9852
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9851
    throw v5

    .line 9873
    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v32    # "ident":J
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_18
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v20

    .line 9875
    .local v20, "N":I
    const/16 v30, 0x0

    .local v30, "i":I
    :goto_9
    move/from16 v0, v30

    move/from16 v1, v20

    if-ge v0, v1, :cond_19

    .line 9876
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    move/from16 v0, v30

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    if-ne v5, v4, :cond_1f

    .line 9883
    :cond_19
    move/from16 v0, v30

    move/from16 v1, v20

    if-lt v0, v1, :cond_1b

    .line 9884
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    move-result-wide v36

    .line 9889
    .restart local v36    # "origId":J
    :try_start_b
    const-string/jumbo v5, "getContentProviderImpl: before set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9890
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 9891
    iget-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v11, 0x0

    .line 9890
    move/from16 v0, p5

    invoke-interface {v5, v10, v11, v0}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V

    .line 9892
    const-string/jumbo v5, "getContentProviderImpl: after set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_4
    .catch Ljava/lang/IllegalArgumentException; {:try_start_b .. :try_end_b} :catch_1
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    .line 9900
    :goto_a
    :try_start_c
    const-string/jumbo v5, "getContentProviderImpl: looking for process record"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9902
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v11, 0x0

    .line 9901
    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v35

    .line 9903
    .local v35, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v35, :cond_20

    move-object/from16 v0, v35

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_20

    .line 9906
    move-object/from16 v0, v35

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v10}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_1a

    .line 9907
    const-string/jumbo v5, "getContentProviderImpl: scheduling install"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9908
    move-object/from16 v0, v35

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v10, v4}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    .line 9910
    :try_start_d
    move-object/from16 v0, v35

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v5, v6}, Landroid/app/IApplicationThread;->scheduleInstallProvider(Landroid/content/pm/ProviderInfo;)V
    :try_end_d
    .catch Landroid/os/RemoteException; {:try_start_d .. :try_end_d} :catch_3
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    .line 9929
    :cond_1a
    :goto_b
    :try_start_e
    move-object/from16 v0, v35

    iput-object v0, v4, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 9930
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    .line 9932
    :try_start_f
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9936
    .end local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v36    # "origId":J
    :cond_1b
    const-string/jumbo v5, "getContentProviderImpl: updating data structures"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9940
    if-eqz v28, :cond_1c

    .line 9941
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v5, v8, v4}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9944
    :cond_1c
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    invoke-virtual {v5, v0, v4}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9945
    move-object/from16 v0, p0

    move-object/from16 v1, v39

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v22

    .line 9946
    .restart local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    if-eqz v22, :cond_1d

    .line 9947
    const/4 v5, 0x1

    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 9950
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v20    # "N":I
    .end local v22    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v28    # "firstClass":Z
    .end local v30    # "i":I
    .end local v34    # "msg":Ljava/lang/String;
    :cond_1d
    const-string/jumbo v5, "getContentProviderImpl: done!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    monitor-exit p0

    .line 9954
    monitor-enter v4

    .line 9955
    :cond_1e
    :goto_c
    :try_start_10
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v5, :cond_24

    .line 9956
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-nez v5, :cond_21

    .line 9957
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9958
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9957
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9958
    const-string/jumbo v11, "/"

    .line 9957
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9959
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9957
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9959
    const-string/jumbo v11, " for provider "

    .line 9957
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9960
    const-string/jumbo v11, ": launching app became null"

    .line 9957
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9961
    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    .line 9962
    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v10}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/4 v11, 0x0

    aput-object v10, v5, v11

    .line 9963
    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v11, 0x1

    aput-object v10, v5, v11

    .line 9964
    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/4 v11, 0x2

    aput-object v10, v5, v11

    const/4 v10, 0x3

    aput-object p2, v5, v10

    .line 9961
    const/16 v10, 0x7554

    invoke-static {v10, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    .line 9965
    const/4 v5, 0x0

    monitor-exit v4

    return-object v5

    .line 9875
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v8    # "comp":Landroid/content/ComponentName;
    .restart local v20    # "N":I
    .restart local v28    # "firstClass":Z
    .restart local v30    # "i":I
    .restart local v34    # "msg":Ljava/lang/String;
    :cond_1f
    add-int/lit8 v30, v30, 0x1

    goto/16 :goto_9

    .line 9894
    .restart local v36    # "origId":J
    :catch_1
    move-exception v25

    .line 9895
    .local v25, "e":Ljava/lang/IllegalArgumentException;
    :try_start_11
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Failed trying to unstop package "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9896
    iget-object v11, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9895
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9896
    const-string/jumbo v11, ": "

    .line 9895
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_2

    goto/16 :goto_a

    .line 9931
    .end local v25    # "e":Ljava/lang/IllegalArgumentException;
    :catchall_2
    move-exception v5

    .line 9932
    :try_start_12
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9931
    throw v5
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_0

    .line 9915
    .restart local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_20
    :try_start_13
    const-string/jumbo v5, "getContentProviderImpl: before start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9916
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    .line 9917
    iget-object v12, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    const-string/jumbo v15, "content provider"

    .line 9918
    new-instance v16, Landroid/content/ComponentName;

    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9919
    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    .line 9918
    move-object/from16 v0, v16

    invoke-direct {v0, v5, v10}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9917
    const/4 v13, 0x0

    const/4 v14, 0x0

    .line 9919
    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v10, p0

    .line 9916
    invoke-virtual/range {v10 .. v19}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v35

    .line 9920
    const-string/jumbo v5, "getContentProviderImpl: after start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v40

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9921
    if-nez v35, :cond_1a

    .line 9922
    const-string/jumbo v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9923
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 9922
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9923
    const-string/jumbo v11, "/"

    .line 9922
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9924
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9922
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9924
    const-string/jumbo v11, " for provider "

    .line 9922
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 9925
    const-string/jumbo v11, ": process is bad"

    .line 9922
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_2

    .line 9932
    :try_start_14
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_0

    .line 9926
    const/4 v5, 0x0

    monitor-exit p0

    return-object v5

    .line 9971
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v20    # "N":I
    .end local v28    # "firstClass":Z
    .end local v30    # "i":I
    .end local v34    # "msg":Ljava/lang/String;
    .end local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v36    # "origId":J
    :cond_21
    if-eqz v22, :cond_22

    .line 9972
    const/4 v5, 0x1

    :try_start_15
    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 9974
    :cond_22
    invoke-virtual {v4}, Lcom/android/server/am/ContentProviderRecord;->wait()V
    :try_end_15
    .catch Ljava/lang/InterruptedException; {:try_start_15 .. :try_end_15} :catch_2
    .catchall {:try_start_15 .. :try_end_15} :catchall_4

    .line 9977
    if-eqz v22, :cond_1e

    .line 9978
    const/4 v5, 0x0

    :try_start_16
    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_3

    goto/16 :goto_c

    .line 9954
    :catchall_3
    move-exception v5

    monitor-exit v4

    throw v5

    .line 9975
    :catch_2
    move-exception v27

    .line 9977
    .local v27, "ex":Ljava/lang/InterruptedException;
    if-eqz v22, :cond_1e

    .line 9978
    const/4 v5, 0x0

    :try_start_17
    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto/16 :goto_c

    .line 9976
    .end local v27    # "ex":Ljava/lang/InterruptedException;
    :catchall_4
    move-exception v5

    .line 9977
    if-eqz v22, :cond_23

    .line 9978
    const/4 v10, 0x0

    move-object/from16 v0, v22

    iput-boolean v10, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 9976
    :cond_23
    throw v5
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_3

    :cond_24
    monitor-exit v4

    .line 9983
    if-eqz v4, :cond_25

    move-object/from16 v0, v22

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v5

    :goto_d
    return-object v5

    :cond_25
    const/4 v5, 0x0

    goto :goto_d

    .line 9911
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v8    # "comp":Landroid/content/ComponentName;
    .restart local v20    # "N":I
    .restart local v28    # "firstClass":Z
    .restart local v30    # "i":I
    .restart local v34    # "msg":Ljava/lang/String;
    .restart local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v36    # "origId":J
    :catch_3
    move-exception v24

    .local v24, "e":Landroid/os/RemoteException;
    goto/16 :goto_b

    .line 9893
    .end local v24    # "e":Landroid/os/RemoteException;
    .end local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_4
    move-exception v24

    .restart local v24    # "e":Landroid/os/RemoteException;
    goto/16 :goto_a

    .line 9782
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v20    # "N":I
    .end local v24    # "e":Landroid/os/RemoteException;
    .end local v28    # "firstClass":Z
    .end local v30    # "i":I
    .end local v34    # "msg":Ljava/lang/String;
    .end local v36    # "origId":J
    :catch_5
    move-exception v26

    .restart local v26    # "ex":Landroid/os/RemoteException;
    goto/16 :goto_4
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ActivityRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 10882
    if-eqz p0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-static {v0}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v0

    :goto_0
    return-wide v0

    :cond_0
    const-wide/16 v0, 0x1388

    goto :goto_0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 10886
    if-eqz p0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    if-eqz v0, :cond_1

    .line 10887
    :cond_0
    const-wide/32 v0, 0xea60

    return-wide v0

    .line 10889
    :cond_1
    const-wide/16 v0, 0x1388

    return-wide v0
.end method

.method private final getKsmInfo()[J
    .locals 13

    .prologue
    const/4 v12, 0x1

    const-wide/16 v10, 0x1000

    const-wide/16 v8, 0x400

    const/4 v7, 0x0

    const/4 v6, 0x0

    .line 14899
    const/4 v3, 0x4

    new-array v1, v3, [J

    .line 14900
    .local v1, "longOut":[J
    new-array v0, v12, [I

    .line 14901
    const/16 v3, 0x2020

    aput v3, v0, v6

    .line 14903
    .local v0, "SINGLE_LONG_FORMAT":[I
    new-array v2, v12, [J

    .line 14904
    .local v2, "longTmp":[J
    const-string/jumbo v3, "/sys/kernel/mm/ksm/pages_shared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14906
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v6

    .line 14907
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14908
    const-string/jumbo v3, "/sys/kernel/mm/ksm/pages_sharing"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14910
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v12

    .line 14911
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14912
    const-string/jumbo v3, "/sys/kernel/mm/ksm/pages_unshared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14914
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    const/4 v3, 0x2

    aput-wide v4, v1, v3

    .line 14915
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14916
    const-string/jumbo v3, "/sys/kernel/mm/ksm/pages_volatile"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14918
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    const/4 v3, 0x3

    aput-wide v4, v1, v3

    .line 14919
    return-object v1
.end method

.method private final getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
    .locals 4
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 4728
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 4730
    .local v2, "threadBinder":Landroid/os/IBinder;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 4731
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 4732
    .local v1, "rec":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    if-ne v3, v2, :cond_0

    .line 4733
    return v0

    .line 4730
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 4736
    .end local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v3, -0x1

    return v3
.end method

.method private getLowRamTimeSinceIdle(J)J
    .locals 7
    .param p1, "now"    # J

    .prologue
    const-wide/16 v0, 0x0

    .line 11616
    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    iget-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    cmp-long v4, v4, v0

    if-lez v4, :cond_0

    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v0, p1, v0

    :cond_0
    add-long/2addr v0, v2

    return-wide v0
.end method

.method private getProfileIdsLocked(I)Ljava/util/Set;
    .locals 6
    .param p1, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/Set",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .prologue
    .line 20133
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 20134
    .local v3, "userIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    .line 20135
    const/4 v5, 0x0

    .line 20134
    invoke-virtual {v4, p1, v5}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v0

    .line 20136
    .local v0, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v0}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "user$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 20137
    .local v1, "user":Landroid/content/pm/UserInfo;
    iget v4, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 20139
    .end local v1    # "user":Landroid/content/pm/UserInfo;
    :cond_0
    return-object v3
.end method

.method private getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
    .locals 5
    .param p1, "authority"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 7437
    const/4 v2, 0x0

    .line 7438
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, p1, p2}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 7439
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v0, :cond_0

    .line 7440
    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 7448
    .end local v2    # "pi":Landroid/content/pm/ProviderInfo;
    :goto_0
    return-object v2

    .line 7443
    .restart local v2    # "pi":Landroid/content/pm/ProviderInfo;
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 7444
    const/16 v4, 0x800

    .line 7443
    invoke-interface {v3, p1, v4, p2}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v2

    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    goto :goto_0

    .line 7445
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    :catch_0
    move-exception v1

    .local v1, "ex":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private getUiContext()Landroid/content/Context;
    .locals 1

    .prologue
    .line 2719
    monitor-enter p0

    .line 2720
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_0

    .line 2721
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/content/pm/ThemeUtils;->createUiContext(Landroid/content/Context;)Landroid/content/Context;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 2723
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    monitor-exit p0

    return-object v0

    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 2719
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method private handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 18
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "shortMsg"    # Ljava/lang/String;
    .param p4, "longMsg"    # Ljava/lang/String;
    .param p5, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 12228
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 12231
    .local v4, "now":J
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_2

    .line 12232
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/lang/Long;

    .line 12237
    :goto_0
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isPossibleThemeCrash(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService;->sendAppFailureBroadcast(Ljava/lang/String;)V

    .line 12239
    :cond_0
    if-eqz v11, :cond_4

    invoke-virtual {v11}, Ljava/lang/Long;->longValue()J

    move-result-wide v6

    const-wide/32 v16, 0xea60

    add-long v6, v6, v16

    cmp-long v3, v4, v6

    if-gez v3, :cond_4

    .line 12241
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 12242
    const-string/jumbo v7, " has crashed too many times: killing!"

    .line 12241
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12243
    const/4 v3, 0x3

    new-array v3, v3, [Ljava/lang/Object;

    .line 12244
    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x0

    aput-object v6, v3, v7

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v7, 0x1

    aput-object v6, v3, v7

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x2

    aput-object v6, v3, v7

    .line 12243
    const/16 v6, 0x7550

    invoke-static {v6, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 12245
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12246
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v3, :cond_3

    .line 12251
    const/4 v3, 0x3

    new-array v3, v3, [Ljava/lang/Object;

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x0

    aput-object v6, v3, v7

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x1

    aput-object v6, v3, v7

    .line 12252
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v7, 0x2

    aput-object v6, v3, v7

    .line 12251
    const/16 v6, 0x753f

    invoke-static {v6, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 12253
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_1

    .line 12256
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v16, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v17, v0

    .line 12257
    new-instance v3, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move-object/from16 v8, p5

    invoke-direct/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;-><init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 12256
    move-object/from16 v0, v16

    move/from16 v1, v17

    invoke-virtual {v15, v0, v1, v3}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 12258
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 12260
    :cond_1
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->bad:Z

    .line 12261
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 12265
    const-string/jumbo v3, "crash"

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v6, v7, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 12266
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 12267
    const/4 v3, 0x0

    return v3

    .line 12234
    :cond_2
    const/4 v11, 0x0

    .local v11, "crashTime":Ljava/lang/Long;
    goto/16 :goto_0

    .line 12269
    .end local v11    # "crashTime":Ljava/lang/Long;
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 12275
    :goto_1
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v12, v3, -0x1

    .local v12, "i":I
    :goto_2
    if-ltz v12, :cond_5

    .line 12278
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3, v12}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ServiceRecord;

    .line 12279
    .local v14, "sr":Lcom/android/server/am/ServiceRecord;
    iget v3, v14, Lcom/android/server/am/ServiceRecord;->crashCount:I

    add-int/lit8 v3, v3, 0x1

    iput v3, v14, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 12275
    add-int/lit8 v12, v12, -0x1

    goto :goto_2

    .line 12271
    .end local v12    # "i":I
    .end local v14    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->finishTopRunningActivityLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    goto :goto_1

    .line 12286
    .restart local v12    # "i":I
    :cond_5
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    .line 12287
    .local v2, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_7

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_7

    .line 12288
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x1

    if-nez v3, :cond_7

    .line 12289
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v9, v3, -0x1

    .local v9, "activityNdx":I
    :goto_3
    if-ltz v9, :cond_7

    .line 12290
    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ActivityRecord;

    .line 12291
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    invoke-virtual {v13}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v3

    if-eqz v3, :cond_6

    .line 12292
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Clearing package preferred activities from "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v13, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12294
    :try_start_0
    invoke-static {}, Landroid/app/ActivityThread;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 12295
    iget-object v6, v13, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 12294
    invoke-interface {v3, v6}, Landroid/content/pm/IPackageManager;->clearPackagePreferredActivities(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 12289
    :cond_6
    :goto_4
    add-int/lit8 v9, v9, -0x1

    goto :goto_3

    .line 12303
    .end local v9    # "activityNdx":I
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_7
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_8

    .line 12306
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    invoke-virtual {v3, v6, v7, v8}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 12309
    :cond_8
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    if-eqz v3, :cond_9

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    invoke-virtual {v3, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 12310
    :cond_9
    const/4 v3, 0x1

    return v3

    .line 12296
    .restart local v9    # "activityNdx":I
    .restart local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v10

    .local v10, "c":Landroid/os/RemoteException;
    goto :goto_4
.end method

.method private final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 9
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z

    .prologue
    const/4 v8, 0x0

    const/4 v7, 0x0

    .line 4691
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 4692
    .local v3, "pid":I
    const/4 v4, -0x1

    invoke-direct {p0, p1, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    move-result v2

    .line 4693
    .local v2, "kept":Z
    if-nez v2, :cond_0

    if-eqz p2, :cond_4

    .line 4700
    :cond_0
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_1

    .line 4701
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 4705
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    .line 4707
    .local v0, "hasVisibleActivities":Z
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 4709
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v4, :cond_2

    .line 4710
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Crash of app "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 4711
    const-string/jumbo v6, " running instrumentation "

    .line 4710
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 4711
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 4710
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4712
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 4713
    .local v1, "info":Landroid/os/Bundle;
    const-string/jumbo v4, "shortMsg"

    const-string/jumbo v5, "Process crashed."

    invoke-virtual {v1, v4, v5}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 4714
    invoke-virtual {p0, p1, v7, v1}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 4717
    .end local v1    # "info":Landroid/os/Bundle;
    :cond_2
    if-nez p2, :cond_3

    if-eqz v0, :cond_3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    move-result v4

    if-eqz v4, :cond_5

    .line 4690
    :cond_3
    :goto_1
    return-void

    .line 4694
    .end local v0    # "hasVisibleActivities":Z
    :cond_4
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4695
    if-lez v3, :cond_0

    .line 4696
    invoke-static {v3}, Lcom/android/server/am/ProcessList;->remove(I)V

    goto :goto_0

    .line 4723
    .restart local v0    # "hasVisibleActivities":Z
    :cond_5
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v8, v7}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    goto :goto_1
.end method

.method private hasUsageStatsPermission(Ljava/lang/String;)Z
    .locals 6
    .param p1, "callingPackage"    # Ljava/lang/String;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 3780
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 3781
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 3780
    const/16 v5, 0x2b

    invoke-virtual {v3, v5, v4, p1}, Lcom/android/server/AppOpsService;->checkOperation(IILjava/lang/String;)I

    move-result v0

    .line 3782
    .local v0, "mode":I
    const/4 v3, 0x3

    if-ne v0, v3, :cond_1

    .line 3783
    const-string/jumbo v3, "android.permission.PACKAGE_USAGE_STATS"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-nez v3, :cond_0

    :goto_0
    return v1

    :cond_0
    move v1, v2

    goto :goto_0

    .line 3786
    :cond_1
    if-nez v0, :cond_2

    :goto_1
    return v1

    :cond_2
    move v1, v2

    goto :goto_1
.end method

.method private isGetTasksAllowed(Ljava/lang/String;II)Z
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I

    .prologue
    .line 8563
    const-string/jumbo v2, "android.permission.REAL_GET_TASKS"

    invoke-virtual {p0, v2, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-nez v2, :cond_2

    const/4 v0, 0x1

    .line 8565
    .local v0, "allowed":Z
    :goto_0
    if-nez v0, :cond_0

    .line 8566
    const-string/jumbo v2, "android.permission.GET_TASKS"

    invoke-virtual {p0, v2, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-nez v2, :cond_0

    .line 8573
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    invoke-interface {v2, p3}, Landroid/content/pm/IPackageManager;->isUidPrivileged(I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v2

    if-eqz v2, :cond_0

    .line 8574
    const/4 v0, 0x1

    .line 8582
    :cond_0
    :goto_1
    if-nez v0, :cond_1

    .line 8586
    :cond_1
    return v0

    .line 8563
    .end local v0    # "allowed":Z
    :cond_2
    const/4 v0, 0x0

    .restart local v0    # "allowed":Z
    goto :goto_0

    .line 8578
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method private isPossibleThemeCrash(Ljava/lang/String;)Z
    .locals 1
    .param p1, "exceptionClassName"    # Ljava/lang/String;

    .prologue
    .line 12219
    const-class v0, Landroid/content/res/Resources$NotFoundException;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 12220
    const-class v0, Landroid/view/InflateException;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 12219
    if-eqz v0, :cond_1

    .line 12221
    :cond_0
    const/4 v0, 0x1

    return v0

    .line 12223
    :cond_1
    const/4 v0, 0x0

    return v0
.end method

.method private isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v6, 0x0

    .line 17816
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    .line 17817
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_0

    .line 17818
    iget-object v2, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    return-object v2

    .line 17822
    :cond_0
    monitor-enter p0

    .line 17823
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    array-length v4, v3

    :goto_0
    if-ge v2, v4, :cond_2

    aget-object v0, v3, v2

    .line 17824
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v1, v0, Lcom/android/server/am/BroadcastQueue;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 17825
    if-eqz v1, :cond_1

    iget-object v5, v1, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-ne v5, p1, :cond_1

    monitor-exit p0

    .line 17827
    return-object v0

    .line 17823
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    monitor-exit p0

    .line 17832
    return-object v6

    .line 17822
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method private final killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "userId"    # I
    .param p4, "minOomAdj"    # I
    .param p5, "callerWillRestart"    # Z
    .param p6, "allowRestart"    # Z
    .param p7, "doit"    # Z
    .param p8, "evenPersistent"    # Z
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 5698
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 5703
    .local v12, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v5

    .line 5704
    .local v5, "NP":I
    const/4 v10, 0x0

    .local v10, "ip":I
    :goto_0
    if-ge v10, v5, :cond_b

    .line 5705
    iget-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/SparseArray;

    .line 5706
    .local v7, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 5707
    .local v4, "NA":I
    const/4 v9, 0x0

    .local v9, "ia":I
    :goto_1
    if-ge v9, v4, :cond_a

    .line 5708
    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 5709
    .local v6, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v13, :cond_0

    if-eqz p8, :cond_1

    .line 5713
    :cond_0
    iget-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v13, :cond_2

    .line 5714
    if-eqz p7, :cond_1

    .line 5715
    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5707
    :cond_1
    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 5721
    :cond_2
    iget v13, v6, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v0, p4

    if-lt v13, v0, :cond_1

    .line 5727
    if-nez p1, :cond_5

    .line 5728
    const/4 v13, -0x1

    move/from16 v0, p3

    if-eq v0, v13, :cond_3

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-ne v13, v0, :cond_1

    .line 5731
    :cond_3
    if-ltz p2, :cond_4

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v13}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v13

    move/from16 v0, p2

    if-ne v13, v0, :cond_1

    .line 5752
    :cond_4
    :goto_3
    if-nez p7, :cond_9

    .line 5753
    const/4 v13, 0x1

    return v13

    .line 5738
    :cond_5
    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v13, :cond_8

    .line 5739
    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v13, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v11

    .line 5740
    :goto_4
    if-nez v11, :cond_6

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v13}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v13

    move/from16 v0, p2

    if-ne v13, v0, :cond_1

    .line 5743
    :cond_6
    const/4 v13, -0x1

    move/from16 v0, p3

    if-eq v0, v13, :cond_7

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-ne v13, v0, :cond_1

    .line 5746
    :cond_7
    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v13, p1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v13

    if-nez v13, :cond_4

    if-eqz v11, :cond_1

    goto :goto_3

    .line 5738
    :cond_8
    const/4 v11, 0x0

    .local v11, "isDep":Z
    goto :goto_4

    .line 5755
    .end local v11    # "isDep":Z
    :cond_9
    const/4 v13, 0x1

    iput-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 5756
    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5704
    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_a
    add-int/lit8 v10, v10, 0x1

    goto/16 :goto_0

    .line 5760
    .end local v4    # "NA":I
    .end local v7    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v9    # "ia":I
    :cond_b
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 5761
    .local v3, "N":I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_5
    if-ge v8, v3, :cond_c

    .line 5762
    invoke-virtual {v12, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ProcessRecord;

    move/from16 v0, p5

    move/from16 v1, p6

    move-object/from16 v2, p9

    invoke-direct {p0, v13, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 5761
    add-int/lit8 v8, v8, 0x1

    goto :goto_5

    .line 5764
    :cond_c
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 5765
    if-lez v3, :cond_d

    const/4 v13, 0x1

    :goto_6
    return v13

    :cond_d
    const/4 v13, 0x0

    goto :goto_6
.end method

.method private static killProcessGroup(II)V
    .locals 4
    .param p0, "uid"    # I
    .param p1, "pid"    # I

    .prologue
    const-wide/16 v2, 0x40

    .line 2911
    const-string/jumbo v0, "killProcessGroup"

    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2912
    invoke-static {p0, p1}, Landroid/os/Process;->killProcessGroup(II)I

    .line 2913
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 2910
    return-void
.end method

.method private killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 8
    .param p1, "belowAdj"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 11522
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/16 v7, 0x3e8

    if-eq v6, v7, :cond_0

    .line 11523
    new-instance v6, Ljava/lang/SecurityException;

    const-string/jumbo v7, "killProcessesBelowAdj() only available to system"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 11526
    :cond_0
    const/4 v2, 0x0

    .line 11527
    .local v2, "killed":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7

    .line 11528
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 11529
    .local v5, "size":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v5, :cond_3

    .line 11530
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 11531
    .local v3, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 11532
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v4, :cond_2

    .line 11529
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 11534
    :cond_2
    iget v0, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 11535
    .local v0, "adj":I
    if-le v0, p1, :cond_1

    iget-boolean v6, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v6, :cond_1

    .line 11536
    const/4 v6, 0x1

    invoke-virtual {v4, p2, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11537
    const/4 v2, 0x1

    goto :goto_1

    .end local v0    # "adj":I
    .end local v3    # "pid":I
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit v7

    .line 11541
    return v2

    .line 11527
    .end local v1    # "i":I
    .end local v5    # "size":I
    :catchall_0
    move-exception v6

    monitor-exit v7

    throw v6
.end method

.method private loadResourcesOnSystemReady()V
    .locals 2

    .prologue
    .line 11719
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 11720
    .local v0, "res":Landroid/content/res/Resources;
    const v1, 0x112008c

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mHasRecents:Z

    .line 11721
    const v1, 0x1050002

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    .line 11722
    const v1, 0x1050001

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    .line 11718
    return-void
.end method

.method private lockScreenShownToString()Ljava/lang/String;
    .locals 2

    .prologue
    .line 10639
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    packed-switch v0, :pswitch_data_0

    .line 10643
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "Unknown="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 10640
    :pswitch_0
    const-string/jumbo v0, "LOCK_SCREEN_HIDDEN"

    return-object v0

    .line 10641
    :pswitch_1
    const-string/jumbo v0, "LOCK_SCREEN_LEAVING"

    return-object v0

    .line 10642
    :pswitch_2
    const-string/jumbo v0, "LOCK_SCREEN_SHOWN"

    return-object v0

    .line 10639
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 16
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 12428
    if-nez p2, :cond_0

    .line 12429
    return-void

    .line 12431
    :cond_0
    if-eqz p1, :cond_6

    .line 12432
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v2, v2, 0x81

    if-eqz v2, :cond_7

    const/4 v9, 0x1

    .line 12434
    .local v9, "isSystemApp":Z
    :goto_0
    if-nez p1, :cond_8

    const-string/jumbo v11, "unknown"

    .line 12435
    .local v11, "processName":Ljava/lang/String;
    :goto_1
    if-eqz v9, :cond_9

    const-string/jumbo v7, "system_app_strictmode"

    .line 12437
    .local v7, "dropboxTag":Ljava/lang/String;
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "dropbox"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v6

    .line 12436
    check-cast v6, Landroid/os/DropBoxManager;

    .line 12440
    .local v6, "dbox":Landroid/os/DropBoxManager;
    if-eqz v6, :cond_a

    invoke-virtual {v6, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 12444
    if-eqz v9, :cond_b

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 12445
    .local v5, "sb":Ljava/lang/StringBuilder;
    :goto_3
    monitor-enter v5

    .line 12446
    :try_start_0
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I

    move-result v2

    if-nez v2, :cond_c

    const/4 v8, 0x1

    .line 12447
    .local v8, "bufferWasEmpty":Z
    :goto_4
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v11, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 12448
    const-string/jumbo v2, "Build: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    sget-object v3, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12449
    const-string/jumbo v2, "System-App: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12450
    const-string/jumbo v2, "Uptime-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v14, v0, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12451
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz v2, :cond_1

    .line 12452
    const-string/jumbo v2, "Loop-Violation-Number: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12454
    :cond_1
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz v2, :cond_2

    .line 12455
    const-string/jumbo v2, "Animations-Running: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12457
    :cond_2
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz v2, :cond_3

    .line 12458
    const-string/jumbo v2, "Broadcast-Intent-Action: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12460
    :cond_3
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 v3, -0x1

    if-eq v2, v3, :cond_4

    .line 12461
    const-string/jumbo v2, "Duration-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12463
    :cond_4
    move-object/from16 v0, p2

    iget-wide v2, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v14, -0x1

    cmp-long v2, v2, v14

    if-eqz v2, :cond_5

    .line 12464
    const-string/jumbo v2, "Instance-Count: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v14, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12466
    :cond_5
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz v2, :cond_d

    .line 12467
    move-object/from16 v0, p2

    iget-object v3, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    const/4 v2, 0x0

    array-length v4, v3

    :goto_5
    if-ge v2, v4, :cond_d

    aget-object v12, v3, v2

    .line 12468
    .local v12, "tag":Ljava/lang/String;
    const-string/jumbo v13, "Span-Tag: "

    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    const-string/jumbo v14, "\n"

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12467
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    .line 12431
    .end local v5    # "sb":Ljava/lang/StringBuilder;
    .end local v6    # "dbox":Landroid/os/DropBoxManager;
    .end local v7    # "dropboxTag":Ljava/lang/String;
    .end local v8    # "bufferWasEmpty":Z
    .end local v9    # "isSystemApp":Z
    .end local v11    # "processName":Ljava/lang/String;
    .end local v12    # "tag":Ljava/lang/String;
    :cond_6
    const/4 v9, 0x1

    .restart local v9    # "isSystemApp":Z
    goto/16 :goto_0

    .line 12432
    .end local v9    # "isSystemApp":Z
    :cond_7
    const/4 v9, 0x0

    .restart local v9    # "isSystemApp":Z
    goto/16 :goto_0

    .line 12434
    :cond_8
    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .restart local v11    # "processName":Ljava/lang/String;
    goto/16 :goto_1

    .line 12435
    :cond_9
    const-string/jumbo v7, "data_app_strictmode"

    .restart local v7    # "dropboxTag":Ljava/lang/String;
    goto/16 :goto_2

    .line 12440
    .restart local v6    # "dbox":Landroid/os/DropBoxManager;
    :cond_a
    return-void

    .line 12444
    :cond_b
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v2, 0x400

    invoke-direct {v5, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .restart local v5    # "sb":Ljava/lang/StringBuilder;
    goto/16 :goto_3

    .line 12446
    :cond_c
    const/4 v8, 0x0

    .restart local v8    # "bufferWasEmpty":Z
    goto/16 :goto_4

    .line 12471
    :cond_d
    :try_start_1
    const-string/jumbo v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12472
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    if-eqz v2, :cond_e

    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    if-eqz v2, :cond_e

    .line 12473
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12474
    const-string/jumbo v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12476
    :cond_e
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->message:Ljava/lang/String;

    if-eqz v2, :cond_f

    .line 12477
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->message:Ljava/lang/String;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12478
    const-string/jumbo v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12483
    :cond_f
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    const/high16 v3, 0x10000

    if-le v2, v3, :cond_11

    const/4 v10, 0x1

    .local v10, "needsFlush":Z
    :goto_6
    monitor-exit v5

    .line 12493
    if-eqz v9, :cond_10

    if-eqz v10, :cond_12

    .line 12494
    :cond_10
    new-instance v2, Lcom/android/server/am/ActivityManagerService$16;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v3, p0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/StringBuilder;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$16;->start()V

    .line 12508
    return-void

    .line 12483
    .end local v10    # "needsFlush":Z
    :cond_11
    const/4 v10, 0x0

    .restart local v10    # "needsFlush":Z
    goto :goto_6

    .line 12445
    .end local v8    # "bufferWasEmpty":Z
    .end local v10    # "needsFlush":Z
    :catchall_0
    move-exception v2

    monitor-exit v5

    throw v2

    .line 12512
    .restart local v8    # "bufferWasEmpty":Z
    .restart local v10    # "needsFlush":Z
    :cond_12
    if-nez v8, :cond_13

    .line 12516
    return-void

    .line 12521
    :cond_13
    new-instance v2, Lcom/android/server/am/ActivityManagerService$17;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$17;->start()V

    .line 12427
    return-void
.end method

.method private makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "shortMsg"    # Ljava/lang/String;
    .param p3, "longMsg"    # Ljava/lang/String;
    .param p4, "stackTrace"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x1

    .line 12137
    iput-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 12139
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    .line 12138
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12140
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12141
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 12142
    const-string/jumbo v2, "force-crash"

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method private makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Ljava/lang/String;
    .param p3, "shortMsg"    # Ljava/lang/String;
    .param p4, "longMsg"    # Ljava/lang/String;

    .prologue
    .line 12147
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 12149
    const/4 v2, 0x2

    .line 12150
    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    .line 12148
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12151
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12152
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 12146
    return-void
.end method

.method private maybePrunePersistedUriGrantsLocked(I)Z
    .locals 9
    .param p1, "uid"    # I

    .prologue
    const/4 v8, 0x0

    .line 8350
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 8351
    .local v3, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v3, :cond_0

    return v8

    .line 8352
    :cond_0
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v6

    const/16 v7, 0x80

    if-ge v6, v7, :cond_1

    return v8

    .line 8354
    :cond_1
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v4

    .line 8355
    .local v4, "persisted":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v6

    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "perm$iterator":Ljava/util/Iterator;
    :cond_2
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 8356
    .local v1, "perm":Lcom/android/server/am/UriPermission;
    iget v6, v1, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v6, :cond_2

    .line 8357
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 8361
    .end local v1    # "perm":Lcom/android/server/am/UriPermission;
    :cond_3
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v5, v6, -0x80

    .line 8362
    .local v5, "trimCount":I
    if-gtz v5, :cond_4

    return v8

    .line 8364
    :cond_4
    new-instance v6, Lcom/android/server/am/UriPermission$PersistedTimeComparator;

    invoke-direct {v6}, Lcom/android/server/am/UriPermission$PersistedTimeComparator;-><init>()V

    invoke-static {v4, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 8365
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-ge v0, v5, :cond_5

    .line 8366
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 8371
    .restart local v1    # "perm":Lcom/android/server/am/UriPermission;
    const/4 v6, -0x1

    invoke-virtual {v1, v6}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    .line 8372
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 8365
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 8375
    .end local v1    # "perm":Lcom/android/server/am/UriPermission;
    :cond_5
    const/4 v6, 0x1

    return v6
.end method

.method private maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 8
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "providerPkgName"    # Ljava/lang/String;
    .param p3, "authority"    # Ljava/lang/String;

    .prologue
    .line 19170
    if-nez p1, :cond_0

    return-void

    .line 19171
    :cond_0
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x6

    if-gt v4, v5, :cond_3

    .line 19172
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UserState;

    .line 19173
    .local v1, "userState":Lcom/android/server/am/UserState;
    if-nez v1, :cond_1

    return-void

    .line 19174
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    .line 19175
    .local v2, "now":J
    iget-object v4, v1, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-virtual {v4, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Long;

    .line 19176
    .local v0, "lastReported":Ljava/lang/Long;
    if-eqz v0, :cond_2

    invoke-virtual {v0}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    const-wide/32 v6, 0xea60

    sub-long v6, v2, v6

    cmp-long v4, v4, v6

    if-gez v4, :cond_3

    .line 19177
    :cond_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 19178
    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 19177
    invoke-virtual {v4, p3, p2, v5}, Landroid/app/usage/UsageStatsManagerInternal;->reportContentProviderUsage(Ljava/lang/String;Ljava/lang/String;I)V

    .line 19179
    iget-object v4, v1, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    invoke-virtual {v4, p3, v5}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 19169
    .end local v0    # "lastReported":Ljava/lang/Long;
    .end local v1    # "userState":Lcom/android/server/am/UserState;
    .end local v2    # "now":J
    :cond_3
    return-void
.end method

.method private maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "nowElapsed"    # J

    .prologue
    const/4 v10, 0x6

    const-wide/16 v8, 0x0

    .line 19190
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-nez v3, :cond_0

    .line 19191
    return-void

    .line 19197
    :cond_0
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v4, 0x3

    if-gt v3, v4, :cond_2

    .line 19198
    const/4 v1, 0x1

    .line 19199
    .local v1, "isInteraction":Z
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 19212
    :goto_0
    if-eqz v1, :cond_7

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v3, :cond_1

    .line 19213
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v4, p2, v4

    const-wide/32 v6, 0x5265c00

    cmp-long v3, v4, v6

    if-lez v3, :cond_7

    .line 19214
    :cond_1
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    .line 19215
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v2

    .line 19216
    .local v2, "packages":[Ljava/lang/String;
    if-eqz v2, :cond_7

    .line 19217
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    array-length v3, v2

    if-ge v0, v3, :cond_7

    .line 19218
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    aget-object v4, v2, v0

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v3, v4, v5, v10}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 19217
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 19200
    .end local v0    # "i":I
    .end local v1    # "isInteraction":Z
    .end local v2    # "packages":[Ljava/lang/String;
    :cond_2
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v4, 0x5

    if-gt v3, v4, :cond_5

    .line 19201
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    cmp-long v3, v4, v8

    if-nez v3, :cond_3

    .line 19202
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 19203
    const/4 v1, 0x0

    .restart local v1    # "isInteraction":Z
    goto :goto_0

    .line 19205
    .end local v1    # "isInteraction":Z
    :cond_3
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    const-wide/32 v6, 0x1b7740

    add-long/2addr v4, v6

    cmp-long v3, p2, v4

    if-lez v3, :cond_4

    const/4 v1, 0x1

    .restart local v1    # "isInteraction":Z
    goto :goto_0

    .end local v1    # "isInteraction":Z
    :cond_4
    const/4 v1, 0x0

    .restart local v1    # "isInteraction":Z
    goto :goto_0

    .line 19208
    .end local v1    # "isInteraction":Z
    :cond_5
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-gt v3, v10, :cond_6

    const/4 v1, 0x1

    .line 19210
    .restart local v1    # "isInteraction":Z
    :goto_2
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    goto :goto_0

    .line 19208
    .end local v1    # "isInteraction":Z
    :cond_6
    const/4 v1, 0x0

    .restart local v1    # "isInteraction":Z
    goto :goto_2

    .line 19223
    :cond_7
    iput-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    .line 19224
    if-nez v1, :cond_8

    .line 19225
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    .line 19184
    :cond_8
    return-void
.end method

.method private final moveTaskBackwardsLocked(I)V
    .locals 2
    .param p1, "task"    # I

    .prologue
    .line 9076
    const-string/jumbo v0, "ActivityManager"

    const-string/jumbo v1, "moveTaskBackwards not yet implemented!"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9075
    return-void
.end method

.method private static native nativeMigrateFromBoost()I
.end method

.method private static native nativeMigrateToBoost()I
.end method

.method static procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I
    .locals 2
    .param p0, "procState"    # I
    .param p1, "memAdj"    # I
    .param p2, "currApp"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 12987
    invoke-static {p0}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v0

    .line 12988
    .local v0, "imp":I
    const/16 v1, 0x190

    if-ne v0, v1, :cond_0

    .line 12989
    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    .line 12993
    :goto_0
    return v0

    .line 12991
    :cond_0
    const/4 v1, 0x0

    iput v1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    goto :goto_0
.end method

.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2
    .param p0, "process"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 12668
    if-eqz p0, :cond_0

    iget v0, p0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_1

    .line 12669
    :cond_0
    const-string/jumbo v0, "system_server"

    return-object v0

    .line 12670
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x1

    if-eqz v0, :cond_2

    .line 12671
    const-string/jumbo v0, "system_app"

    return-object v0

    .line 12673
    :cond_2
    const-string/jumbo v0, "data_app"

    return-object v0
.end method

.method private final processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v2, 0x1

    .line 6116
    invoke-virtual {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 6117
    const-string/jumbo v0, "timeout publishing content providers"

    const/4 v1, 0x0

    invoke-direct {p0, p1, v1, v2, v0}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 6115
    return-void
.end method

.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v11, 0x0

    const/4 v10, 0x1

    const/4 v9, 0x0

    .line 6121
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 6122
    .local v4, "pid":I
    const/4 v2, 0x0

    .line 6123
    .local v2, "gone":Z
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6

    .line 6124
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 6125
    .local v3, "knownApp":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_0

    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v5, :cond_0

    .line 6126
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->remove(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6127
    const/4 v2, 0x1

    :cond_0
    monitor-exit v6

    .line 6131
    if-eqz v2, :cond_5

    .line 6132
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " failed to attach"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6133
    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v11

    .line 6134
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v10

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x2

    aput-object v6, v5, v7

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v7, 0x3

    aput-object v6, v5, v7

    .line 6133
    const/16 v6, 0x7555

    invoke-static {v6, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6135
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 6136
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_1

    .line 6137
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 6138
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 6137
    const/16 v8, 0x19

    invoke-virtual {v6, v8, v7, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6139
    iput-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 6141
    :cond_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 6142
    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_2

    .line 6143
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 6146
    :cond_2
    invoke-virtual {p0, p1, v10}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 6148
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v5, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6149
    const-string/jumbo v5, "start timeout"

    invoke-virtual {p1, v5, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 6150
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6151
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v5, v5, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v5, v4, :cond_3

    .line 6152
    const-string/jumbo v5, "ActivityManager"

    const-string/jumbo v6, "Unattached app died before backup, skipping"

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6155
    :try_start_1
    const-string/jumbo v5, "backup"

    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v5

    .line 6154
    invoke-static {v5}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 6156
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v0, v5}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 6161
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    :cond_3
    :goto_0
    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v5

    if-eqz v5, :cond_4

    .line 6162
    const-string/jumbo v5, "ActivityManager"

    const-string/jumbo v6, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6163
    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->skipPendingBroadcastLocked(I)V

    .line 6120
    :cond_4
    :goto_1
    return-void

    .line 6123
    .end local v3    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v5

    monitor-exit v6

    throw v5

    .line 6166
    .restart local v3    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :cond_5
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Spurious process start timeout - pid not known for "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 6157
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private readGrantedUriPermissionsLocked()V
    .locals 32

    .prologue
    .line 8192
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v16

    .line 8194
    .local v16, "now":J
    const/4 v12, 0x0

    .line 8196
    .local v12, "fis":Ljava/io/FileInputStream;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v12

    .line 8197
    .local v12, "fis":Ljava/io/FileInputStream;
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v13

    .line 8198
    .local v13, "in":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v29, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual/range {v29 .. v29}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v29

    move-object/from16 v0, v29

    invoke-interface {v13, v12, v0}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 8201
    :cond_0
    :goto_0
    invoke-interface {v13}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v26

    .local v26, "type":I
    const/16 v29, 0x1

    move/from16 v0, v26

    move/from16 v1, v29

    if-eq v0, v1, :cond_3

    .line 8202
    invoke-interface {v13}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v22

    .line 8203
    .local v22, "tag":Ljava/lang/String;
    const/16 v29, 0x2

    move/from16 v0, v26

    move/from16 v1, v29

    if-ne v0, v1, :cond_0

    .line 8204
    const-string/jumbo v29, "uri-grant"

    move-object/from16 v0, v29

    move-object/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v29

    if-eqz v29, :cond_0

    .line 8208
    const-string/jumbo v29, "userHandle"

    const/16 v30, -0x2710

    .line 8207
    move-object/from16 v0, v29

    move/from16 v1, v30

    invoke-static {v13, v0, v1}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I

    move-result v28

    .line 8209
    .local v28, "userHandle":I
    const/16 v29, -0x2710

    move/from16 v0, v28

    move/from16 v1, v29

    if-eq v0, v1, :cond_1

    .line 8211
    move/from16 v21, v28

    .line 8212
    .local v21, "sourceUserId":I
    move/from16 v25, v28

    .line 8217
    .local v25, "targetUserId":I
    :goto_1
    const-string/jumbo v29, "sourcePkg"

    const/16 v30, 0x0

    move-object/from16 v0, v30

    move-object/from16 v1, v29

    invoke-interface {v13, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v20

    .line 8218
    .local v20, "sourcePkg":Ljava/lang/String;
    const-string/jumbo v29, "targetPkg"

    const/16 v30, 0x0

    move-object/from16 v0, v30

    move-object/from16 v1, v29

    invoke-interface {v13, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v23

    .line 8219
    .local v23, "targetPkg":Ljava/lang/String;
    const-string/jumbo v29, "uri"

    const/16 v30, 0x0

    move-object/from16 v0, v30

    move-object/from16 v1, v29

    invoke-interface {v13, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    invoke-static/range {v29 .. v29}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v27

    .line 8220
    .local v27, "uri":Landroid/net/Uri;
    const-string/jumbo v29, "prefix"

    move-object/from16 v0, v29

    invoke-static {v13, v0}, Lcom/android/internal/util/XmlUtils;->readBooleanAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z

    move-result v19

    .line 8221
    .local v19, "prefix":Z
    const-string/jumbo v29, "modeFlags"

    move-object/from16 v0, v29

    invoke-static {v13, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v14

    .line 8222
    .local v14, "modeFlags":I
    const-string/jumbo v29, "createdTime"

    move-object/from16 v0, v29

    move-wide/from16 v1, v16

    invoke-static {v13, v0, v1, v2}, Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J

    move-result-wide v6

    .line 8226
    .local v6, "createdTime":J
    invoke-virtual/range {v27 .. v27}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v29

    .line 8225
    move-object/from16 v0, p0

    move-object/from16 v1, v29

    move/from16 v2, v21

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v18

    .line 8227
    .local v18, "pi":Landroid/content/pm/ProviderInfo;
    if-eqz v18, :cond_2

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v29, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v29

    if-eqz v29, :cond_2

    .line 8228
    const/16 v24, -0x1

    .line 8230
    .local v24, "targetUid":I
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v29

    move-object/from16 v0, v29

    move-object/from16 v1, v23

    move/from16 v2, v25

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v24

    .line 8234
    :goto_2
    const/16 v29, -0x1

    move/from16 v0, v24

    move/from16 v1, v29

    if-eq v0, v1, :cond_0

    .line 8237
    :try_start_2
    new-instance v29, Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-object/from16 v0, v29

    move/from16 v1, v21

    move-object/from16 v2, v27

    move/from16 v3, v19

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8235
    move-object/from16 v0, p0

    move-object/from16 v1, v20

    move-object/from16 v2, v23

    move/from16 v3, v24

    move-object/from16 v4, v29

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v15

    .line 8238
    .local v15, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v15, v14, v6, v7}, Lcom/android/server/am/UriPermission;->initPersistedModes(IJ)V
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    .line 8247
    .end local v6    # "createdTime":J
    .end local v12    # "fis":Ljava/io/FileInputStream;
    .end local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v14    # "modeFlags":I
    .end local v15    # "perm":Lcom/android/server/am/UriPermission;
    .end local v18    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v19    # "prefix":Z
    .end local v20    # "sourcePkg":Ljava/lang/String;
    .end local v21    # "sourceUserId":I
    .end local v22    # "tag":Ljava/lang/String;
    .end local v23    # "targetPkg":Ljava/lang/String;
    .end local v24    # "targetUid":I
    .end local v25    # "targetUserId":I
    .end local v26    # "type":I
    .end local v27    # "uri":Landroid/net/Uri;
    .end local v28    # "userHandle":I
    :catch_0
    move-exception v9

    .line 8254
    .local v9, "e":Ljava/io/FileNotFoundException;
    invoke-static {v12}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    .line 8189
    .end local v9    # "e":Ljava/io/FileNotFoundException;
    :goto_3
    return-void

    .line 8214
    .restart local v12    # "fis":Ljava/io/FileInputStream;
    .restart local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v22    # "tag":Ljava/lang/String;
    .restart local v26    # "type":I
    .restart local v28    # "userHandle":I
    :cond_1
    :try_start_3
    const-string/jumbo v29, "sourceUserId"

    move-object/from16 v0, v29

    invoke-static {v13, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v21

    .line 8215
    .restart local v21    # "sourceUserId":I
    const-string/jumbo v29, "targetUserId"

    move-object/from16 v0, v29

    invoke-static {v13, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v25

    .restart local v25    # "targetUserId":I
    goto/16 :goto_1

    .line 8241
    .restart local v6    # "createdTime":J
    .restart local v14    # "modeFlags":I
    .restart local v18    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v19    # "prefix":Z
    .restart local v20    # "sourcePkg":Ljava/lang/String;
    .restart local v23    # "targetPkg":Ljava/lang/String;
    .restart local v27    # "uri":Landroid/net/Uri;
    :cond_2
    const-string/jumbo v29, "ActivityManager"

    new-instance v30, Ljava/lang/StringBuilder;

    invoke-direct/range {v30 .. v30}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v31, "Persisted grant for "

    invoke-virtual/range {v30 .. v31}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v30

    const-string/jumbo v31, " had source "

    invoke-virtual/range {v30 .. v31}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v30

    .line 8242
    const-string/jumbo v31, " but instead found "

    .line 8241
    invoke-virtual/range {v30 .. v31}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v30

    invoke-virtual/range {v30 .. v30}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    invoke-static/range {v29 .. v30}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/io/FileNotFoundException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0

    .line 8249
    .end local v6    # "createdTime":J
    .end local v12    # "fis":Ljava/io/FileInputStream;
    .end local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v14    # "modeFlags":I
    .end local v18    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v19    # "prefix":Z
    .end local v20    # "sourcePkg":Ljava/lang/String;
    .end local v21    # "sourceUserId":I
    .end local v22    # "tag":Ljava/lang/String;
    .end local v23    # "targetPkg":Ljava/lang/String;
    .end local v25    # "targetUserId":I
    .end local v26    # "type":I
    .end local v27    # "uri":Landroid/net/Uri;
    .end local v28    # "userHandle":I
    :catch_1
    move-exception v10

    .line 8250
    .local v10, "e":Ljava/io/IOException;
    :try_start_4
    const-string/jumbo v29, "ActivityManager"

    const-string/jumbo v30, "Failed reading Uri grants"

    move-object/from16 v0, v29

    move-object/from16 v1, v30

    invoke-static {v0, v1, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 8254
    invoke-static {v12}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .end local v10    # "e":Ljava/io/IOException;
    .restart local v12    # "fis":Ljava/io/FileInputStream;
    .restart local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v26    # "type":I
    :cond_3
    invoke-static {v12}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .line 8251
    .end local v12    # "fis":Ljava/io/FileInputStream;
    .end local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v26    # "type":I
    :catch_2
    move-exception v11

    .line 8252
    .local v11, "e":Lorg/xmlpull/v1/XmlPullParserException;
    :try_start_5
    const-string/jumbo v29, "ActivityManager"

    const-string/jumbo v30, "Failed reading Uri grants"

    move-object/from16 v0, v29

    move-object/from16 v1, v30

    invoke-static {v0, v1, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 8254
    invoke-static {v12}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .line 8253
    .end local v11    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    :catchall_0
    move-exception v29

    .line 8254
    invoke-static {v12}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    .line 8253
    throw v29

    .line 8232
    .restart local v6    # "createdTime":J
    .restart local v12    # "fis":Ljava/io/FileInputStream;
    .restart local v13    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v14    # "modeFlags":I
    .restart local v18    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v19    # "prefix":Z
    .restart local v20    # "sourcePkg":Ljava/lang/String;
    .restart local v21    # "sourceUserId":I
    .restart local v22    # "tag":Ljava/lang/String;
    .restart local v23    # "targetPkg":Ljava/lang/String;
    .restart local v24    # "targetUid":I
    .restart local v25    # "targetUserId":I
    .restart local v26    # "type":I
    .restart local v27    # "uri":Landroid/net/Uri;
    .restart local v28    # "userHandle":I
    :catch_3
    move-exception v8

    .local v8, "e":Landroid/os/RemoteException;
    goto/16 :goto_2
.end method

.method private static readLastDonePreBootReceivers()Ljava/util/ArrayList;
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;"
        }
    .end annotation

    .prologue
    .line 11738
    new-instance v10, Ljava/util/ArrayList;

    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V

    .line 11739
    .local v10, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v6

    .line 11740
    .local v6, "file":Ljava/io/File;
    const/4 v7, 0x0

    .line 11742
    .local v7, "fis":Ljava/io/FileInputStream;
    :try_start_0
    new-instance v8, Ljava/io/FileInputStream;

    invoke-direct {v8, v6}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_6
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11743
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .local v8, "fis":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v3, Ljava/io/DataInputStream;

    new-instance v14, Ljava/io/BufferedInputStream;

    const/16 v15, 0x800

    invoke-direct {v14, v8, v15}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;I)V

    invoke-direct {v3, v14}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    .line 11744
    .local v3, "dis":Ljava/io/DataInputStream;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I

    move-result v9

    .line 11745
    .local v9, "fvers":I
    const/16 v14, 0x2710

    if-ne v9, v14, :cond_1

    .line 11746
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v13

    .line 11747
    .local v13, "vers":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v2

    .line 11748
    .local v2, "codename":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v0

    .line 11749
    .local v0, "build":Ljava/lang/String;
    sget-object v14, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v14, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_1

    .line 11750
    sget-object v14, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v14, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    .line 11749
    if-eqz v14, :cond_1

    .line 11751
    sget-object v14, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v14, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    .line 11749
    if-eqz v14, :cond_1

    .line 11752
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I

    move-result v11

    .line 11753
    .local v11, "num":I
    :goto_0
    if-lez v11, :cond_1

    .line 11754
    add-int/lit8 v11, v11, -0x1

    .line 11755
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v12

    .line 11756
    .local v12, "pkg":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v1

    .line 11757
    .local v1, "cls":Ljava/lang/String;
    new-instance v14, Landroid/content/ComponentName;

    invoke-direct {v14, v12, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v10, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_7
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    .line 11761
    .end local v0    # "build":Ljava/lang/String;
    .end local v1    # "cls":Ljava/lang/String;
    .end local v2    # "codename":Ljava/lang/String;
    .end local v3    # "dis":Ljava/io/DataInputStream;
    .end local v9    # "fvers":I
    .end local v11    # "num":I
    .end local v12    # "pkg":Ljava/lang/String;
    .end local v13    # "vers":Ljava/lang/String;
    :catch_0
    move-exception v4

    .local v4, "e":Ljava/io/FileNotFoundException;
    move-object v7, v8

    .line 11765
    .end local v8    # "fis":Ljava/io/FileInputStream;
    :goto_1
    if-eqz v7, :cond_0

    .line 11767
    :try_start_2
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4

    .line 11772
    .end local v4    # "e":Ljava/io/FileNotFoundException;
    :cond_0
    :goto_2
    return-object v10

    .line 11765
    .restart local v3    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v9    # "fvers":I
    :cond_1
    if-eqz v8, :cond_2

    .line 11767
    :try_start_3
    invoke-virtual {v8}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    :cond_2
    :goto_3
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .local v7, "fis":Ljava/io/FileInputStream;
    goto :goto_2

    .line 11768
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_1
    move-exception v5

    .local v5, "e":Ljava/io/IOException;
    goto :goto_3

    .line 11762
    .end local v3    # "dis":Ljava/io/DataInputStream;
    .end local v5    # "e":Ljava/io/IOException;
    .end local v8    # "fis":Ljava/io/FileInputStream;
    .end local v9    # "fvers":I
    .local v7, "fis":Ljava/io/FileInputStream;
    :catch_2
    move-exception v5

    .line 11763
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v5    # "e":Ljava/io/IOException;
    :goto_4
    :try_start_4
    const-string/jumbo v14, "ActivityManager"

    const-string/jumbo v15, "Failure reading last done pre-boot receivers"

    invoke-static {v14, v15, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 11765
    if-eqz v7, :cond_0

    .line 11767
    :try_start_5
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    goto :goto_2

    .line 11768
    :catch_3
    move-exception v5

    goto :goto_2

    .end local v5    # "e":Ljava/io/IOException;
    .restart local v4    # "e":Ljava/io/FileNotFoundException;
    :catch_4
    move-exception v5

    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_2

    .line 11764
    .end local v4    # "e":Ljava/io/FileNotFoundException;
    .end local v5    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v14

    .line 11765
    :goto_5
    if-eqz v7, :cond_3

    .line 11767
    :try_start_6
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_5

    .line 11764
    :cond_3
    :goto_6
    throw v14

    .line 11768
    :catch_5
    move-exception v5

    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_6

    .line 11764
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catchall_1
    move-exception v14

    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .local v7, "fis":Ljava/io/FileInputStream;
    goto :goto_5

    .line 11761
    .local v7, "fis":Ljava/io/FileInputStream;
    :catch_6
    move-exception v4

    .restart local v4    # "e":Ljava/io/FileNotFoundException;
    goto :goto_1

    .line 11762
    .end local v4    # "e":Ljava/io/FileNotFoundException;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_7
    move-exception v5

    .restart local v5    # "e":Ljava/io/IOException;
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .local v7, "fis":Ljava/io/FileInputStream;
    goto :goto_4
.end method

.method private removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 10057
    monitor-enter p0

    .line 10058
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, p1, p3}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    .line 10059
    .local v1, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v1, :cond_0

    monitor-exit p0

    .line 10062
    return-void

    .line 10066
    :cond_0
    :try_start_1
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v3, v3, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 10067
    .local v0, "comp":Landroid/content/ComponentName;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, v0, p3}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v2

    .line 10068
    .local v2, "localCpr":Lcom/android/server/am/ContentProviderRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 10069
    invoke-virtual {v2, p2}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 10070
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_0
    monitor-exit p0

    .line 10056
    return-void

    .line 10072
    :cond_1
    :try_start_2
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attmpt to remove content provider "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 10073
    const-string/jumbo v5, " with no external reference for token: "

    .line 10072
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 10074
    const-string/jumbo v5, "."

    .line 10072
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 10057
    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3

    .line 10077
    .restart local v0    # "comp":Landroid/content/ComponentName;
    .restart local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_2
    :try_start_3
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attmpt to remove content provider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 10078
    const-string/jumbo v5, " with no external references."

    .line 10077
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0
.end method

.method private final removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z
    .locals 12
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "always"    # Z

    .prologue
    const/4 v11, 0x1

    .line 15679
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    .line 15681
    .local v4, "inLaunching":Z
    if-eqz v4, :cond_0

    if-eqz p3, :cond_1

    .line 15682
    :cond_0
    monitor-enter p2

    .line 15683
    const/4 v7, 0x0

    :try_start_0
    iput-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 15684
    invoke-virtual {p2}, Lcom/android/server/am/ContentProviderRecord;->notifyAll()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p2

    .line 15686
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    iget-object v8, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget v9, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    invoke-virtual {v7, v8, v9}, Lcom/android/server/am/ProviderMap;->removeProviderByClass(Landroid/content/ComponentName;I)V

    .line 15687
    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v7, v7, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string/jumbo v8, ";"

    invoke-virtual {v7, v8}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    .line 15688
    .local v6, "names":[Ljava/lang/String;
    const/4 v5, 0x0

    .local v5, "j":I
    :goto_0
    array-length v7, v6

    if-ge v5, v7, :cond_1

    .line 15689
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v8, v6, v5

    iget v9, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    invoke-virtual {v7, v8, v9}, Lcom/android/server/am/ProviderMap;->removeProviderByName(Ljava/lang/String;I)V

    .line 15688
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 15682
    .end local v5    # "j":I
    .end local v6    # "names":[Ljava/lang/String;
    :catchall_0
    move-exception v7

    monitor-exit p2

    throw v7

    .line 15693
    :cond_1
    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v3, v7, -0x1

    .local v3, "i":I
    :goto_1
    if-ltz v3, :cond_6

    .line 15694
    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderConnection;

    .line 15695
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-boolean v7, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    if-eqz v7, :cond_2

    .line 15699
    if-eqz v4, :cond_2

    if-eqz p3, :cond_3

    .line 15703
    :cond_2
    iget-object v0, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 15704
    .local v0, "capp":Lcom/android/server/am/ProcessRecord;
    iput-boolean v11, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    .line 15705
    iget v7, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-lez v7, :cond_5

    .line 15706
    iget-boolean v7, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v7, :cond_3

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_3

    .line 15707
    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v7, :cond_3

    .line 15708
    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v8, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v7, v8, :cond_3

    .line 15709
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "depends on provider "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 15710
    iget-object v8, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v8}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v8

    .line 15709
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 15711
    const-string/jumbo v8, " in dying proc "

    .line 15709
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 15711
    if-eqz p1, :cond_4

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 15709
    :goto_2
    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v0, v7, v11}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 15693
    .end local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :goto_3
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 15711
    .restart local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    :cond_4
    const-string/jumbo v7, "??"

    goto :goto_2

    .line 15713
    :cond_5
    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_3

    iget-object v7, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v7, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eqz v7, :cond_3

    .line 15715
    :try_start_1
    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v8, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v8, v8, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    invoke-interface {v8}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-interface {v7, v8}, Landroid/app/IApplicationThread;->unstableProviderDied(Landroid/os/IBinder;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 15720
    :goto_4
    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 15721
    iget-object v7, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v7, v7, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v7, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_3

    .line 15722
    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v9, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v10, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    goto :goto_3

    .line 15727
    .end local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_6
    if-eqz v4, :cond_7

    if-eqz p3, :cond_7

    .line 15728
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15730
    :cond_7
    return v4

    .line 15716
    .restart local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_4
.end method

.method private final removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerWillRestart"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v10, 0x0

    const/4 v9, 0x0

    .line 6072
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 6073
    .local v0, "name":Ljava/lang/String;
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 6077
    .local v3, "uid":I
    invoke-direct {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 6078
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_0

    .line 6079
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 6080
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 6079
    const/16 v8, 0x19

    invoke-virtual {v6, v8, v7, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6081
    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 6083
    :cond_0
    const/4 v1, 0x0

    .line 6084
    .local v1, "needRestart":Z
    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v5, :cond_6

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v5, v6, :cond_6

    .line 6085
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 6086
    .local v2, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6

    .line 6087
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 6088
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    invoke-virtual {v5, v7, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v6

    .line 6090
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 6091
    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_1

    .line 6092
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 6094
    :cond_1
    const/4 v4, 0x0

    .line 6095
    .local v4, "willRestart":Z
    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v5, :cond_2

    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_4

    .line 6102
    :cond_2
    :goto_0
    const/4 v5, 0x1

    invoke-virtual {p1, p4, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 6103
    invoke-direct {p0, p1, v4, p3}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6104
    if-eqz v4, :cond_3

    .line 6105
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6106
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v5, v9, v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    .line 6112
    .end local v2    # "pid":I
    .end local v4    # "willRestart":Z
    :cond_3
    :goto_1
    return v1

    .line 6086
    .restart local v2    # "pid":I
    :catchall_0
    move-exception v5

    monitor-exit v6

    throw v5

    .line 6096
    .restart local v4    # "willRestart":Z
    :cond_4
    if-nez p2, :cond_5

    .line 6097
    const/4 v4, 0x1

    goto :goto_0

    .line 6099
    :cond_5
    const/4 v1, 0x1

    goto :goto_0

    .line 6109
    .end local v2    # "pid":I
    .end local v4    # "willRestart":Z
    :cond_6
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1
.end method

.method private final removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    const/4 v3, 0x0

    .line 6027
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 6028
    .local v0, "old":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_1

    .line 6029
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    add-int/lit8 v2, v2, -0x1

    iput v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 6030
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget v1, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    if-nez v1, :cond_0

    .line 6034
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 v2, 0x1

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 6035
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 6037
    :cond_0
    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 6039
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 6040
    return-object v0
.end method

.method private removeTaskByIdLocked(IZ)Z
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x1

    const/4 v4, 0x0

    .line 8959
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1, v4}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 8960
    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_1

    .line 8961
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->removeTaskActivitiesLocked()V

    .line 8962
    invoke-direct {p0, v0, p2}, Lcom/android/server/am/ActivityManagerService;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 8963
    iget-boolean v1, v0, Lcom/android/server/am/TaskRecord;->isPersistable:Z

    if-eqz v1, :cond_0

    .line 8964
    invoke-virtual {p0, v3, v2}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 8966
    :cond_0
    return v2

    .line 8968
    :cond_1
    const-string/jumbo v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Request to remove task ignored for non-existent task "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8969
    return v4
.end method

.method private removeTasksByPackageNameLocked(Ljava/lang/String;I)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8921
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 8922
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/TaskRecord;

    .line 8923
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    iget v3, v2, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v3, p2, :cond_1

    .line 8921
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 8925
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8926
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 8928
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v4, 0x1

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1

    .line 8919
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    return-void
.end method

.method private removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I
    .param p3, "persistable"    # Z

    .prologue
    const/4 v8, -0x1

    .line 8027
    if-ne p2, v8, :cond_0

    if-nez p1, :cond_0

    .line 8028
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v8, "Must narrow by either package or user"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 8031
    :cond_0
    const/4 v5, 0x0

    .line 8033
    .local v5, "persistChanged":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 8034
    .local v0, "N":I
    const/4 v1, 0x0

    .end local v5    # "persistChanged":Z
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_7

    .line 8035
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    .line 8036
    .local v6, "targetUid":I
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    .line 8039
    .local v4, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eq p2, v8, :cond_1

    .line 8040
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne p2, v7, :cond_6

    .line 8041
    :cond_1
    invoke-virtual {v4}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 8042
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 8045
    .local v3, "perm":Lcom/android/server/am/UriPermission;
    if-eqz p1, :cond_3

    iget-object v7, v3, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_3

    .line 8046
    iget-object v7, v3, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    .line 8045
    if-eqz v7, :cond_2

    .line 8047
    :cond_3
    if-eqz p3, :cond_4

    move v7, v8

    .line 8048
    :goto_2
    const/4 v9, 0x1

    .line 8047
    invoke-virtual {v3, v7, v9}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v7

    or-int/2addr v5, v7

    .line 8052
    .local v5, "persistChanged":Z
    iget v7, v3, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v7, :cond_2

    .line 8053
    invoke-interface {v2}, Ljava/util/Iterator;->remove()V

    goto :goto_1

    .line 8048
    .end local v5    # "persistChanged":Z
    :cond_4
    const/16 v7, -0x41

    goto :goto_2

    .line 8058
    .end local v3    # "perm":Lcom/android/server/am/UriPermission;
    :cond_5
    invoke-virtual {v4}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_6

    .line 8059
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseArray;->remove(I)V

    .line 8060
    add-int/lit8 v0, v0, -0x1

    .line 8061
    add-int/lit8 v1, v1, -0x1

    .line 8034
    .end local v2    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 8066
    .end local v4    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v6    # "targetUid":I
    :cond_7
    if-eqz v5, :cond_8

    .line 8067
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 8026
    :cond_8
    return-void
.end method

.method private reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 4
    .param p1, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p2, "cn"    # Landroid/content/ComponentName;
    .param p3, "report"    # Ljava/lang/String;

    .prologue
    .line 17445
    const-string/jumbo v2, "ActivityManager"

    invoke-static {v2, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17447
    if-eqz p1, :cond_0

    .line 17448
    :try_start_0
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 17449
    .local v1, "results":Landroid/os/Bundle;
    const-string/jumbo v2, "id"

    const-string/jumbo v3, "ActivityManagerService"

    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 17450
    const-string/jumbo v2, "Error"

    invoke-virtual {v1, v2, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 17451
    const/4 v2, -0x1

    invoke-interface {p1, p2, v2, v1}, Landroid/app/IInstrumentationWatcher;->instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 17444
    .end local v1    # "results":Landroid/os/Bundle;
    :cond_0
    :goto_0
    return-void

    .line 17453
    :catch_0
    move-exception v0

    .line 17454
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_0
.end method

.method private resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;
    .locals 6
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "flags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 3630
    const/4 v0, 0x0

    .line 3631
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 3633
    .local v1, "comp":Landroid/content/ComponentName;
    if-eqz v1, :cond_1

    .line 3635
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4, v1, p2, p3}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 3650
    .end local v0    # "ai":Landroid/content/pm/ActivityInfo;
    :cond_0
    :goto_0
    return-object v0

    .line 3637
    .restart local v0    # "ai":Landroid/content/pm/ActivityInfo;
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 3639
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    invoke-virtual {p1, v5}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v5

    .line 3637
    invoke-interface {v4, p1, v5, p2, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v3

    .line 3642
    .local v3, "info":Landroid/content/pm/ResolveInfo;
    if-eqz v3, :cond_0

    .line 3643
    iget-object v0, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    goto :goto_0

    .line 3646
    .end local v3    # "info":Landroid/content/pm/ResolveInfo;
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    :catch_0
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private final resumedAppLocked()Lcom/android/server/am/ActivityRecord;
    .locals 7

    .prologue
    .line 19287
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 19290
    .local v0, "act":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_1

    .line 19291
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 19292
    .local v1, "pkg":Ljava/lang/String;
    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19298
    .end local v1    # "pkg":Ljava/lang/String;
    .local v2, "uid":I
    :goto_0
    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v2, v3, :cond_2

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v1, v3, :cond_0

    .line 19299
    if-eqz v1, :cond_2

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 19311
    :cond_0
    :goto_1
    return-object v0

    .line 19294
    .end local v2    # "uid":I
    :cond_1
    const/4 v1, 0x0

    .line 19295
    .local v1, "pkg":Ljava/lang/String;
    const/4 v2, -0x1

    .restart local v2    # "uid":I
    goto :goto_0

    .line 19300
    .end local v1    # "pkg":Ljava/lang/String;
    :cond_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_3

    .line 19301
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 19302
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 19301
    const/16 v6, 0x4003

    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 19304
    :cond_3
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 19305
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 19306
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_0

    .line 19307
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 19308
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 19307
    const v6, 0x8003

    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    goto :goto_1
.end method

.method private retrieveSettings()V
    .locals 9

    .prologue
    const/4 v7, 0x0

    .line 11686
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    .line 11688
    .local v4, "resolver":Landroid/content/ContentResolver;
    const-string/jumbo v6, "debug_app"

    .line 11687
    invoke-static {v4, v6}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 11690
    .local v2, "debugApp":Ljava/lang/String;
    const-string/jumbo v6, "wait_for_debugger"

    .line 11689
    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v6

    if-eqz v6, :cond_1

    const/4 v5, 0x1

    .line 11692
    .local v5, "waitForDebugger":Z
    :goto_0
    const-string/jumbo v6, "always_finish_activities"

    .line 11691
    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v6

    if-eqz v6, :cond_2

    const/4 v0, 0x1

    .line 11694
    .local v0, "alwaysFinishActivities":Z
    :goto_1
    const-string/jumbo v6, "debug.force_rtl"

    .line 11693
    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v6

    if-eqz v6, :cond_3

    const/4 v3, 0x1

    .line 11696
    .local v3, "forceRtl":Z
    :goto_2
    const-string/jumbo v7, "debug.force_rtl"

    if-eqz v3, :cond_4

    const-string/jumbo v6, "1"

    :goto_3
    invoke-static {v7, v6}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 11698
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V

    .line 11699
    .local v1, "configuration":Landroid/content/res/Configuration;
    invoke-static {v4, v1}, Landroid/provider/Settings$System;->getConfiguration(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V

    .line 11700
    if-eqz v3, :cond_0

    .line 11702
    iget-object v6, v1, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v1, v6}, Landroid/content/res/Configuration;->setLayoutDirection(Ljava/util/Locale;)V

    .line 11705
    :cond_0
    monitor-enter p0

    .line 11706
    :try_start_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 11707
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 11708
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 11711
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    invoke-virtual {p0, v1, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 11685
    return-void

    .line 11689
    .end local v0    # "alwaysFinishActivities":Z
    .end local v1    # "configuration":Landroid/content/res/Configuration;
    .end local v3    # "forceRtl":Z
    .end local v5    # "waitForDebugger":Z
    :cond_1
    const/4 v5, 0x0

    .restart local v5    # "waitForDebugger":Z
    goto :goto_0

    .line 11691
    :cond_2
    const/4 v0, 0x0

    .restart local v0    # "alwaysFinishActivities":Z
    goto :goto_1

    .line 11693
    :cond_3
    const/4 v3, 0x0

    .restart local v3    # "forceRtl":Z
    goto :goto_2

    .line 11696
    :cond_4
    const-string/jumbo v6, "0"

    goto :goto_3

    .line 11705
    .restart local v1    # "configuration":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v6

    monitor-exit p0

    throw v6
.end method

.method private revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V
    .locals 15
    .param p1, "callingUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p3, "modeFlags"    # I

    .prologue
    .line 7905
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 7906
    .local v2, "pm":Landroid/content/pm/IPackageManager;
    move-object/from16 v0, p2

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v8

    .line 7907
    .local v8, "authority":Ljava/lang/String;
    move-object/from16 v0, p2

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v8, v1}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v3

    .line 7908
    .local v3, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v3, :cond_0

    .line 7909
    const-string/jumbo v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 7910
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    .line 7909
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7911
    return-void

    :cond_0
    move-object v1, p0

    move-object/from16 v4, p2

    move/from16 v5, p1

    move/from16 v6, p3

    .line 7915
    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v1

    if-nez v1, :cond_5

    .line 7918
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 7919
    .local v12, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v12, :cond_4

    .line 7920
    const/4 v13, 0x0

    .line 7921
    .local v13, "persistChanged":Z
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .end local v13    # "persistChanged":Z
    .local v10, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_1
    :goto_0
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 7922
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 7923
    .local v11, "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_1

    .line 7924
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    .line 7923
    if-eqz v1, :cond_1

    .line 7929
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x0

    .line 7928
    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 7930
    .local v13, "persistChanged":Z
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_1

    .line 7931
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_0

    .line 7935
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    .end local v13    # "persistChanged":Z
    :cond_2
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 7936
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 7938
    :cond_3
    if-eqz v13, :cond_4

    .line 7939
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 7942
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_4
    return-void

    .line 7945
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_5
    const/4 v13, 0x0

    .line 7948
    .local v13, "persistChanged":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 7949
    .local v7, "N":I
    const/4 v9, 0x0

    .end local v13    # "persistChanged":Z
    .local v9, "i":I
    :goto_1
    if-ge v9, v7, :cond_9

    .line 7950
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v14

    .line 7951
    .local v14, "targetUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 7953
    .restart local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .restart local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    :goto_2
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7

    .line 7954
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 7955
    .restart local v11    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_6

    .line 7956
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    .line 7955
    if-eqz v1, :cond_6

    .line 7960
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x1

    .line 7959
    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 7961
    .local v13, "persistChanged":Z
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_6

    .line 7962
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_2

    .line 7967
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    .end local v13    # "persistChanged":Z
    :cond_7
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7968
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v14}, Landroid/util/SparseArray;->remove(I)V

    .line 7969
    add-int/lit8 v7, v7, -0x1

    .line 7970
    add-int/lit8 v9, v9, -0x1

    .line 7949
    :cond_8
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 7974
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v14    # "targetUid":I
    :cond_9
    if-eqz v13, :cond_a

    .line 7975
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 7901
    :cond_a
    return-void
.end method

.method private saveThemeResourceLocked(Landroid/content/res/ThemeConfig;Z)V
    .locals 4
    .param p1, "t"    # Landroid/content/res/ThemeConfig;
    .param p2, "isDiff"    # Z

    .prologue
    .line 17802
    if-eqz p2, :cond_0

    .line 17803
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 17804
    const-string/jumbo v1, "themeConfig"

    invoke-virtual {p1}, Landroid/content/res/ThemeConfig;->toJson()Ljava/lang/String;

    move-result-object v2

    .line 17805
    const/4 v3, -0x2

    .line 17803
    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z

    .line 17801
    :cond_0
    return-void
.end method

.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p0, "args"    # [Ljava/lang/String;
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 15667
    if-eqz p0, :cond_1

    .line 15668
    array-length v3, p0

    move v1, v2

    :goto_0
    if-ge v1, v3, :cond_1

    aget-object v0, p0, v1

    .line 15669
    .local v0, "arg":Ljava/lang/String;
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 15670
    const/4 v1, 0x1

    return v1

    .line 15668
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15674
    .end local v0    # "arg":Ljava/lang/String;
    :cond_1
    return v2
.end method

.method private schedulePersistUriGrants()V
    .locals 4

    .prologue
    const/16 v2, 0x26

    .line 8135
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 8136
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 8137
    const-wide/16 v2, 0x2710

    .line 8136
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 8134
    :cond_0
    return-void
.end method

.method private sendAppFailureBroadcast(Ljava/lang/String;)V
    .locals 4
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    const/4 v1, 0x0

    .line 12205
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v2, "com.tmobile.intent.action.APP_FAILURE"

    .line 12206
    if-eqz p1, :cond_0

    const-string/jumbo v3, "package"

    invoke-static {v3, p1, v1}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    .line 12205
    :cond_0
    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 12207
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 12204
    return-void
.end method

.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 4
    .param p1, "cmd"    # I
    .param p2, "packages"    # [Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 16647
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 16648
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 16649
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    const/4 v3, -0x1

    if-eq p3, v3, :cond_0

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v3, p3, :cond_1

    .line 16651
    :cond_0
    :try_start_0
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p1, p2}, Landroid/app/IApplicationThread;->dispatchPackageBroadcast(I[Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16647
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 16646
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    return-void

    .line 16652
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v0

    .local v0, "ex":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method private final setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V
    .locals 7
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "memFactor"    # I
    .param p3, "now"    # J

    .prologue
    .line 19230
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1

    .line 19231
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v0, :cond_0

    .line 19232
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move v3, p2

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/app/ProcessStats$ProcessState;->setState(IIJLandroid/util/ArrayMap;)V

    .line 19234
    :cond_0
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    if-ltz v0, :cond_1

    .line 19235
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19236
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    .line 19235
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteProcessState(Ljava/lang/String;II)V

    .line 19229
    :cond_1
    return-void
.end method

.method private static final shouldShowDialogs(Landroid/content/res/Configuration;)Z
    .locals 2
    .param p0, "config"    # Landroid/content/res/Configuration;

    .prologue
    const/4 v0, 0x1

    .line 17751
    iget v1, p0, Landroid/content/res/Configuration;->keyboard:I

    if-ne v1, v0, :cond_0

    .line 17752
    iget v1, p0, Landroid/content/res/Configuration;->touchscreen:I

    if-eq v1, v0, :cond_1

    .line 17751
    :cond_0
    :goto_0
    return v0

    .line 17753
    :cond_1
    iget v1, p0, Landroid/content/res/Configuration;->navigation:I

    if-ne v1, v0, :cond_0

    const/4 v0, 0x0

    goto :goto_0
.end method

.method private shouldSleepLocked()Z
    .locals 3

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 10554
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v2, :cond_0

    .line 10555
    return v1

    .line 10559
    :cond_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    packed-switch v2, :pswitch_data_0

    .line 10569
    return v0

    .line 10565
    :pswitch_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    if-nez v2, :cond_1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_1

    move v0, v1

    :cond_1
    return v0

    .line 10559
    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method private showUserSwitchDialog(ILjava/lang/String;)V
    .locals 6
    .param p1, "userId"    # I
    .param p2, "userName"    # Ljava/lang/String;

    .prologue
    .line 20166
    new-instance v0, Lcom/android/server/am/UserSwitchingDialog;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 20167
    const/4 v5, 0x1

    move-object v1, p0

    move v3, p1

    move-object v4, p2

    .line 20166
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/UserSwitchingDialog;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;ILjava/lang/String;Z)V

    .line 20168
    .local v0, "d":Landroid/app/Dialog;
    invoke-virtual {v0}, Landroid/app/Dialog;->show()V

    .line 20164
    return-void
.end method

.method private start()V
    .locals 3

    .prologue
    .line 2530
    invoke-static {}, Landroid/os/Process;->removeAllProcessGroups()V

    .line 2531
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    .line 2533
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/am/BatteryStatsService;->publish(Landroid/content/Context;)V

    .line 2534
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/AppOpsService;->publish(Landroid/content/Context;)V

    .line 2535
    const-string/jumbo v0, "AppOps"

    const-string/jumbo v1, "AppOpsService published"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2536
    const-class v0, Landroid/app/ActivityManagerInternal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$LocalService;

    const/4 v2, 0x0

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityManagerService$LocalService;)V

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2529
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    .line 3348
    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 3347
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
    .locals 34
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "entryPoint"    # Ljava/lang/String;
    .param p6, "entryPointArgs"    # [Ljava/lang/String;

    .prologue
    .line 3354
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v30

    .line 3355
    .local v30, "startTime":J
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v4, :cond_0

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v4, v5, :cond_0

    .line 3356
    const-string/jumbo v4, "startProcess: removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3357
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 3358
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->remove(I)V

    .line 3359
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    move-object/from16 v0, p1

    invoke-virtual {v4, v7, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v5

    .line 3361
    const-string/jumbo v4, "startProcess: done removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3362
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 3367
    :cond_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3369
    const-string/jumbo v4, "startProcess: starting to update cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3370
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V

    .line 3371
    const-string/jumbo v4, "startProcess: done updating cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3375
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v4, v5}, Landroid/content/pm/IPackageManager;->isPackageFrozen(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 3377
    new-instance v4, Ljava/lang/RuntimeException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Package "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v7, " is frozen!"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_1

    .line 3379
    :catch_0
    move-exception v19

    .line 3380
    .local v19, "e":Landroid/os/RemoteException;
    :try_start_2
    invoke-virtual/range {v19 .. v19}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v4

    throw v4
    :try_end_2
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_1

    .line 3548
    .end local v19    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v20

    .line 3550
    .local v20, "e":Ljava/lang/RuntimeException;
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 3551
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 3552
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_1

    .line 3553
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 3555
    :cond_1
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Failure starting process "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v20

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3353
    .end local v20    # "e":Ljava/lang/RuntimeException;
    :goto_0
    return-void

    .line 3357
    :catchall_0
    move-exception v4

    monitor-exit v5

    throw v4

    .line 3383
    :cond_2
    :try_start_3
    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 3384
    .local v6, "uid":I
    const/4 v8, 0x0

    .line 3385
    .local v8, "gids":[I
    const/4 v10, 0x0

    .line 3386
    .local v10, "mountExternal":I
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_1

    if-nez v4, :cond_3

    .line 3387
    const/16 v26, 0x0

    .line 3389
    .local v26, "permGids":[I
    :try_start_4
    const-string/jumbo v4, "startProcess: getting gids from package manager"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3390
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v27

    .line 3391
    .local v27, "pm":Landroid/content/pm/IPackageManager;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move-object/from16 v0, v27

    invoke-interface {v0, v4, v5}, Landroid/content/pm/IPackageManager;->getPackageGids(Ljava/lang/String;I)[I

    move-result-object v26

    .line 3393
    .local v26, "permGids":[I
    const-class v4, Landroid/os/storage/MountServiceInternal;

    .line 3392
    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Landroid/os/storage/MountServiceInternal;

    .line 3395
    .local v24, "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 3394
    move-object/from16 v0, v24

    invoke-virtual {v0, v6, v4}, Landroid/os/storage/MountServiceInternal;->getExternalStorageMountMode(ILjava/lang/String;)I
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_2
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_1

    move-result v10

    .line 3404
    :try_start_5
    invoke-static/range {v26 .. v26}, Lcom/android/internal/util/ArrayUtils;->isEmpty([I)Z

    move-result v4

    if-eqz v4, :cond_17

    .line 3405
    const/4 v4, 0x2

    new-array v8, v4, [I

    .line 3410
    .local v8, "gids":[I
    :goto_1
    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getSharedAppGid(I)I

    move-result v4

    const/4 v5, 0x0

    aput v4, v8, v5

    .line 3411
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getUserGid(I)I

    move-result v4

    const/4 v5, 0x1

    aput v4, v8, v5

    .line 3413
    .end local v8    # "gids":[I
    .end local v24    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    .end local v26    # "permGids":[I
    .end local v27    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    const-string/jumbo v4, "startProcess: building args"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3414
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-eqz v4, :cond_5

    .line 3415
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_4

    .line 3416
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    if-eqz v4, :cond_4

    .line 3417
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    .line 3415
    if-eqz v4, :cond_4

    .line 3418
    const/4 v6, 0x0

    .line 3420
    :cond_4
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_5

    .line 3421
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-eqz v4, :cond_5

    .line 3422
    const/4 v6, 0x0

    .line 3425
    :cond_5
    const/4 v9, 0x0

    .line 3426
    .local v9, "debugFlags":I
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_6

    .line 3427
    const/4 v9, 0x1

    .line 3430
    or-int/lit8 v9, v9, 0x2

    .line 3434
    :cond_6
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v4, v4, 0x4000

    if-nez v4, :cond_7

    .line 3435
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    if-eqz v4, :cond_8

    .line 3436
    :cond_7
    or-int/lit8 v9, v9, 0x8

    .line 3438
    :cond_8
    const-string/jumbo v4, "1"

    const-string/jumbo v5, "debug.checkjni"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 3439
    or-int/lit8 v9, v9, 0x2

    .line 3441
    :cond_9
    const-string/jumbo v4, "debug.usejit"

    invoke-static {v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v23

    .line 3442
    .local v23, "jitDebugProperty":Ljava/lang/String;
    const-string/jumbo v4, "true"

    move-object/from16 v0, v23

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_18

    .line 3443
    or-int/lit8 v9, v9, 0x20

    .line 3450
    :cond_a
    :goto_2
    const-string/jumbo v4, "debug.generate-debug-info"

    invoke-static {v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v21

    .line 3451
    .local v21, "genDebugInfoProperty":Ljava/lang/String;
    const-string/jumbo v4, "true"

    move-object/from16 v0, v21

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 3452
    or-int/lit8 v9, v9, 0x40

    .line 3454
    :cond_b
    const-string/jumbo v4, "1"

    const-string/jumbo v5, "debug.jni.logging"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 3455
    or-int/lit8 v9, v9, 0x10

    .line 3457
    :cond_c
    const-string/jumbo v4, "1"

    const-string/jumbo v5, "debug.assert"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 3458
    or-int/lit8 v9, v9, 0x4

    .line 3462
    :cond_d
    const/16 v16, 0x0

    .line 3463
    .local v16, "refreshTheme":Z
    const-string/jumbo v4, "sys.refresh_theme"

    const/4 v5, 0x0

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v4

    if-eqz v4, :cond_e

    .line 3464
    const-string/jumbo v4, "sys.refresh_theme"

    const-string/jumbo v5, "false"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 3465
    const/16 v16, 0x1

    .line 3468
    :cond_e
    if-eqz p4, :cond_19

    move-object/from16 v13, p4

    .line 3469
    .local v13, "requiredAbi":Ljava/lang/String;
    :goto_3
    if-nez v13, :cond_f

    .line 3470
    sget-object v4, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    const/4 v5, 0x0

    aget-object v13, v4, v5

    .line 3473
    :cond_f
    const/4 v14, 0x0

    .line 3474
    .local v14, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    if-eqz v4, :cond_10

    .line 3475
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    invoke-static {v4}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    .line 3478
    .end local v14    # "instructionSet":Ljava/lang/String;
    :cond_10
    move-object/from16 v0, p1

    iput-object v8, v0, Lcom/android/server/am/ProcessRecord;->gids:[I

    .line 3479
    move-object/from16 v0, p1

    iput-object v13, v0, Lcom/android/server/am/ProcessRecord;->requiredAbi:Ljava/lang/String;

    .line 3480
    move-object/from16 v0, p1

    iput-object v14, v0, Lcom/android/server/am/ProcessRecord;->instructionSet:Ljava/lang/String;

    .line 3484
    if-nez p5, :cond_1a

    const/16 v22, 0x1

    .line 3485
    .local v22, "isActivityProcess":Z
    :goto_4
    if-nez p5, :cond_11

    const-string/jumbo p5, "android.app.ActivityThread"

    .line 3486
    :cond_11
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Start proc: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 3487
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 3486
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-wide/16 v32, 0x40

    move-wide/from16 v0, v32

    invoke-static {v0, v1, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 3488
    const-string/jumbo v4, "startProcess: asking zygote to start proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3490
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 3491
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v4, Landroid/content/pm/ApplicationInfo;->seinfo:Ljava/lang/String;

    .line 3492
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v4, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    move-object/from16 v4, p5

    move v7, v6

    move-object/from16 v17, p6

    .line 3489
    invoke-static/range {v4 .. v17}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v28

    .line 3493
    .local v28, "startResult":Landroid/os/Process$ProcessStartResult;
    const-string/jumbo v4, "startProcess: returned from zygote!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3494
    const-wide/16 v4, 0x40

    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 3496
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_12

    .line 3497
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->addIsolatedUid(II)V

    .line 3499
    :cond_12
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessStart(Ljava/lang/String;I)V

    .line 3500
    const-string/jumbo v4, "startProcess: done updating battery stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3502
    const/4 v4, 0x6

    new-array v5, v4, [Ljava/lang/Object;

    .line 3503
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v7, 0x0

    aput-object v4, v5, v7

    move-object/from16 v0, v28

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v7, 0x1

    aput-object v4, v5, v7

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v7, 0x2

    aput-object v4, v5, v7

    .line 3504
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v7, 0x3

    aput-object v4, v5, v7

    const/4 v4, 0x4

    aput-object p2, v5, v4

    .line 3505
    if-eqz p3, :cond_1b

    move-object/from16 v4, p3

    :goto_5
    const/4 v7, 0x5

    aput-object v4, v5, v7

    .line 3502
    const/16 v4, 0x753e

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 3507
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_13

    .line 3508
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v28

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/Watchdog;->processStarted(Ljava/lang/String;I)V

    .line 3511
    :cond_13
    const-string/jumbo v4, "startProcess: building log message"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3512
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    move-object/from16 v18, v0

    .line 3513
    .local v18, "buf":Ljava/lang/StringBuilder;
    const/4 v4, 0x0

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 3514
    const-string/jumbo v4, "Start proc "

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3515
    move-object/from16 v0, v28

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3516
    const/16 v4, 0x3a

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 3517
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3518
    const/16 v4, 0x2f

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 3519
    move-object/from16 v0, v18

    invoke-static {v0, v6}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 3520
    if-nez v22, :cond_14

    .line 3521
    const-string/jumbo v4, " ["

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3522
    move-object/from16 v0, v18

    move-object/from16 v1, p5

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3523
    const-string/jumbo v4, "]"

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3525
    :cond_14
    const-string/jumbo v4, " for "

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3526
    move-object/from16 v0, v18

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3527
    if-eqz p3, :cond_15

    .line 3528
    const-string/jumbo v4, " "

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3529
    move-object/from16 v0, v18

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3531
    :cond_15
    const-string/jumbo v4, "ActivityManager"

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3532
    move-object/from16 v0, v28

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 3533
    move-object/from16 v0, v28

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 3534
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 3535
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 3536
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 3537
    const-string/jumbo v4, "startProcess: starting to update pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3538
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_1

    .line 3539
    :try_start_6
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, v28

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v4, v7, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3540
    if-eqz v22, :cond_16

    .line 3541
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    invoke-virtual {v4, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v25

    .line 3542
    .local v25, "msg":Landroid/os/Message;
    move-object/from16 v0, p1

    move-object/from16 v1, v25

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 3543
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v28

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    if-eqz v4, :cond_1c

    .line 3544
    const v4, 0x124f80

    .line 3543
    :goto_6
    int-to-long v0, v4

    move-wide/from16 v32, v0

    move-object/from16 v0, v25

    move-wide/from16 v1, v32

    invoke-virtual {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .end local v25    # "msg":Landroid/os/Message;
    :cond_16
    :try_start_7
    monitor-exit v5

    .line 3547
    const-string/jumbo v4, "startProcess: done updating pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v30

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto/16 :goto_0

    .line 3396
    .end local v9    # "debugFlags":I
    .end local v13    # "requiredAbi":Ljava/lang/String;
    .end local v16    # "refreshTheme":Z
    .end local v18    # "buf":Ljava/lang/StringBuilder;
    .end local v21    # "genDebugInfoProperty":Ljava/lang/String;
    .end local v22    # "isActivityProcess":Z
    .end local v23    # "jitDebugProperty":Ljava/lang/String;
    .end local v28    # "startResult":Landroid/os/Process$ProcessStartResult;
    .local v8, "gids":[I
    :catch_2
    move-exception v19

    .line 3397
    .restart local v19    # "e":Landroid/os/RemoteException;
    invoke-virtual/range {v19 .. v19}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v4

    throw v4

    .line 3407
    .end local v19    # "e":Landroid/os/RemoteException;
    .restart local v24    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    .restart local v26    # "permGids":[I
    .restart local v27    # "pm":Landroid/content/pm/IPackageManager;
    :cond_17
    move-object/from16 v0, v26

    array-length v4, v0

    add-int/lit8 v4, v4, 0x2

    new-array v8, v4, [I

    .line 3408
    .local v8, "gids":[I
    move-object/from16 v0, v26

    array-length v4, v0

    const/4 v5, 0x0

    const/4 v7, 0x2

    move-object/from16 v0, v26

    invoke-static {v0, v5, v8, v7, v4}, Ljava/lang/System;->arraycopy([II[III)V

    goto/16 :goto_1

    .line 3444
    .end local v8    # "gids":[I
    .end local v24    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    .end local v26    # "permGids":[I
    .end local v27    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v9    # "debugFlags":I
    .restart local v23    # "jitDebugProperty":Ljava/lang/String;
    :cond_18
    const-string/jumbo v4, "false"

    move-object/from16 v0, v23

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    .line 3446
    const-string/jumbo v4, "true"

    const-string/jumbo v5, "dalvik.vm.usejit"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 3447
    or-int/lit8 v9, v9, 0x20

    goto/16 :goto_2

    .line 3468
    .restart local v16    # "refreshTheme":Z
    .restart local v21    # "genDebugInfoProperty":Ljava/lang/String;
    :cond_19
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v13, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    .restart local v13    # "requiredAbi":Ljava/lang/String;
    goto/16 :goto_3

    .line 3484
    :cond_1a
    const/16 v22, 0x0

    .restart local v22    # "isActivityProcess":Z
    goto/16 :goto_4

    .line 3505
    .restart local v28    # "startResult":Landroid/os/Process$ProcessStartResult;
    :cond_1b
    const-string/jumbo v4, ""

    goto/16 :goto_5

    .line 3544
    .restart local v18    # "buf":Ljava/lang/StringBuilder;
    .restart local v25    # "msg":Landroid/os/Message;
    :cond_1c
    const/16 v4, 0x2710

    goto :goto_6

    .line 3538
    .end local v25    # "msg":Landroid/os/Message;
    :catchall_1
    move-exception v4

    monitor-exit v5

    throw v4
    :try_end_7
    .catch Ljava/lang/RuntimeException; {:try_start_7 .. :try_end_7} :catch_1
.end method

.method private startUser(IZ)Z
    .locals 35
    .param p1, "userId"    # I
    .param p2, "foreground"    # Z

    .prologue
    .line 20172
    const-string/jumbo v4, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 20174
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Permission Denial: switchUser() from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 20175
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 20174
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 20176
    const-string/jumbo v5, ", uid="

    .line 20174
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 20176
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 20174
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 20177
    const-string/jumbo v5, " requires "

    .line 20174
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 20177
    const-string/jumbo v5, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 20174
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    .line 20178
    .local v27, "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v27

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20179
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v27

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 20184
    .end local v27    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 20186
    .local v28, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 20187
    :try_start_1
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v31, v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20188
    .local v31, "oldUserId":I
    move/from16 v0, v31

    move/from16 v1, p1

    if-ne v0, v1, :cond_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 20189
    const/4 v4, 0x1

    .line 20332
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20189
    return v4

    .line 20192
    :cond_1
    :try_start_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 20193
    const-string/jumbo v5, "startUser"

    .line 20192
    const/4 v6, 0x0

    const/4 v8, 0x0

    .line 20193
    const/4 v9, 0x0

    .line 20192
    invoke-virtual {v4, v6, v8, v5, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V

    .line 20195
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v33

    .line 20196
    .local v33, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v33, :cond_2

    .line 20197
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "No user info for user #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 20198
    const/4 v4, 0x0

    .line 20332
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20198
    return v4

    .line 20200
    :cond_2
    if-eqz p2, :cond_3

    :try_start_5
    invoke-virtual/range {v33 .. v33}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 20201
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Cannot switch to User #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, ": not a full user"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 20202
    const/4 v4, 0x0

    .line 20332
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20202
    return v4

    .line 20205
    :cond_3
    if-eqz p2, :cond_4

    .line 20206
    :try_start_7
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const v5, 0x10a0063

    .line 20207
    const v6, 0x10a0062

    .line 20206
    invoke-virtual {v4, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingScreen(II)V

    .line 20210
    :cond_4
    const/16 v30, 0x0

    .line 20214
    .local v30, "needStart":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    if-nez v4, :cond_5

    .line 20215
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    new-instance v5, Lcom/android/server/am/UserState;

    new-instance v6, Landroid/os/UserHandle;

    move/from16 v0, p1

    invoke-direct {v6, v0}, Landroid/os/UserHandle;-><init>(I)V

    const/4 v8, 0x0

    invoke-direct {v5, v6, v8}, Lcom/android/server/am/UserState;-><init>(Landroid/os/UserHandle;Z)V

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 20216
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 20217
    const/16 v30, 0x1

    .line 20220
    :cond_5
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    .line 20221
    .local v32, "userIdInt":Ljava/lang/Integer;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v32

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20222
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v32

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20224
    if-eqz p2, :cond_d

    .line 20225
    move/from16 v0, p1

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 20226
    const/16 v4, -0x2710

    move-object/from16 v0, p0

    iput v4, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 20227
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 20228
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentUser(I[I)V

    .line 20231
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 20240
    :goto_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v34

    check-cast v34, Lcom/android/server/am/UserState;

    .line 20244
    .local v34, "uss":Lcom/android/server/am/UserState;
    move-object/from16 v0, v34

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_e

    .line 20248
    const/4 v4, 0x1

    move-object/from16 v0, v34

    iput v4, v0, Lcom/android/server/am/UserState;->mState:I

    .line 20249
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 20250
    const/16 v30, 0x1

    .line 20259
    :cond_6
    :goto_1
    move-object/from16 v0, v34

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v4, :cond_7

    .line 20263
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2a

    const/4 v8, 0x0

    move/from16 v0, p1

    invoke-virtual {v5, v6, v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20266
    :cond_7
    if-eqz p2, :cond_8

    .line 20267
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2b

    move/from16 v0, p1

    move/from16 v1, v31

    invoke-virtual {v5, v6, v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20269
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x22

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 20270
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x24

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 20271
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x22

    move/from16 v0, v31

    move/from16 v1, p1

    move-object/from16 v2, v34

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20273
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x24

    move/from16 v0, v31

    move/from16 v1, p1

    move-object/from16 v2, v34

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    .line 20274
    const-wide/16 v8, 0x7d0

    .line 20273
    invoke-virtual {v4, v5, v8, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 20277
    :cond_8
    if-eqz v30, :cond_9

    .line 20279
    new-instance v7, Landroid/content/Intent;

    const-string/jumbo v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20280
    .local v7, "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20282
    const-string/jumbo v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20285
    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20283
    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 20284
    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    .line 20285
    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x3e8

    move-object/from16 v4, p0

    move/from16 v20, p1

    .line 20283
    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 20288
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_9
    move-object/from16 v0, v33

    iget v4, v0, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-nez v4, :cond_a

    .line 20289
    if-eqz p1, :cond_f

    .line 20290
    new-instance v7, Landroid/content/Intent;

    const-string/jumbo v4, "android.intent.action.USER_INITIALIZE"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20291
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x10000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20293
    new-instance v8, Lcom/android/server/am/ActivityManagerService$25;

    move-object/from16 v9, p0

    move-object/from16 v10, v34

    move/from16 v11, p2

    move/from16 v12, v31

    move/from16 v13, p1

    invoke-direct/range {v8 .. v13}, Lcom/android/server/am/ActivityManagerService$25;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;ZII)V

    .line 20300
    sget v23, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20292
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v13, 0x0

    .line 20299
    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, -0x1

    .line 20300
    const/16 v20, 0x0

    const/16 v21, 0x1

    const/16 v22, 0x0

    const/16 v24, 0x3e8

    move-object/from16 v9, p0

    move-object v12, v7

    move-object v14, v8

    move/from16 v25, p1

    .line 20292
    invoke-direct/range {v9 .. v25}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 20301
    const/4 v4, 0x1

    move-object/from16 v0, v34

    iput-boolean v4, v0, Lcom/android/server/am/UserState;->initializing:Z

    .line 20307
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_a
    :goto_2
    if-eqz p2, :cond_10

    .line 20308
    move-object/from16 v0, v34

    iget-boolean v4, v0, Lcom/android/server/am/UserState;->initializing:Z

    if-nez v4, :cond_b

    .line 20309
    move-object/from16 v0, p0

    move-object/from16 v1, v34

    move/from16 v2, v31

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserState;II)V

    .line 20315
    :cond_b
    :goto_3
    if-eqz v30, :cond_c

    .line 20316
    new-instance v7, Landroid/content/Intent;

    const-string/jumbo v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20317
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20318
    const-string/jumbo v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20320
    new-instance v9, Lcom/android/server/am/ActivityManagerService$26;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$26;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 20327
    const/4 v4, 0x1

    new-array v13, v4, [Ljava/lang/String;

    const-string/jumbo v4, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v5, 0x0

    aput-object v4, v13, v5

    .line 20328
    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20319
    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 20320
    const/4 v8, 0x0

    .line 20326
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    .line 20327
    const/4 v14, -0x1

    .line 20328
    const/4 v15, 0x0

    const/16 v16, 0x1

    const/16 v17, 0x0

    const/16 v19, 0x3e8

    const/16 v20, -0x1

    move-object/from16 v4, p0

    .line 20319
    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .end local v7    # "intent":Landroid/content/Intent;
    :cond_c
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 20332
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20335
    const/4 v4, 0x1

    return v4

    .line 20233
    .end local v34    # "uss":Lcom/android/server/am/UserState;
    :cond_d
    :try_start_9
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v26

    .line 20234
    .local v26, "currentUserIdInt":Ljava/lang/Integer;
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 20235
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentProfileIds([I)V

    .line 20236
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v26

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20237
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v26

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    goto/16 :goto_0

    .line 20186
    .end local v26    # "currentUserIdInt":Ljava/lang/Integer;
    .end local v30    # "needStart":Z
    .end local v31    # "oldUserId":I
    .end local v32    # "userIdInt":Ljava/lang/Integer;
    .end local v33    # "userInfo":Landroid/content/pm/UserInfo;
    :catchall_0
    move-exception v4

    :try_start_a
    monitor-exit p0

    throw v4
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 20331
    :catchall_1
    move-exception v4

    .line 20332
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20331
    throw v4

    .line 20251
    .restart local v30    # "needStart":Z
    .restart local v31    # "oldUserId":I
    .restart local v32    # "userIdInt":Ljava/lang/Integer;
    .restart local v33    # "userInfo":Landroid/content/pm/UserInfo;
    .restart local v34    # "uss":Lcom/android/server/am/UserState;
    :cond_e
    :try_start_b
    move-object/from16 v0, v34

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_6

    .line 20254
    const/4 v4, 0x0

    move-object/from16 v0, v34

    iput v4, v0, Lcom/android/server/am/UserState;->mState:I

    .line 20255
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 20256
    const/16 v30, 0x1

    goto/16 :goto_1

    .line 20303
    :cond_f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move-object/from16 v0, v33

    iget v5, v0, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v4, v5}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    goto/16 :goto_2

    .line 20312
    :cond_10
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move/from16 v0, p1

    move-object/from16 v1, v34

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->startBackgroundUserLocked(ILcom/android/server/am/UserState;)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    goto/16 :goto_3
.end method

.method private stopGuestUserIfBackground()V
    .locals 7

    .prologue
    .line 20515
    monitor-enter p0

    .line 20516
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 20517
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-ge v0, v1, :cond_2

    .line 20518
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 20519
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserState;

    .line 20520
    .local v3, "oldUss":Lcom/android/server/am/UserState;
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    if-eqz v5, :cond_0

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-ne v5, v6, :cond_1

    .line 20517
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 20521
    :cond_1
    iget v5, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x2

    if-eq v5, v6, :cond_0

    .line 20522
    iget v5, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x3

    if-eq v5, v6, :cond_0

    .line 20525
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v4

    .line 20526
    .local v4, "userInfo":Landroid/content/pm/UserInfo;
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isGuest()Z

    move-result v5

    if-eqz v5, :cond_0

    .line 20528
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    const/4 v6, 0x0

    invoke-direct {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserState;
    .end local v4    # "userInfo":Landroid/content/pm/UserInfo;
    :cond_2
    monitor-exit p0

    .line 20514
    return-void

    .line 20515
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method private stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 4
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "profileType"    # I

    .prologue
    .line 19840
    if-eqz p1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v1, :cond_1

    .line 19841
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 19842
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 19843
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 19845
    :cond_1
    if-nez p1, :cond_2

    .line 19846
    return-void

    .line 19849
    :cond_2
    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-interface {v1, v2, v3, p2}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19839
    return-void

    .line 19850
    :catch_0
    move-exception v0

    .line 19851
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string/jumbo v2, "Process disappeared"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private stopUserLocked(ILandroid/app/IStopUserCallback;)I
    .locals 30
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    .line 20640
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v0, p1

    if-ne v5, v0, :cond_0

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v7, -0x2710

    if-ne v5, v7, :cond_0

    .line 20641
    const/4 v5, -0x2

    return v5

    .line 20644
    :cond_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UserState;

    .line 20645
    .local v6, "uss":Lcom/android/server/am/UserState;
    if-nez v6, :cond_2

    .line 20648
    if-eqz p2, :cond_1

    .line 20649
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$28;

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, p1

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$28;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/app/IStopUserCallback;I)V

    invoke-virtual {v5, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 20659
    :cond_1
    const/4 v5, 0x0

    return v5

    .line 20662
    :cond_2
    if-eqz p2, :cond_3

    .line 20663
    iget-object v5, v6, Lcom/android/server/am/UserState;->mStopCallbacks:Ljava/util/ArrayList;

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20666
    :cond_3
    iget v5, v6, Lcom/android/server/am/UserState;->mState:I

    const/4 v7, 0x2

    if-eq v5, v7, :cond_4

    .line 20667
    iget v5, v6, Lcom/android/server/am/UserState;->mState:I

    const/4 v7, 0x3

    if-eq v5, v7, :cond_4

    .line 20668
    const/4 v5, 0x2

    iput v5, v6, Lcom/android/server/am/UserState;->mState:I

    .line 20669
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 20671
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 20676
    .local v28, "ident":J
    :try_start_0
    new-instance v13, Landroid/content/Intent;

    const-string/jumbo v5, "android.intent.action.USER_STOPPING"

    invoke-direct {v13, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20677
    .local v13, "stoppingIntent":Landroid/content/Intent;
    const/high16 v5, 0x40000000    # 2.0f

    invoke-virtual {v13, v5}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20678
    const-string/jumbo v5, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v13, v5, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20679
    const-string/jumbo v5, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v7, 0x1

    invoke-virtual {v13, v5, v7}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 20680
    new-instance v8, Landroid/content/Intent;

    const-string/jumbo v5, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v8, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20682
    .local v8, "shutdownIntent":Landroid/content/Intent;
    new-instance v9, Lcom/android/server/am/ActivityManagerService$29;

    move-object/from16 v0, p0

    invoke-direct {v9, v0, v6}, Lcom/android/server/am/ActivityManagerService$29;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;)V

    .line 20690
    .local v9, "shutdownReceiver":Landroid/content/IIntentReceiver;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$30;

    move-object/from16 v5, p0

    move/from16 v7, p1

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService$30;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;ILandroid/content/Intent;Landroid/content/IIntentReceiver;)V

    .line 20714
    .local v4, "stoppingReceiver":Landroid/content/IIntentReceiver;
    const/4 v5, 0x1

    new-array v0, v5, [Ljava/lang/String;

    move-object/from16 v19, v0

    const-string/jumbo v5, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v7, 0x0

    aput-object v5, v19, v7

    .line 20715
    sget v24, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20712
    const/4 v11, 0x0

    const/4 v12, 0x0

    .line 20713
    const/4 v14, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    .line 20714
    const/16 v20, -0x1

    .line 20715
    const/16 v21, 0x0

    const/16 v22, 0x1

    const/16 v23, 0x0

    const/16 v25, 0x3e8

    const/16 v26, -0x1

    move-object/from16 v10, p0

    move-object v15, v4

    .line 20712
    invoke-direct/range {v10 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20717
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20721
    .end local v4    # "stoppingReceiver":Landroid/content/IIntentReceiver;
    .end local v8    # "shutdownIntent":Landroid/content/Intent;
    .end local v9    # "shutdownReceiver":Landroid/content/IIntentReceiver;
    .end local v13    # "stoppingIntent":Landroid/content/Intent;
    .end local v28    # "ident":J
    :cond_4
    const/4 v5, 0x0

    return v5

    .line 20716
    .restart local v28    # "ident":J
    :catchall_0
    move-exception v5

    .line 20717
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20716
    throw v5
.end method

.method private updateCurrentProfileIdsLocked()V
    .locals 9

    .prologue
    const/4 v7, 0x0

    .line 20112
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v5

    .line 20113
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 20112
    invoke-virtual {v5, v6, v7}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v2

    .line 20114
    .local v2, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    new-array v0, v5, [I

    .line 20115
    .local v0, "currentProfileIds":[I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v5, v0

    if-ge v1, v5, :cond_0

    .line 20116
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    iget v5, v5, Landroid/content/pm/UserInfo;->id:I

    aput v5, v0, v1

    .line 20115
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 20118
    :cond_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 20120
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v6

    .line 20121
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v5}, Landroid/util/SparseIntArray;->clear()V

    .line 20122
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v5

    const/4 v7, 0x0

    invoke-virtual {v5, v7}, Lcom/android/server/pm/UserManagerService;->getUsers(Z)Ljava/util/List;

    move-result-object v4

    .line 20123
    .local v4, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    const/4 v1, 0x0

    :goto_1
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v5

    if-ge v1, v5, :cond_2

    .line 20124
    invoke-interface {v4, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/UserInfo;

    .line 20125
    .local v3, "user":Landroid/content/pm/UserInfo;
    iget v5, v3, Landroid/content/pm/UserInfo;->profileGroupId:I

    const/4 v7, -0x1

    if-eq v5, v7, :cond_1

    .line 20126
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    iget v7, v3, Landroid/content/pm/UserInfo;->id:I

    iget v8, v3, Landroid/content/pm/UserInfo;->profileGroupId:I

    invoke-virtual {v5, v7, v8}, Landroid/util/SparseIntArray;->put(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20123
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .end local v3    # "user":Landroid/content/pm/UserInfo;
    :cond_2
    monitor-exit v6

    .line 20111
    return-void

    .line 20120
    .end local v4    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :catchall_0
    move-exception v5

    monitor-exit v6

    throw v5
.end method

.method private updateEventDispatchingLocked()V
    .locals 3

    .prologue
    const/4 v0, 0x0

    .line 10667
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v2, :cond_0

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v2, :cond_1

    :cond_0
    :goto_0
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V

    .line 10666
    return-void

    .line 10667
    :cond_1
    const/4 v0, 0x1

    goto :goto_0
.end method

.method private updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "now"    # J
    .param p4, "index"    # I
    .param p5, "what"    # Ljava/lang/String;
    .param p6, "obj"    # Ljava/lang/Object;
    .param p7, "srcApp"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 2875
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 2877
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 2879
    return p4

    .line 2882
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 2883
    .local v0, "lrui":I
    if-gez v0, :cond_1

    .line 2884
    const-string/jumbo v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Adding dependent process "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " not on LRU list: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 2885
    const-string/jumbo v3, " "

    .line 2884
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 2885
    const-string/jumbo v3, " from "

    .line 2884
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 2886
    return p4

    .line 2889
    :cond_1
    if-lt v0, p4, :cond_2

    .line 2892
    return p4

    .line 2895
    :cond_2
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-lt v0, v1, :cond_3

    .line 2897
    return p4

    .line 2900
    :cond_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 2901
    if-lez p4, :cond_4

    .line 2902
    add-int/lit8 p4, p4, -0x1

    .line 2906
    :cond_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, p4, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 2907
    return p4
.end method

.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 9
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 19243
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_0

    .line 19244
    const/4 v0, 0x0

    return v0

    .line 19247
    :cond_0
    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    .line 19249
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    move-object v1, p0

    move-object v2, p1

    move v3, p4

    move-wide v4, p5

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    move-result v0

    return v0
.end method

.method private updateStartedUserArrayLocked()V
    .locals 7

    .prologue
    const/4 v6, 0x3

    const/4 v5, 0x2

    .line 20834
    const/4 v1, 0x0

    .line 20835
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_1

    .line 20836
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserState;

    .line 20838
    .local v2, "uss":Lcom/android/server/am/UserState;
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v5, :cond_0

    .line 20839
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v6, :cond_0

    .line 20840
    add-int/lit8 v1, v1, 0x1

    .line 20835
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 20843
    .end local v2    # "uss":Lcom/android/server/am/UserState;
    :cond_1
    new-array v3, v1, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 20844
    const/4 v1, 0x0

    .line 20845
    const/4 v0, 0x0

    :goto_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_3

    .line 20846
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserState;

    .line 20847
    .restart local v2    # "uss":Lcom/android/server/am/UserState;
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v5, :cond_2

    .line 20848
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v6, :cond_2

    .line 20849
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    aput v4, v3, v1

    .line 20850
    add-int/lit8 v1, v1, 0x1

    .line 20845
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 20833
    .end local v2    # "uss":Lcom/android/server/am/UserState;
    :cond_3
    return-void
.end method

.method private writeGrantedUriPermissions()V
    .locals 14

    .prologue
    .line 8145
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v8

    .line 8146
    .local v8, "persist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission$Snapshot;>;"
    monitor-enter p0

    .line 8147
    :try_start_0
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 8148
    .local v9, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v9, :cond_2

    .line 8149
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .line 8150
    .local v7, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v7}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .local v6, "perm$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_1
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_1

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 8151
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    iget v10, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_0

    .line 8152
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->snapshot()Lcom/android/server/am/UriPermission$Snapshot;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 8146
    .end local v2    # "i":I
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perm$iterator":Ljava/util/Iterator;
    .end local v7    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v9    # "size":I
    :catchall_0
    move-exception v10

    monitor-exit p0

    throw v10

    .line 8148
    .restart local v2    # "i":I
    .restart local v6    # "perm$iterator":Ljava/util/Iterator;
    .restart local v7    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .restart local v9    # "size":I
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .end local v6    # "perm$iterator":Ljava/util/Iterator;
    .end local v7    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    monitor-exit p0

    .line 8158
    const/4 v1, 0x0

    .line 8160
    .local v1, "fos":Ljava/io/FileOutputStream;
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v10}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v1

    .line 8162
    .local v1, "fos":Ljava/io/FileOutputStream;
    new-instance v3, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v3}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 8163
    .local v3, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v10, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v10}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v10

    invoke-interface {v3, v1, v10}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 8164
    const/4 v10, 0x1

    invoke-static {v10}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v10

    const/4 v11, 0x0

    invoke-interface {v3, v11, v10}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 8165
    const-string/jumbo v10, "uri-grants"

    const/4 v11, 0x0

    invoke-interface {v3, v11, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8166
    invoke-interface {v8}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .restart local v6    # "perm$iterator":Ljava/util/Iterator;
    :goto_2
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_4

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission$Snapshot;

    .line 8167
    .local v4, "perm":Lcom/android/server/am/UriPermission$Snapshot;
    const-string/jumbo v10, "uri-grant"

    const/4 v11, 0x0

    invoke-interface {v3, v11, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8168
    const-string/jumbo v10, "sourceUserId"

    iget-object v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v11, v11, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-static {v3, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 8169
    const-string/jumbo v10, "targetUserId"

    iget v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->targetUserId:I

    invoke-static {v3, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 8170
    const-string/jumbo v10, "sourcePkg"

    iget-object v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->sourcePkg:Ljava/lang/String;

    const/4 v12, 0x0

    invoke-interface {v3, v12, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8171
    const-string/jumbo v10, "targetPkg"

    iget-object v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->targetPkg:Ljava/lang/String;

    const/4 v12, 0x0

    invoke-interface {v3, v12, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8172
    const-string/jumbo v10, "uri"

    iget-object v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v11, v11, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    const/4 v12, 0x0

    invoke-interface {v3, v12, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8173
    const-string/jumbo v10, "prefix"

    iget-object v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v11, v11, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    invoke-static {v3, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeBooleanAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Z)V

    .line 8174
    const-string/jumbo v10, "modeFlags"

    iget v11, v4, Lcom/android/server/am/UriPermission$Snapshot;->persistedModeFlags:I

    invoke-static {v3, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 8175
    const-string/jumbo v10, "createdTime"

    iget-wide v12, v4, Lcom/android/server/am/UriPermission$Snapshot;->persistedCreateTime:J

    invoke-static {v3, v10, v12, v13}, Lcom/android/internal/util/XmlUtils;->writeLongAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;J)V

    .line 8176
    const-string/jumbo v10, "uri-grant"

    const/4 v11, 0x0

    invoke-interface {v3, v11, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_2

    .line 8182
    .end local v1    # "fos":Ljava/io/FileOutputStream;
    .end local v3    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v4    # "perm":Lcom/android/server/am/UriPermission$Snapshot;
    .end local v6    # "perm$iterator":Ljava/util/Iterator;
    :catch_0
    move-exception v0

    .line 8183
    .local v0, "e":Ljava/io/IOException;
    if-eqz v1, :cond_3

    .line 8184
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v10, v1}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V

    .line 8141
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    :goto_3
    return-void

    .line 8178
    .restart local v1    # "fos":Ljava/io/FileOutputStream;
    .restart local v3    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .restart local v6    # "perm$iterator":Ljava/util/Iterator;
    :cond_4
    :try_start_2
    const-string/jumbo v10, "uri-grants"

    const/4 v11, 0x0

    invoke-interface {v3, v11, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 8179
    invoke-interface {v3}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 8181
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v10, v1}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_3
.end method

.method private static writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 11776
    .local p0, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v3

    .line 11777
    .local v3, "file":Ljava/io/File;
    const/4 v4, 0x0

    .line 11778
    .local v4, "fos":Ljava/io/FileOutputStream;
    const/4 v0, 0x0

    .line 11780
    .local v0, "dos":Ljava/io/DataOutputStream;
    :try_start_0
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11781
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .local v5, "fos":Ljava/io/FileOutputStream;
    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    new-instance v7, Ljava/io/BufferedOutputStream;

    const/16 v8, 0x800

    invoke-direct {v7, v5, v8}, Ljava/io/BufferedOutputStream;-><init>(Ljava/io/OutputStream;I)V

    invoke-direct {v1, v7}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11782
    .local v1, "dos":Ljava/io/DataOutputStream;
    const/16 v7, 0x2710

    :try_start_2
    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 11783
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    sget-object v7, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11784
    sget-object v7, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11785
    sget-object v7, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11786
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 11787
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v6, v7, :cond_0

    .line 11788
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11789
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_5
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 11787
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 11795
    :cond_0
    invoke-static {v5}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11796
    if-eqz v1, :cond_1

    .line 11798
    :try_start_3
    invoke-virtual {v1}, Ljava/io/DataOutputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    :cond_1
    :goto_1
    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .local v0, "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .line 11775
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .end local v6    # "i":I
    :cond_2
    :goto_2
    return-void

    .line 11799
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v6    # "i":I
    :catch_0
    move-exception v2

    .line 11801
    .local v2, "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 11791
    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .end local v2    # "e":Ljava/io/IOException;
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .end local v6    # "i":I
    .local v0, "dos":Ljava/io/DataOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    :catch_1
    move-exception v2

    .line 11792
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v2    # "e":Ljava/io/IOException;
    :goto_3
    :try_start_4
    const-string/jumbo v7, "ActivityManager"

    const-string/jumbo v8, "Failure writing last done pre-boot receivers"

    invoke-static {v7, v8, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 11793
    invoke-virtual {v3}, Ljava/io/File;->delete()Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 11795
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11796
    if-eqz v0, :cond_2

    .line 11798
    :try_start_5
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    goto :goto_2

    .line 11799
    :catch_2
    move-exception v2

    .line 11801
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2

    .line 11794
    .end local v2    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v7

    .line 11795
    :goto_4
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11796
    if-eqz v0, :cond_3

    .line 11798
    :try_start_6
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    .line 11794
    :cond_3
    :goto_5
    throw v7

    .line 11799
    :catch_3
    move-exception v2

    .line 11801
    .restart local v2    # "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_5

    .line 11794
    .end local v2    # "e":Ljava/io/IOException;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_1
    move-exception v7

    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .local v4, "fos":Ljava/io/FileOutputStream;
    goto :goto_4

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_2
    move-exception v7

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .local v0, "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_4

    .line 11791
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .local v0, "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_4
    move-exception v2

    .restart local v2    # "e":Ljava/io/IOException;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v2    # "e":Ljava/io/IOException;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_5
    move-exception v2

    .restart local v2    # "e":Ljava/io/IOException;
    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .local v0, "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3
.end method


# virtual methods
.method public final activityDestroyed(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6699
    monitor-enter p0

    .line 6700
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 6701
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 6702
    const-string/jumbo v1, "activityDestroyed"

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStack;->activityDestroyedLocked(Landroid/os/IBinder;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 6697
    return-void

    .line 6699
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "config"    # Landroid/content/res/Configuration;
    .param p3, "stopProfiling"    # Z

    .prologue
    .line 6411
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6412
    .local v2, "origId":J
    monitor-enter p0

    .line 6413
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    .line 6414
    .local v4, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v4, :cond_0

    .line 6416
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v6, 0x0

    invoke-virtual {v5, p1, v6, p2}, Lcom/android/server/am/ActivityStackSupervisor;->activityIdleInternalLocked(Landroid/os/IBinder;ZLandroid/content/res/Configuration;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 6417
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz p3, :cond_0

    .line 6418
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v5, v6, :cond_0

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v5, :cond_0

    .line 6420
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6423
    :goto_0
    :try_start_2
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-exit p0

    .line 6428
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6410
    return-void

    .line 6412
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 6421
    .restart local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :catch_0
    move-exception v0

    .local v0, "e":Ljava/io/IOException;
    goto :goto_0
.end method

.method public final activityPaused(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6662
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6663
    .local v0, "origId":J
    monitor-enter p0

    .line 6664
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6665
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6666
    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->activityPausedLocked(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 6669
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6661
    return-void

    .line 6663
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public final activityResumed(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6650
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6651
    .local v0, "origId":J
    monitor-enter p0

    .line 6652
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6653
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6654
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->activityResumedLocked(Landroid/os/IBinder;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 6657
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6649
    return-void

    .line 6651
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public final activitySlept(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10626
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10628
    .local v0, "origId":J
    monitor-enter p0

    .line 10629
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 10630
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 10631
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStackSupervisor;->activitySleptLocked(Lcom/android/server/am/ActivityRecord;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 10635
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10623
    return-void

    .line 10628
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public final activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "icicle"    # Landroid/os/Bundle;
    .param p3, "persistentState"    # Landroid/os/PersistableBundle;
    .param p4, "description"    # Ljava/lang/CharSequence;

    .prologue
    .line 6678
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 6679
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "File descriptors passed in Bundle"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 6682
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6684
    .local v0, "origId":J
    monitor-enter p0

    .line 6685
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 6686
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_1

    .line 6687
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->activityStoppedLocked(Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_1
    monitor-exit p0

    .line 6691
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 6693
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6674
    return-void

    .line 6684
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "isolated"    # Z
    .param p3, "abiOverride"    # Ljava/lang/String;

    .prologue
    const/4 v9, 0x1

    const/16 v6, -0xc

    const/4 v3, 0x0

    const/4 v5, 0x0

    .line 10409
    if-nez p2, :cond_3

    .line 10410
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v2, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v2, v9}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 10415
    :goto_0
    if-nez v1, :cond_0

    .line 10416
    invoke-virtual {p0, p1, v5, p2, v3}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 10417
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {p0, v1, v3, v5}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 10418
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 10423
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 10424
    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    const/4 v4, 0x0

    .line 10423
    invoke-interface {v0, v2, v4, v3}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10431
    :goto_1
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x9

    const/16 v2, 0x9

    if-ne v0, v2, :cond_1

    .line 10432
    iput-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 10437
    iget v0, v1, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-lt v0, v6, :cond_1

    .line 10438
    iput v6, v1, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 10441
    :cond_1
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    if-gez v0, :cond_2

    .line 10442
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10443
    const-string/jumbo v2, "added application"

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v0, p0

    move-object v4, p3

    move-object v6, v5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 10447
    :cond_2
    return-object v1

    .line 10412
    :cond_3
    const/4 v1, 0x0

    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 10426
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v8

    .line 10427
    .local v8, "e":Ljava/lang/IllegalArgumentException;
    const-string/jumbo v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 10428
    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 10427
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 10428
    const-string/jumbo v3, ": "

    .line 10427
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 10425
    .end local v8    # "e":Ljava/lang/IllegalArgumentException;
    :catch_1
    move-exception v7

    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public addAppTask(Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I
    .locals 16
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "description"    # Landroid/app/ActivityManager$TaskDescription;
    .param p4, "thumbnail"    # Landroid/graphics/Bitmap;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8692
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    .line 8693
    .local v9, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 8696
    .local v10, "callingIdent":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8697
    :try_start_1
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v13

    .line 8698
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v13, :cond_0

    .line 8699
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Activity does not exist; token="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8696
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0

    throw v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8768
    :catchall_1
    move-exception v3

    .line 8769
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8768
    throw v3

    .line 8702
    .restart local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v12

    .line 8703
    .local v12, "comp":Landroid/content/ComponentName;
    if-nez v12, :cond_1

    .line 8704
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Intent "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8705
    const-string/jumbo v6, " must specify explicit component"

    .line 8704
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8707
    :cond_1
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    if-ne v3, v4, :cond_2

    .line 8708
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    if-eq v3, v4, :cond_3

    .line 8709
    :cond_2
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Bad thumbnail size: got "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8710
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v6

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8710
    const-string/jumbo v6, "x"

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8710
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v6

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8710
    const-string/jumbo v6, ", require "

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8711
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8711
    const-string/jumbo v6, "x"

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8711
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    .line 8709
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8713
    :cond_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v3

    if-eqz v3, :cond_4

    .line 8714
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSelector(Landroid/content/Intent;)V

    .line 8716
    :cond_4
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 8717
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 8719
    :cond_5
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x80000

    and-int/2addr v3, v4

    if-eqz v3, :cond_9

    .line 8720
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    and-int/lit16 v3, v3, 0x2000

    if-nez v3, :cond_6

    .line 8723
    const/16 v3, 0x2000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8729
    :cond_6
    :goto_0
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskComponent:Landroid/content/ComponentName;

    invoke-virtual {v12, v3}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskUid:I

    if-eq v9, v3, :cond_8

    .line 8730
    :cond_7
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8732
    :cond_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8733
    .local v5, "ainfo":Landroid/content/pm/ActivityInfo;
    if-nez v5, :cond_a

    .line 8734
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 8735
    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const/4 v6, 0x0

    .line 8734
    invoke-interface {v3, v12, v6, v4}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v5

    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8736
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    iget-object v3, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v3, v9, :cond_a

    .line 8737
    new-instance v3, Ljava/lang/SecurityException;

    .line 8738
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Can\'t add task for another application: target uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8739
    iget-object v6, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 8738
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8739
    const-string/jumbo v6, ", calling uid="

    .line 8738
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 8737
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8725
    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_9
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x10000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_6

    .line 8727
    const/high16 v3, 0x10000000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_0

    .line 8743
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_a
    new-instance v2, Lcom/android/server/am/TaskRecord;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getNextTaskId()I

    move-result v4

    move-object/from16 v3, p0

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/TaskRecord;-><init>(Lcom/android/server/am/ActivityManagerService;ILandroid/content/pm/ActivityInfo;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;)V

    .line 8746
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v4, 0x0

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/RecentTasks;->trimForTaskLocked(Lcom/android/server/am/TaskRecord;Z)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v15

    .line 8747
    .local v15, "trimIdx":I
    if-ltz v15, :cond_b

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8750
    const/4 v3, -0x1

    .line 8769
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8750
    return v3

    .line 8753
    :cond_b
    :try_start_5
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v8

    .line 8754
    .local v8, "N":I
    invoke-static {}, Landroid/app/ActivityManager;->getMaxRecentTasksStatic()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    if-lt v8, v3, :cond_c

    .line 8755
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    add-int/lit8 v4, v8, -0x1

    invoke-virtual {v3, v4}, Lcom/android/server/am/RecentTasks;->remove(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/TaskRecord;

    .line 8756
    .local v14, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v14}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 8759
    .end local v14    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_c
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 8760
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v2}, Lcom/android/server/am/RecentTasks;->add(Ljava/lang/Object;)Z

    .line 8761
    iget-object v3, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v4, 0x0

    const/4 v6, 0x0

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ActivityStack;->addTask(Lcom/android/server/am/TaskRecord;ZZ)V

    .line 8763
    move-object/from16 v0, p4

    invoke-virtual {v2, v0}, Lcom/android/server/am/TaskRecord;->setLastThumbnail(Landroid/graphics/Bitmap;)Z

    .line 8764
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->freeLastThumbnail()V

    .line 8766
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 8769
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8766
    return v3
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 9
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p6, "subject"    # Ljava/lang/String;
    .param p7, "report"    # Ljava/lang/String;
    .param p8, "logFile"    # Ljava/io/File;
    .param p9, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 12696
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "_"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 12698
    .local v7, "dropboxTag":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "dropbox"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    .line 12697
    check-cast v8, Landroid/os/DropBoxManager;

    .line 12701
    .local v8, "dbox":Landroid/os/DropBoxManager;
    if-eqz v8, :cond_5

    invoke-virtual {v8, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 12703
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v1, 0x400

    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 12704
    .local v4, "sb":Ljava/lang/StringBuilder;
    invoke-direct {p0, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 12705
    if-eqz p4, :cond_0

    .line 12706
    const-string/jumbo v1, "Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12708
    :cond_0
    if-eqz p5, :cond_1

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_1

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v2, p2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v1, v2, :cond_1

    .line 12709
    const-string/jumbo v1, "Parent-Process: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12711
    :cond_1
    if-eqz p5, :cond_2

    if-eq p5, p4, :cond_2

    .line 12712
    const-string/jumbo v1, "Parent-Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12714
    :cond_2
    if-eqz p6, :cond_3

    .line 12715
    const-string/jumbo v1, "Subject: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12717
    :cond_3
    const-string/jumbo v1, "Build: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12718
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v1

    if-eqz v1, :cond_4

    .line 12719
    const-string/jumbo v1, "Debugger: Connected\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12721
    :cond_4
    const-string/jumbo v1, "\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12725
    new-instance v0, Lcom/android/server/am/ActivityManagerService$19;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object v1, p0

    move-object/from16 v3, p7

    move-object/from16 v5, p8

    move-object/from16 v6, p9

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/String;Landroid/os/DropBoxManager;)V

    .line 12774
    .local v0, "worker":Ljava/lang/Thread;
    if-nez p2, :cond_6

    .line 12777
    invoke-virtual {v0}, Ljava/lang/Thread;->run()V

    .line 12692
    :goto_0
    return-void

    .line 12701
    .end local v0    # "worker":Ljava/lang/Thread;
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    :cond_5
    return-void

    .line 12779
    .restart local v0    # "worker":Ljava/lang/Thread;
    .restart local v4    # "sb":Ljava/lang/StringBuilder;
    :cond_6
    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    goto :goto_0
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 5490
    monitor-enter p0

    .line 5491
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5492
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result v2

    if-ne v0, v2, :cond_0

    monitor-exit p0

    .line 5494
    return-void

    .line 5497
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5498
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_3
    monitor-exit v3

    .line 5500
    if-eqz v1, :cond_2

    .line 5501
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-nez v2, :cond_1

    .line 5502
    new-instance v2, Landroid/util/ArraySet;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Landroid/util/ArraySet;-><init>(I)V

    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 5504
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v2, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :cond_2
    monitor-exit p0

    .line 5489
    return-void

    .line 5497
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    :try_start_4
    monitor-exit v3

    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5490
    .end local v0    # "callingPid":I
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method final addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v6, 0x0

    .line 18813
    const/4 v0, 0x0

    .line 18814
    .local v0, "added":Z
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 18815
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-wide v2, v2, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 18816
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 18815
    cmp-long v2, v2, v4

    if-gez v2, :cond_2

    .line 18817
    const/4 v0, 0x1

    .line 18818
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    add-int/lit8 v3, v1, 0x1

    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 18822
    :cond_0
    if-nez v0, :cond_1

    .line 18823
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, v6, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 18812
    :cond_1
    return-void

    .line 18814
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4810
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    invoke-virtual {p0, p1, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V

    .line 4809
    return-void
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V
    .locals 20
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "thread"    # Landroid/app/IApplicationThread;
    .param p4, "fromBinderDied"    # Z

    .prologue
    .line 4816
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4

    .line 4817
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, p2

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 4818
    .local v15, "curProc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    if-eq v15, v0, :cond_0

    .line 4819
    const-string/jumbo v2, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Spurious death for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, ", curProc for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, ": "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v4

    .line 4820
    return-void

    :cond_0
    monitor-exit v4

    .line 4824
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 4825
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 4826
    :try_start_1
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, v19

    move/from16 v1, p2

    invoke-virtual {v0, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->noteProcessDiedLocked(II)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit v19

    .line 4829
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v2, :cond_2

    .line 4830
    if-nez p4, :cond_1

    .line 4831
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 4833
    :cond_1
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p2

    invoke-static {v2, v0}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 4834
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 4838
    :cond_2
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, p2

    if-ne v2, v0, :cond_9

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_9

    .line 4839
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-interface/range {p3 .. p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    if-ne v2, v4, :cond_9

    .line 4840
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v2, :cond_7

    const/16 v16, 0x1

    .line 4841
    .local v16, "doLowMem":Z
    :goto_0
    move/from16 v17, v16

    .line 4842
    .local v17, "doOomAdj":Z
    const/16 v18, 0x0

    .line 4843
    .local v18, "homeRestart":Z
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v2, :cond_8

    .line 4844
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    if-eqz v2, :cond_3

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcessName:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 4845
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeKilled:Z

    .line 4846
    const/16 v18, 0x1

    .line 4848
    :cond_3
    const-string/jumbo v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " (pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4849
    const-string/jumbo v5, ") has died"

    .line 4848
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4850
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 4857
    :goto_1
    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x0

    aput-object v4, v2, v5

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x1

    aput-object v4, v2, v5

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v5, 0x2

    aput-object v4, v2, v5

    const/16 v4, 0x753b

    invoke-static {v4, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4860
    const/4 v2, 0x0

    const/4 v4, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 4862
    if-eqz v17, :cond_4

    .line 4863
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 4865
    :cond_4
    if-eqz v16, :cond_5

    .line 4866
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4868
    :cond_5
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeKilled:Z

    if-eqz v2, :cond_6

    if-eqz v18, :cond_6

    .line 4869
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent()Landroid/content/Intent;

    move-result-object v3

    .line 4870
    .local v3, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStackSupervisor;->resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;I)Landroid/content/pm/ActivityInfo;

    move-result-object v14

    .line 4871
    .local v14, "aInfo":Landroid/content/pm/ActivityInfo;
    iget-object v5, v14, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iget-object v6, v14, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 4872
    const-string/jumbo v9, "activity"

    .line 4871
    const/4 v7, 0x1

    const/4 v8, 0x0

    .line 4872
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x1

    move-object/from16 v4, p0

    .line 4871
    invoke-virtual/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    .line 4873
    const/16 v18, 0x0

    .line 4814
    .end local v3    # "intent":Landroid/content/Intent;
    .end local v14    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v16    # "doLowMem":Z
    .end local v17    # "doOomAdj":Z
    .end local v18    # "homeRestart":Z
    :cond_6
    :goto_2
    return-void

    .line 4816
    .end local v15    # "curProc":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v2

    monitor-exit v4

    throw v2

    .line 4825
    .restart local v15    # "curProc":Lcom/android/server/am/ProcessRecord;
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v2

    monitor-exit v19

    throw v2

    .line 4840
    :cond_7
    const/16 v16, 0x0

    .restart local v16    # "doLowMem":Z
    goto/16 :goto_0

    .line 4854
    .restart local v17    # "doOomAdj":Z
    .restart local v18    # "homeRestart":Z
    :cond_8
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 4855
    const/16 v16, 0x0

    goto :goto_1

    .line 4875
    .end local v16    # "doLowMem":Z
    .end local v17    # "doOomAdj":Z
    .end local v18    # "homeRestart":Z
    :cond_9
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, p2

    if-eq v2, v0, :cond_6

    .line 4877
    const-string/jumbo v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " (pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4878
    const-string/jumbo v5, ") has died and restarted (pid "

    .line 4877
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4878
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 4877
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4878
    const-string/jumbo v5, ")."

    .line 4877
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4879
    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x0

    aput-object v4, v2, v5

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x1

    aput-object v4, v2, v5

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v5, 0x2

    aput-object v4, v2, v5

    const/16 v4, 0x753b

    invoke-static {v4, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    goto/16 :goto_2
.end method

.method final appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    .locals 31
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "annotation"    # Ljava/lang/String;

    .prologue
    .line 5079
    new-instance v15, Ljava/util/ArrayList;

    const/4 v2, 0x5

    invoke-direct {v15, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 5080
    .local v15, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    new-instance v18, Landroid/util/SparseArray;

    const/16 v2, 0x14

    move-object/from16 v0, v18

    invoke-direct {v0, v2}, Landroid/util/SparseArray;-><init>(I)V

    .line 5082
    .local v18, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_0

    .line 5085
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p5

    invoke-interface {v2, v3, v4, v0}, Landroid/app/IActivityController;->appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v27

    .line 5086
    .local v27, "res":I
    if-gez v27, :cond_0

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_0

    .line 5087
    const-string/jumbo v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5095
    .end local v27    # "res":I
    :cond_0
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    .line 5097
    .local v12, "anrTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 5100
    monitor-enter p0

    .line 5102
    :try_start_1
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v2, :cond_1

    .line 5103
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "During shutdown skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 5104
    return-void

    .line 5089
    .end local v12    # "anrTime":J
    :catch_0
    move-exception v14

    .line 5090
    .local v14, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 5091
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    goto :goto_0

    .line 5105
    .end local v14    # "e":Landroid/os/RemoteException;
    .restart local v12    # "anrTime":J
    :cond_1
    :try_start_2
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v2, :cond_2

    .line 5106
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Skipping duplicate ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 5107
    return-void

    .line 5108
    :cond_2
    :try_start_3
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v2, :cond_3

    .line 5109
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Crashing app skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 5110
    return-void

    .line 5111
    :cond_3
    :try_start_4
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v2, :cond_4

    .line 5112
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "App already killed by AM skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    monitor-exit p0

    .line 5113
    return-void

    .line 5118
    :cond_4
    const/4 v2, 0x1

    :try_start_5
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 5121
    const/4 v2, 0x5

    new-array v2, v2, [Ljava/lang/Object;

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const/4 v4, 0x0

    aput-object v3, v2, v4

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const/4 v4, 0x1

    aput-object v3, v2, v4

    .line 5122
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v4, 0x2

    aput-object v3, v2, v4

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const/4 v4, 0x3

    aput-object v3, v2, v4

    const/4 v3, 0x4

    aput-object p5, v2, v3

    .line 5121
    const/16 v3, 0x7538

    invoke-static {v3, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5125
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5127
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v23, v0

    .line 5128
    .local v23, "parentPid":I
    if-eqz p3, :cond_5

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_5

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_5

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v23, v0

    .line 5129
    :cond_5
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v23

    if-eq v0, v2, :cond_6

    invoke-static/range {v23 .. v23}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5131
    :cond_6
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v2, v3, :cond_7

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v23

    if-eq v2, v0, :cond_7

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5133
    :cond_7
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v16, v2, -0x1

    .local v16, "i":I
    :goto_1
    if-ltz v16, :cond_a

    .line 5134
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    .line 5135
    .local v26, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v26, :cond_8

    move-object/from16 v0, v26

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_8

    .line 5136
    move-object/from16 v0, v26

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v24, v0

    .line 5137
    .local v24, "pid":I
    if-lez v24, :cond_8

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v24

    if-eq v0, v2, :cond_8

    move/from16 v0, v24

    move/from16 v1, v23

    if-eq v0, v1, :cond_8

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v24

    if-eq v0, v2, :cond_8

    .line 5138
    move-object/from16 v0, v26

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_9

    .line 5139
    invoke-static/range {v24 .. v24}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5133
    .end local v24    # "pid":I
    :cond_8
    :goto_2
    add-int/lit8 v16, v16, -0x1

    goto :goto_1

    .line 5141
    .restart local v24    # "pid":I
    :cond_9
    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    move-object/from16 v0, v18

    move/from16 v1, v24

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_2

    .line 5100
    .end local v16    # "i":I
    .end local v23    # "parentPid":I
    .end local v24    # "pid":I
    .end local v26    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .restart local v16    # "i":I
    .restart local v23    # "parentPid":I
    :cond_a
    monitor-exit p0

    .line 5149
    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    .line 5150
    .local v17, "info":Ljava/lang/StringBuilder;
    const/4 v2, 0x0

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 5151
    const-string/jumbo v2, "ANR in "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5152
    if-eqz p2, :cond_b

    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    if-eqz v2, :cond_b

    .line 5153
    const-string/jumbo v2, " ("

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5155
    :cond_b
    const-string/jumbo v2, "\n"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5156
    const-string/jumbo v2, "PID: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5157
    if-eqz p5, :cond_c

    .line 5158
    const-string/jumbo v2, "Reason: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5160
    :cond_c
    if-eqz p3, :cond_d

    move-object/from16 v0, p3

    move-object/from16 v1, p2

    if-eq v0, v1, :cond_d

    .line 5161
    const-string/jumbo v2, "Parent: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p3

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5164
    :cond_d
    new-instance v25, Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v2, 0x1

    move-object/from16 v0, v25

    invoke-direct {v0, v2}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    .line 5167
    .local v25, "processCpuTracker":Lcom/android/internal/os/ProcessCpuTracker;
    sget-object v2, Lcom/android/server/Watchdog;->NATIVE_STACKS_OF_INTEREST:[Ljava/lang/String;

    .line 5166
    const/4 v3, 0x1

    move-object/from16 v0, v25

    move-object/from16 v1, v18

    invoke-static {v3, v15, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;

    move-result-object v10

    .line 5169
    .local v10, "tracesFile":Ljava/io/File;
    const/4 v9, 0x0

    .line 5171
    .local v9, "cpuInfo":Ljava/lang/String;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 5172
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v3

    .line 5173
    :try_start_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    move-result-object v9

    .local v9, "cpuInfo":Ljava/lang/String;
    monitor-exit v3

    .line 5175
    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentLoad()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5176
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5179
    move-object/from16 v0, v25

    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5181
    const-string/jumbo v2, "ActivityManager"

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5182
    if-nez v10, :cond_e

    .line 5184
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v3, 0x3

    invoke-static {v2, v3}, Landroid/os/Process;->sendSignal(II)V

    .line 5187
    :cond_e
    const-string/jumbo v3, "anr"

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 5188
    const/4 v11, 0x0

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p5

    .line 5187
    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 5190
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_10

    .line 5193
    :try_start_7
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v3, v4, v5}, Landroid/app/IActivityController;->appNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v27

    .line 5194
    .restart local v27    # "res":I
    if-eqz v27, :cond_10

    .line 5195
    if-gez v27, :cond_f

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_f

    .line 5196
    const-string/jumbo v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    .line 5202
    :goto_3
    return-void

    .line 5172
    .end local v27    # "res":I
    .local v9, "cpuInfo":Ljava/lang/String;
    :catchall_1
    move-exception v2

    monitor-exit v3

    throw v2

    .line 5198
    .local v9, "cpuInfo":Ljava/lang/String;
    .restart local v27    # "res":I
    :cond_f
    :try_start_8
    monitor-enter p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1

    .line 5199
    :try_start_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActiveServices;->scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    :try_start_a
    monitor-exit p0
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1

    goto :goto_3

    .line 5204
    .end local v27    # "res":I
    :catch_1
    move-exception v14

    .line 5205
    .restart local v14    # "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 5206
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 5211
    .end local v14    # "e":Landroid/os/RemoteException;
    :cond_10
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    .line 5212
    const-string/jumbo v3, "anr_show_background"

    const/4 v4, 0x0

    .line 5211
    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_14

    const/16 v28, 0x1

    .line 5214
    .local v28, "showBackground":Z
    :goto_4
    monitor-enter p0

    .line 5215
    :try_start_b
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteProcessAnr(Ljava/lang/String;I)V

    .line 5217
    if-nez v28, :cond_11

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v2

    if-eqz v2, :cond_15

    .line 5224
    :cond_11
    if-eqz p2, :cond_16

    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    move-object v3, v2

    .line 5225
    :goto_5
    if-eqz p5, :cond_17

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "ANR "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 5226
    :goto_6
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 5223
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 5229
    const-string/jumbo v2, "dalvik.vm.stack-trace-file"

    const/4 v3, 0x0

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v30

    .line 5230
    .local v30, "tracesPath":Ljava/lang/String;
    if-eqz v30, :cond_12

    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->length()I

    move-result v2

    if-eqz v2, :cond_12

    .line 5231
    new-instance v29, Ljava/io/File;

    invoke-direct/range {v29 .. v30}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 5233
    .local v29, "traceRenameFile":Ljava/io/File;
    const-string/jumbo v2, "."

    move-object/from16 v0, v30

    invoke-virtual {v0, v2}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v19

    .line 5234
    .local v19, "lpos":I
    const/4 v2, -0x1

    move/from16 v0, v19

    if-eq v2, v0, :cond_18

    .line 5235
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const/4 v3, 0x0

    move-object/from16 v0, v30

    move/from16 v1, v19

    invoke-virtual {v0, v3, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "_"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "_"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTraceDateFormat:Ljava/text/SimpleDateFormat;

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v30

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v22

    .line 5239
    .local v22, "newTracesPath":Ljava/lang/String;
    :goto_7
    new-instance v2, Ljava/io/File;

    move-object/from16 v0, v22

    invoke-direct {v2, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    move-object/from16 v0, v29

    invoke-virtual {v0, v2}, Ljava/io/File;->renameTo(Ljava/io/File;)Z

    .line 5243
    .end local v19    # "lpos":I
    .end local v22    # "newTracesPath":Ljava/lang/String;
    .end local v29    # "traceRenameFile":Ljava/io/File;
    :cond_12
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v21

    .line 5244
    .local v21, "msg":Landroid/os/Message;
    new-instance v20, Ljava/util/HashMap;

    invoke-direct/range {v20 .. v20}, Ljava/util/HashMap;-><init>()V

    .line 5245
    .local v20, "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const/4 v2, 0x2

    move-object/from16 v0, v21

    iput v2, v0, Landroid/os/Message;->what:I

    .line 5246
    move-object/from16 v0, v20

    move-object/from16 v1, v21

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5247
    if-eqz p4, :cond_19

    const/4 v2, 0x1

    :goto_8
    move-object/from16 v0, v21

    iput v2, v0, Landroid/os/Message;->arg1:I

    .line 5248
    const-string/jumbo v2, "app"

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5249
    if-eqz p2, :cond_13

    .line 5250
    const-string/jumbo v2, "activity"

    move-object/from16 v0, v20

    move-object/from16 v1, p2

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5253
    :cond_13
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v21

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    monitor-exit p0

    .line 5078
    return-void

    .line 5198
    .end local v20    # "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v21    # "msg":Landroid/os/Message;
    .end local v28    # "showBackground":Z
    .end local v30    # "tracesPath":Ljava/lang/String;
    .restart local v27    # "res":I
    :catchall_2
    move-exception v2

    :try_start_c
    monitor-exit p0

    throw v2
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_1

    .line 5211
    .end local v27    # "res":I
    :cond_14
    const/16 v28, 0x0

    .restart local v28    # "showBackground":Z
    goto/16 :goto_4

    .line 5217
    :cond_15
    :try_start_d
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_11

    .line 5218
    const-string/jumbo v2, "bg anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    monitor-exit p0

    .line 5219
    return-void

    .line 5224
    :cond_16
    const/4 v2, 0x0

    move-object v3, v2

    goto/16 :goto_5

    .line 5225
    :cond_17
    :try_start_e
    const-string/jumbo v2, "ANR"

    goto/16 :goto_6

    .line 5237
    .restart local v19    # "lpos":I
    .restart local v29    # "traceRenameFile":Ljava/io/File;
    .restart local v30    # "tracesPath":Ljava/lang/String;
    :cond_18
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v30

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "_"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    move-result-object v22

    .restart local v22    # "newTracesPath":Ljava/lang/String;
    goto/16 :goto_7

    .line 5247
    .end local v19    # "lpos":I
    .end local v22    # "newTracesPath":Ljava/lang/String;
    .end local v29    # "traceRenameFile":Ljava/io/File;
    .restart local v20    # "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .restart local v21    # "msg":Landroid/os/Message;
    :cond_19
    const/4 v2, 0x0

    goto :goto_8

    .line 5214
    .end local v20    # "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v21    # "msg":Landroid/os/Message;
    .end local v30    # "tracesPath":Ljava/lang/String;
    :catchall_3
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 10
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    .line 10252
    const-string/jumbo v0, "android.permission.REMOVE_TASKS"

    const-string/jumbo v2, "appNotRespondingViaProvider()"

    .line 10251
    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    move-object v6, p1

    .line 10254
    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 10255
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v6, :cond_0

    .line 10256
    const-string/jumbo v0, "ActivityManager"

    const-string/jumbo v2, "ContentProviderConnection is null"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10257
    return-void

    .line 10260
    :cond_0
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v1, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 10261
    .local v1, "host":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    .line 10262
    const-string/jumbo v0, "ActivityManager"

    const-string/jumbo v2, "Failed to find hosting ProcessRecord"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10263
    return-void

    .line 10266
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 10268
    .local v8, "token":J
    :try_start_0
    const-string/jumbo v5, "ContentProvider not responding"

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10270
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10250
    return-void

    .line 10269
    :catchall_0
    move-exception v0

    .line 10270
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10269
    throw v0
.end method

.method final applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    const/4 v2, 0x0

    .line 2861
    if-eqz p1, :cond_0

    iget-boolean v0, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    .line 2862
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2863
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    if-eqz v0, :cond_1

    const/4 v1, 0x1

    :goto_1
    const/16 v5, 0x25

    invoke-virtual {v4, v5, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    .line 2862
    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 2856
    return-void

    .line 2861
    :cond_0
    const/4 v0, 0x0

    .local v0, "nextState":Z
    goto :goto_0

    .end local v0    # "nextState":Z
    :cond_1
    move v1, v2

    .line 2863
    goto :goto_1
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;)V
    .locals 4
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 6401
    monitor-enter p0

    .line 6402
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 6403
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6404
    .local v2, "origId":J
    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;I)Z

    .line 6405
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 6400
    return-void

    .line 6401
    .end local v0    # "callingPid":I
    .end local v2    # "origId":J
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final backgroundResourcesReleased(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6709
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6711
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6712
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6713
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6714
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->backgroundResourcesReleased()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6718
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6708
    return-void

    .line 6711
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6717
    :catchall_1
    move-exception v3

    .line 6718
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6717
    throw v3
.end method

.method backgroundServicesFinishedLocked(I)V
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 17326
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    array-length v3, v2

    :goto_0
    if-ge v1, v3, :cond_0

    aget-object v0, v2, v1

    .line 17327
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    .line 17326
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 17325
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 8
    .param p1, "agentPackageName"    # Ljava/lang/String;
    .param p2, "agent"    # Landroid/os/IBinder;

    .prologue
    .line 16359
    monitor-enter p0

    .line 16360
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 16361
    const-string/jumbo v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Backup agent created for "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " but not requested!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 16362
    return-void

    :cond_0
    monitor-exit p0

    .line 16366
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 16369
    .local v4, "oldIdent":J
    :try_start_1
    const-string/jumbo v3, "backup"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 16368
    invoke-static {v3}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 16370
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    invoke-interface {v0, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 16377
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16355
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    :goto_0
    return-void

    .line 16359
    .end local v4    # "oldIdent":J
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3

    .line 16373
    .restart local v4    # "oldIdent":J
    :catch_0
    move-exception v2

    .line 16374
    .local v2, "e":Ljava/lang/Exception;
    :try_start_2
    const-string/jumbo v3, "ActivityManager"

    const-string/jumbo v6, "Exception trying to deliver BackupAgent binding: "

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16375
    invoke-virtual {v2}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16377
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16371
    .end local v2    # "e":Ljava/lang/Exception;
    :catch_1
    move-exception v1

    .line 16377
    .local v1, "e":Landroid/os/RemoteException;
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16376
    .end local v1    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v3

    .line 16377
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16376
    throw v3
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .prologue
    .line 2696
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2695
    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 2
    .param p1, "onBattery"    # Z

    .prologue
    .line 2703
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2704
    monitor-enter p0

    .line 2705
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 2706
    :try_start_1
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 2700
    return-void

    .line 2705
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v0

    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 2704
    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public batterySendBroadcast(Landroid/content/Intent;)V
    .locals 17
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 2713
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 2714
    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    .line 2715
    const/4 v14, -0x1

    const/16 v15, 0x3e8

    const/16 v16, -0x1

    move-object/from16 v0, p0

    move-object/from16 v3, p1

    .line 2713
    invoke-direct/range {v0 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 2712
    return-void
.end method

.method public bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
    .locals 20
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "backupMode"    # I

    .prologue
    .line 16282
    const-string/jumbo v4, "android.permission.CONFIRM_FULL_BACKUP"

    const-string/jumbo v5, "bindBackupAgent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16284
    monitor-enter p0

    .line 16286
    const/16 v18, 0x0

    .line 16287
    .local v18, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 16288
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16289
    :try_start_1
    move-object/from16 v0, p1

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v19

    invoke-virtual {v0, v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v18

    .local v18, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :try_start_2
    monitor-exit v19
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16294
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 16295
    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v6, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    const/4 v7, 0x0

    .line 16294
    invoke-interface {v4, v5, v7, v6}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 16302
    :goto_0
    :try_start_4
    new-instance v17, Lcom/android/server/am/BackupRecord;

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    move-object/from16 v2, p1

    move/from16 v3, p2

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/BackupRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/pm/ApplicationInfo;I)V

    .line 16303
    .local v17, "r":Lcom/android/server/am/BackupRecord;
    if-nez p2, :cond_0

    .line 16304
    new-instance v10, Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v10, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16307
    .local v10, "hostingName":Landroid/content/ComponentName;
    :goto_1
    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 16308
    const-string/jumbo v9, "backup"

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object/from16 v4, p0

    move-object/from16 v6, p1

    .line 16307
    invoke-virtual/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v16

    .line 16309
    .local v16, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v16, :cond_1

    .line 16310
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Unable to start backup agent process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v17

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16311
    const/4 v4, 0x0

    monitor-exit p0

    return v4

    .line 16288
    .end local v10    # "hostingName":Landroid/content/ComponentName;
    .end local v16    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "r":Lcom/android/server/am/BackupRecord;
    .local v18, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :catchall_0
    move-exception v4

    :try_start_5
    monitor-exit v19

    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 16284
    .end local v18    # "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v4

    monitor-exit p0

    throw v4

    .line 16297
    .local v18, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catch_0
    move-exception v15

    .line 16298
    .local v15, "e":Ljava/lang/IllegalArgumentException;
    :try_start_6
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Failed trying to unstop package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 16299
    move-object/from16 v0, p1

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 16298
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 16299
    const-string/jumbo v6, ": "

    .line 16298
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    .line 16305
    .end local v15    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v17    # "r":Lcom/android/server/am/BackupRecord;
    :cond_0
    new-instance v10, Landroid/content/ComponentName;

    const-string/jumbo v4, "android"

    const-string/jumbo v5, "FullBackupAgent"

    invoke-direct {v10, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .restart local v10    # "hostingName":Landroid/content/ComponentName;
    goto :goto_1

    .line 16314
    .restart local v16    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    move-object/from16 v0, v16

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 16315
    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16316
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 16319
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 16323
    move-object/from16 v0, v16

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    if-eqz v4, :cond_2

    .line 16326
    :try_start_7
    move-object/from16 v0, v16

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 16327
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v5

    .line 16326
    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-interface {v4, v0, v5, v1}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :cond_2
    :goto_2
    monitor-exit p0

    .line 16340
    const/4 v4, 0x1

    return v4

    .line 16328
    :catch_1
    move-exception v14

    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_2

    .line 16296
    .end local v10    # "hostingName":Landroid/content/ComponentName;
    .end local v14    # "e":Landroid/os/RemoteException;
    .end local v16    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "r":Lcom/android/server/am/BackupRecord;
    :catch_2
    move-exception v14

    .restart local v14    # "e":Landroid/os/RemoteException;
    goto/16 :goto_0
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I
    .locals 9
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "connection"    # Landroid/app/IServiceConnection;
    .param p6, "flags"    # I
    .param p7, "callingPackage"    # Ljava/lang/String;
    .param p8, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 16214
    const-string/jumbo v0, "bindService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16217
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16218
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16221
    :cond_0
    if-nez p7, :cond_1

    .line 16222
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16225
    :cond_1
    monitor-enter p0

    .line 16226
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 16225
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public bootAnimationComplete()V
    .locals 2

    .prologue
    .line 6620
    monitor-enter p0

    .line 6621
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 6622
    .local v0, "callFinishBooting":Z
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 6624
    if-eqz v0, :cond_0

    .line 6625
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 6618
    :cond_0
    return-void

    .line 6620
    .end local v0    # "callFinishBooting":Z
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 22
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p5, "resultCode"    # I
    .param p6, "resultData"    # Ljava/lang/String;
    .param p7, "resultExtras"    # Landroid/os/Bundle;
    .param p8, "requiredPermissions"    # [Ljava/lang/String;
    .param p9, "appOp"    # I
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "serialized"    # Z
    .param p12, "sticky"    # Z
    .param p13, "userId"    # I

    .prologue
    .line 17244
    const-string/jumbo v2, "broadcastIntent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 17245
    monitor-enter p0

    .line 17246
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p2

    .line 17248
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 17249
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v16

    .line 17250
    .local v16, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v17

    .line 17251
    .local v17, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 17253
    .local v20, "origId":J
    if-eqz v3, :cond_0

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 17255
    :goto_0
    const/4 v13, 0x0

    move-object/from16 v2, p0

    move-object/from16 v5, p2

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    move-object/from16 v11, p8

    move/from16 v12, p9

    move/from16 v14, p11

    move/from16 v15, p12

    move/from16 v18, p13

    .line 17252
    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v19

    .line 17257
    .local v19, "res":I
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17258
    return v19

    .line 17253
    .end local v19    # "res":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 17245
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v16    # "callingPid":I
    .end local v17    # "callingUid":I
    .end local v20    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    .locals 22
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermission"    # Ljava/lang/String;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "serialized"    # Z
    .param p12, "sticky"    # Z
    .param p13, "userId"    # I

    .prologue
    .line 17268
    monitor-enter p0

    .line 17269
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p3

    .line 17271
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 17272
    .local v20, "origId":J
    if-nez p9, :cond_0

    const/4 v11, 0x0

    .line 17274
    :goto_0
    const/4 v3, 0x0

    .line 17276
    const/4 v12, -0x1

    .line 17277
    const/16 v16, -0x1

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move-object/from16 v13, p10

    move/from16 v14, p11

    move/from16 v15, p12

    move/from16 v17, p2

    move/from16 v18, p13

    .line 17274
    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v19

    .line 17278
    .local v19, "res":I
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17279
    return v19

    .line 17273
    .end local v19    # "res":I
    :cond_0
    const/4 v2, 0x1

    :try_start_1
    new-array v11, v2, [Ljava/lang/String;

    const/4 v2, 0x0

    aput-object p9, v11, v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v11, "requiredPermissions":[Ljava/lang/String;
    goto :goto_0

    .line 17268
    .end local v11    # "requiredPermissions":[Ljava/lang/String;
    .end local v20    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 3
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 464
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x10000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_0

    const/4 v0, 0x1

    .line 468
    .local v0, "isFg":Z
    :goto_0
    if-eqz v0, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    :goto_1
    return-object v1

    .line 464
    .end local v0    # "isFg":Z
    :cond_0
    const/4 v0, 0x0

    .restart local v0    # "isFg":Z
    goto :goto_0

    .line 468
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 8
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 6939
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 6940
    return-void

    .line 6942
    :cond_0
    monitor-enter p0

    .line 6943
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6945
    .local v3, "rec":Lcom/android/server/am/PendingIntentRecord;
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 6946
    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    .line 6945
    invoke-interface {v5, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    .line 6947
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-static {v4, v5}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v5

    if-nez v5, :cond_1

    .line 6948
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: cancelIntentSender() from pid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6949
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 6948
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6950
    const-string/jumbo v6, ", uid="

    .line 6948
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6950
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 6948
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6951
    const-string/jumbo v6, " is not allowed to cancel packges "

    .line 6948
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6952
    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    .line 6948
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 6953
    .local v2, "msg":Ljava/lang/String;
    const-string/jumbo v5, "ActivityManager"

    invoke-static {v5, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6954
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6956
    .end local v2    # "msg":Ljava/lang/String;
    .end local v4    # "uid":I
    :catch_0
    move-exception v1

    .line 6957
    .local v1, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6942
    .end local v1    # "e":Landroid/os/RemoteException;
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 6959
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .restart local v4    # "uid":I
    :cond_1
    const/4 v5, 0x1

    :try_start_3
    invoke-virtual {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 6938
    return-void
.end method

.method cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
    .locals 2
    .param p1, "rec"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "cleanActivity"    # Z

    .prologue
    .line 6964
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 6965
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6966
    if-eqz p2, :cond_0

    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_0

    .line 6967
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 6963
    :cond_0
    return-void
.end method

.method checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v3, 0x0

    .line 15925
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    .line 15926
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderRecord;

    .line 15927
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 15928
    const/4 v2, 0x1

    return v2

    .line 15925
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 15931
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_1
    return v3
.end method

.method checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z
    .locals 8
    .param p1, "sourcePid"    # I
    .param p2, "sourceUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "callingUid"    # I
    .param p5, "name"    # Ljava/lang/String;

    .prologue
    const/4 v7, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x1

    .line 10724
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    cmp-long v0, v0, v2

    if-gez v0, :cond_0

    .line 10725
    return v5

    .line 10729
    :cond_0
    const-string/jumbo v1, "android.permission.STOP_APP_SWITCHES"

    move-object v0, p0

    move v2, p1

    move v3, p2

    .line 10728
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v6

    .line 10731
    .local v6, "perm":I
    if-nez v6, :cond_1

    .line 10732
    return v5

    .line 10737
    :cond_1
    if-eq p4, v4, :cond_2

    if-eq p4, p2, :cond_2

    .line 10739
    const-string/jumbo v1, "android.permission.STOP_APP_SWITCHES"

    move-object v0, p0

    move v2, p3

    move v3, p4

    .line 10738
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v6

    .line 10741
    if-nez v6, :cond_2

    .line 10742
    return v5

    .line 10746
    :cond_2
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " request from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10747
    return v7
.end method

.method checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z
    .locals 5
    .param p1, "callingUid"    # I
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    const/4 v4, 0x0

    .line 9540
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .line 9541
    .local v2, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v2, :cond_2

    .line 9542
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 9543
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 9544
    .local v0, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v3, p3, :cond_1

    if-eqz p4, :cond_1

    .line 9542
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 9545
    :cond_1
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {p0, v3, p2}, Lcom/android/server/am/ActivityManagerService;->matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 9546
    const/4 v3, 0x1

    return v3

    .line 9551
    .end local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v1    # "i":I
    :cond_2
    return v4
.end method

.method checkCallingPermission(Ljava/lang/String;)I
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;

    .prologue
    .line 7316
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7317
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    .line 7315
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    return v0
.end method

.method checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 1
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "owningUid"    # I
    .param p5, "exported"    # Z

    .prologue
    .line 7266
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v0, :cond_0

    .line 7267
    const/4 v0, 0x0

    return v0

    .line 7269
    :cond_0
    invoke-static {p1, p3, p4, p5}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    return v0
.end method

.method final checkExcessivePowerUsageLocked(Z)V
    .locals 28
    .param p1, "doKills"    # Z

    .prologue
    .line 18844
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 18846
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v5

    .line 18847
    .local v5, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    move/from16 v24, p1

    .line 18848
    .local v24, "doWakeKills":Z
    move/from16 v12, p1

    .line 18849
    .local v12, "doCpuKills":Z
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_0

    .line 18850
    const/16 v24, 0x0

    .line 18852
    .end local v24    # "doWakeKills":Z
    :cond_0
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_1

    .line 18853
    const/4 v12, 0x0

    .line 18855
    .end local v12    # "doCpuKills":Z
    :cond_1
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn()Z

    move-result v6

    if-eqz v6, :cond_2

    .line 18856
    const/16 v24, 0x0

    .line 18858
    :cond_2
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v20

    .line 18859
    .local v20, "curRealtime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    sub-long v8, v20, v6

    .line 18860
    .local v8, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v22

    .line 18861
    .local v22, "curUptime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v16, v22, v6

    .line 18862
    .local v16, "uptimeSince":J
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    .line 18863
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 18864
    const-wide/32 v6, 0x493e0

    cmp-long v6, v8, v6

    if-gez v6, :cond_3

    .line 18865
    const/16 v24, 0x0

    .line 18867
    :cond_3
    const-wide/32 v6, 0x493e0

    cmp-long v6, v16, v6

    if-gez v6, :cond_4

    .line 18868
    const/4 v12, 0x0

    .line 18870
    :cond_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v25

    .line 18871
    .local v25, "i":I
    :cond_5
    :goto_0
    if-lez v25, :cond_8

    .line 18872
    add-int/lit8 v25, v25, -0x1

    .line 18873
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 18874
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v7, 0xc

    if-lt v6, v7, :cond_5

    .line 18876
    monitor-enter v5

    .line 18877
    :try_start_0
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 18878
    iget v7, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 18877
    move-wide/from16 v0, v20

    invoke-virtual {v5, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v26

    .local v26, "wtime":J
    monitor-exit v5

    .line 18880
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    sub-long v10, v26, v6

    .line 18881
    .local v10, "wtimeUsed":J
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long v18, v6, v14

    .line 18909
    .local v18, "cputimeUsed":J
    if-eqz v24, :cond_6

    const-wide/16 v6, 0x0

    cmp-long v6, v8, v6

    if-lez v6, :cond_6

    .line 18910
    const-wide/16 v6, 0x64

    mul-long/2addr v6, v10

    div-long/2addr v6, v8

    const-wide/16 v14, 0x32

    cmp-long v6, v6, v14

    if-ltz v6, :cond_6

    .line 18911
    monitor-enter v5

    .line 18912
    :try_start_1
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual/range {v5 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveWakeLocked(ILjava/lang/String;JJ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit v5

    .line 18915
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "excessive wake held "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 18916
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveWake(Landroid/util/ArrayMap;)V

    goto :goto_0

    .line 18876
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :catchall_0
    move-exception v6

    monitor-exit v5

    throw v6

    .line 18911
    .restart local v10    # "wtimeUsed":J
    .restart local v18    # "cputimeUsed":J
    .restart local v26    # "wtime":J
    :catchall_1
    move-exception v6

    monitor-exit v5

    throw v6

    .line 18917
    :cond_6
    if-eqz v12, :cond_7

    const-wide/16 v6, 0x0

    cmp-long v6, v16, v6

    if-lez v6, :cond_7

    .line 18918
    const-wide/16 v6, 0x64

    mul-long v6, v6, v18

    div-long v6, v6, v16

    const-wide/16 v14, 0x19

    cmp-long v6, v6, v14

    if-ltz v6, :cond_7

    .line 18919
    monitor-enter v5

    .line 18920
    :try_start_2
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v14, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v15, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v13, v5

    invoke-virtual/range {v13 .. v19}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    monitor-exit v5

    .line 18923
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "excessive cpu "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v18

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v16

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 18924
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveCpu(Landroid/util/ArrayMap;)V

    goto/16 :goto_0

    .line 18919
    :catchall_2
    move-exception v6

    monitor-exit v5

    throw v6

    .line 18926
    :cond_7
    move-wide/from16 v0, v26

    iput-wide v0, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    .line 18927
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iput-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    goto/16 :goto_0

    .line 18843
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :cond_8
    return-void
.end method

.method public checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;II)I
    .locals 6
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 7672
    const-string/jumbo v0, "checkGrantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7673
    monitor-enter p0

    .line 7675
    :try_start_0
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    const/4 v5, -0x1

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move v4, p4

    .line 7674
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 7673
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .locals 24
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "mode"    # I
    .param p5, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p6, "targetUserId"    # I

    .prologue
    .line 7753
    if-nez p2, :cond_0

    .line 7754
    new-instance v3, Ljava/lang/NullPointerException;

    const-string/jumbo v4, "targetPkg"

    invoke-direct {v3, v4}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 7757
    :cond_0
    if-nez p3, :cond_1

    .line 7758
    const/4 v3, 0x0

    return-object v3

    .line 7760
    :cond_1
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v18

    .line 7761
    .local v18, "data":Landroid/net/Uri;
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getClipData()Landroid/content/ClipData;

    move-result-object v16

    .line 7762
    .local v16, "clip":Landroid/content/ClipData;
    if-nez v18, :cond_2

    if-nez v16, :cond_2

    .line 7763
    const/4 v3, 0x0

    return-object v3

    .line 7766
    :cond_2
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getContentUserHint()I

    move-result v17

    .line 7767
    .local v17, "contentUserHint":I
    const/4 v3, -0x2

    move/from16 v0, v17

    if-ne v0, v3, :cond_3

    .line 7768
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    .line 7770
    :cond_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v22

    .line 7772
    .local v22, "pm":Landroid/content/pm/IPackageManager;
    if-eqz p5, :cond_9

    .line 7773
    move-object/from16 v0, p5

    iget v8, v0, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    .line 7787
    .local v8, "targetUid":I
    :cond_4
    if-eqz v18, :cond_6

    .line 7788
    invoke-static/range {v17 .. v18}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .local v6, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 7789
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 7791
    if-lez v8, :cond_6

    .line 7792
    if-nez p5, :cond_5

    .line 7793
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 7795
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_5
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 7798
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_6
    if-eqz v16, :cond_b

    .line 7799
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_0
    invoke-virtual/range {v16 .. v16}, Landroid/content/ClipData;->getItemCount()I

    move-result v3

    move/from16 v0, v20

    if-ge v0, v3, :cond_b

    .line 7800
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getUri()Landroid/net/Uri;

    move-result-object v23

    .line 7801
    .local v23, "uri":Landroid/net/Uri;
    if-eqz v23, :cond_a

    .line 7802
    move/from16 v0, v17

    move-object/from16 v1, v23

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .restart local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 7803
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 7805
    if-lez v8, :cond_8

    .line 7806
    if-nez p5, :cond_7

    .line 7807
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 7809
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_7
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 7799
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_8
    :goto_1
    add-int/lit8 v20, v20, 0x1

    goto :goto_0

    .line 7776
    .end local v8    # "targetUid":I
    .end local v20    # "i":I
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_9
    :try_start_0
    move-object/from16 v0, v22

    move-object/from16 v1, p2

    move/from16 v2, p6

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 7780
    .restart local v8    # "targetUid":I
    if-gez v8, :cond_4

    .line 7784
    const/4 v3, 0x0

    return-object v3

    .line 7777
    .end local v8    # "targetUid":I
    :catch_0
    move-exception v19

    .line 7778
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v3, 0x0

    return-object v3

    .line 7812
    .end local v19    # "ex":Landroid/os/RemoteException;
    .restart local v8    # "targetUid":I
    .restart local v20    # "i":I
    .restart local v23    # "uri":Landroid/net/Uri;
    :cond_a
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getIntent()Landroid/content/Intent;

    move-result-object v12

    .line 7813
    .local v12, "clipIntent":Landroid/content/Intent;
    if-eqz v12, :cond_8

    move-object/from16 v9, p0

    move/from16 v10, p1

    move-object/from16 v11, p2

    move/from16 v13, p4

    move-object/from16 v14, p5

    move/from16 v15, p6

    .line 7814
    invoke-virtual/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v21

    .line 7816
    .local v21, "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-eqz v21, :cond_8

    .line 7817
    move-object/from16 p5, v21

    goto :goto_1

    .line 7824
    .end local v12    # "clipIntent":Landroid/content/Intent;
    .end local v20    # "i":I
    .end local v21    # "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_b
    return-object p5
.end method

.method checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I
    .locals 22
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "lastTargetUid"    # I

    .prologue
    .line 7548
    invoke-static/range {p4 .. p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v4

    if-nez v4, :cond_0

    .line 7549
    const/4 v4, -0x1

    return v4

    .line 7552
    :cond_0
    if-eqz p2, :cond_1

    .line 7557
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 7560
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string/jumbo v4, "content"

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    .line 7563
    const/4 v4, -0x1

    return v4

    .line 7566
    :cond_2
    move-object/from16 v0, p3

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v4}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v18

    .line 7567
    .local v18, "authority":Ljava/lang/String;
    move-object/from16 v0, p3

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v6

    .line 7568
    .local v6, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v6, :cond_3

    .line 7569
    const-string/jumbo v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "No content provider found for permission check: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7570
    move-object/from16 v0, p3

    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v9}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    .line 7569
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7571
    const/4 v4, -0x1

    return v4

    .line 7574
    :cond_3
    move/from16 v8, p5

    .line 7575
    .local v8, "targetUid":I
    if-gez v8, :cond_4

    if-eqz p2, :cond_4

    .line 7577
    :try_start_0
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-interface {v5, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 7578
    if-gez v8, :cond_4

    .line 7581
    const/4 v4, -0x1

    return v4

    .line 7583
    :catch_0
    move-exception v19

    .line 7584
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v4, -0x1

    return v4

    .line 7588
    .end local v19    # "ex":Landroid/os/RemoteException;
    :cond_4
    if-ltz v8, :cond_5

    move-object/from16 v4, p0

    move-object/from16 v7, p3

    move/from16 v9, p4

    .line 7590
    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-eqz v4, :cond_8

    .line 7594
    const/4 v4, -0x1

    return v4

    .line 7598
    :cond_5
    iget-boolean v0, v6, Landroid/content/pm/ProviderInfo;->exported:Z

    move/from16 v17, v0

    .line 7599
    .local v17, "allowed":Z
    and-int/lit8 v4, p4, 0x1

    if-eqz v4, :cond_6

    .line 7600
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v4, :cond_6

    .line 7601
    const/16 v17, 0x0

    .line 7604
    .end local v17    # "allowed":Z
    :cond_6
    and-int/lit8 v4, p4, 0x2

    if-eqz v4, :cond_7

    .line 7605
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v4, :cond_7

    .line 7606
    const/16 v17, 0x0

    .line 7609
    :cond_7
    if-eqz v17, :cond_8

    .line 7610
    const/4 v4, -0x1

    return v4

    .line 7620
    :cond_8
    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p3

    iget v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v4, v7, :cond_9

    .line 7622
    const/4 v15, 0x0

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    .line 7621
    invoke-direct/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v21

    .line 7625
    :goto_0
    if-nez v21, :cond_d

    .line 7626
    iget-boolean v4, v6, Landroid/content/pm/ProviderInfo;->grantUriPermissions:Z

    if-nez v4, :cond_a

    .line 7627
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7628
    const-string/jumbo v9, "/"

    .line 7627
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7628
    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    .line 7627
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7629
    const-string/jumbo v9, " does not allow granting of Uri permissions (uri "

    .line 7627
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7630
    const-string/jumbo v9, ")"

    .line 7627
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7620
    :cond_9
    const/16 v21, 0x0

    .local v21, "specialCrossUserGrant":Z
    goto :goto_0

    .line 7632
    .end local v21    # "specialCrossUserGrant":Z
    :cond_a
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    if-eqz v4, :cond_d

    .line 7633
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    array-length v0, v4

    move/from16 v16, v0

    .line 7634
    .local v16, "N":I
    const/16 v17, 0x0

    .line 7635
    .local v17, "allowed":Z
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_1
    move/from16 v0, v20

    move/from16 v1, v16

    if-ge v0, v1, :cond_b

    .line 7636
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    if-eqz v4, :cond_c

    .line 7637
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Landroid/os/PatternMatcher;->match(Ljava/lang/String;)Z

    move-result v4

    .line 7636
    if-eqz v4, :cond_c

    .line 7638
    const/16 v17, 0x1

    .line 7642
    :cond_b
    if-nez v17, :cond_d

    .line 7643
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7644
    const-string/jumbo v9, "/"

    .line 7643
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7644
    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    .line 7643
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7645
    const-string/jumbo v9, " does not allow granting of permission to path of Uri "

    .line 7643
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7635
    :cond_c
    add-int/lit8 v20, v20, 0x1

    goto :goto_1

    .line 7653
    .end local v16    # "N":I
    .end local v17    # "allowed":Z
    .end local v20    # "i":I
    :cond_d
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    const/16 v7, 0x3e8

    if-eq v4, v7, :cond_e

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    .line 7654
    invoke-direct/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_e

    .line 7656
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    move/from16 v2, p1

    move/from16 v3, p4

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_e

    .line 7657
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Uid "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 7658
    const-string/jumbo v9, " does not have permission to uri "

    .line 7657
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7662
    :cond_e
    return v8
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 6
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I

    .prologue
    const/4 v4, -0x1

    .line 7284
    if-nez p1, :cond_0

    .line 7285
    return v4

    .line 7287
    :cond_0
    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    return v0
.end method

.method public checkPermissionWithToken(Ljava/lang/String;IILandroid/os/IBinder;)I
    .locals 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, -0x1

    .line 7292
    if-nez p1, :cond_0

    .line 7293
    return v4

    .line 7299
    :cond_0
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 7300
    .local v6, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v6, :cond_1

    iget-object v0, v6, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v0, p4, :cond_1

    .line 7301
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "checkComponentPermission() adjusting {pid,uid} to {"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7302
    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 7301
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7302
    const-string/jumbo v2, ","

    .line 7301
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7302
    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 7301
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7302
    const-string/jumbo v2, "}"

    .line 7301
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 7303
    iget p3, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 7304
    iget p2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 7307
    :cond_1
    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    return v0
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 4
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I
    .param p6, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 7516
    const-string/jumbo v2, "checkUriPermission"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7520
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 7521
    .local v0, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v0, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v2, p6, :cond_0

    .line 7522
    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 7523
    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 7527
    :cond_0
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v2, :cond_1

    .line 7528
    return v1

    .line 7530
    :cond_1
    monitor-enter p0

    .line 7531
    :try_start_0
    new-instance v2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v3, 0x0

    invoke-direct {v2, p5, p1, v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    if-eqz v2, :cond_2

    :goto_0
    monitor-exit p0

    return v1

    .line 7533
    :cond_2
    const/4 v1, -0x1

    goto :goto_0

    .line 7530
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "alwaysBad"    # Z

    .prologue
    .line 15939
    const/4 v2, 0x0

    .line 15940
    .local v2, "restart":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 15941
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderRecord;

    .line 15942
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v3, p1, :cond_1

    .line 15943
    if-nez p2, :cond_0

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-eqz v3, :cond_2

    .line 15946
    :cond_0
    const/4 v3, 0x1

    invoke-direct {p0, p1, v0, v3}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 15940
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 15943
    :cond_2
    invoke-virtual {v0}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 15944
    const/4 v2, 0x1

    goto :goto_1

    .line 15950
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_3
    return v2
.end method

.method public clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)Z
    .locals 29
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "observer"    # Landroid/content/pm/IPackageDataObserver;
    .param p3, "userId"    # I

    .prologue
    .line 5284
    const-string/jumbo v4, "clearApplicationUserData"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5285
    if-eqz p1, :cond_0

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 5286
    new-instance v4, Ljava/lang/SecurityException;

    const-string/jumbo v7, "Clearing DeviceOwner data is forbidden."

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 5288
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 5289
    .local v6, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 5291
    .local v5, "pid":I
    const-string/jumbo v10, "clearApplicationUserData"

    const/4 v8, 0x0

    const/4 v9, 0x2

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    .line 5290
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 5292
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v22

    .line 5294
    .local v22, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v26

    .line 5295
    .local v26, "pm":Landroid/content/pm/IPackageManager;
    const/16 v25, -0x1

    .line 5296
    .local v25, "pkgUid":I
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5298
    :try_start_1
    move-object/from16 v0, v26

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v25

    .line 5301
    :goto_0
    const/4 v4, -0x1

    move/from16 v0, v25

    if-ne v0, v4, :cond_2

    .line 5302
    :try_start_2
    const-string/jumbo v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Invalid packageName: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5303
    if-eqz p2, :cond_1

    .line 5305
    const/4 v4, 0x0

    :try_start_3
    move-object/from16 v0, p2

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v4}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_1
    :goto_1
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5310
    const/4 v4, 0x0

    .line 5351
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5310
    return v4

    .line 5299
    :catch_0
    move-exception v21

    .local v21, "e":Landroid/os/RemoteException;
    goto :goto_0

    .line 5306
    .end local v21    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v21

    .line 5307
    .restart local v21    # "e":Landroid/os/RemoteException;
    :try_start_5
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v7, "Observer no longer exists."

    invoke-static {v4, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_1

    .line 5296
    .end local v21    # "e":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    :try_start_6
    monitor-exit p0

    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 5350
    .end local v25    # "pkgUid":I
    .end local v26    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v4

    .line 5351
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5350
    throw v4

    .line 5312
    .restart local v25    # "pkgUid":I
    .restart local v26    # "pm":Landroid/content/pm/IPackageManager;
    :cond_2
    move/from16 v0, v25

    if-eq v6, v0, :cond_3

    .line 5313
    :try_start_7
    const-string/jumbo v8, "android.permission.CLEAR_APP_USER_DATA"

    .line 5314
    const/4 v11, -0x1

    const/4 v12, 0x1

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    .line 5312
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_5

    .line 5316
    :cond_3
    const-string/jumbo v4, "clear data"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v25

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 5324
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v4

    add-int/lit8 v24, v4, -0x1

    .local v24, "i":I
    :goto_2
    if-ltz v24, :cond_7

    .line 5325
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/am/TaskRecord;

    .line 5327
    .local v28, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v27

    .line 5328
    .local v27, "taskPackageName":Ljava/lang/String;
    move-object/from16 v0, v28

    iget v4, v0, Lcom/android/server/am/TaskRecord;->userId:I

    move/from16 v0, p3

    if-eq v4, v0, :cond_6

    .line 5324
    :cond_4
    :goto_3
    add-int/lit8 v24, v24, -0x1

    goto :goto_2

    .line 5318
    .end local v24    # "i":I
    .end local v27    # "taskPackageName":Ljava/lang/String;
    .end local v28    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_5
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "PID "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, " does not have permission "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 5319
    const-string/jumbo v8, "android.permission.CLEAR_APP_USER_DATA"

    .line 5318
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 5319
    const-string/jumbo v8, " to clear data"

    .line 5318
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 5320
    const-string/jumbo v8, " of package "

    .line 5318
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 5329
    .restart local v24    # "i":I
    .restart local v27    # "taskPackageName":Ljava/lang/String;
    .restart local v28    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_6
    move-object/from16 v0, v27

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 5330
    move-object/from16 v0, v28

    iget v4, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v7, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v7}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto :goto_3

    .end local v27    # "taskPackageName":Ljava/lang/String;
    .end local v28    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_7
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 5336
    :try_start_9
    move-object/from16 v0, v26

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    invoke-interface {v0, v1, v2, v3}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    .line 5338
    monitor-enter p0
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_9} :catch_2
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    .line 5340
    const/4 v4, 0x1

    :try_start_a
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    :try_start_b
    monitor-exit p0

    .line 5343
    new-instance v10, Landroid/content/Intent;

    const-string/jumbo v4, "android.intent.action.PACKAGE_DATA_CLEARED"

    .line 5344
    const-string/jumbo v7, "package"

    const/4 v8, 0x0

    move-object/from16 v0, p1

    invoke-static {v7, v0, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v7

    .line 5343
    invoke-direct {v10, v4, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 5345
    .local v10, "intent":Landroid/content/Intent;
    const-string/jumbo v4, "android.intent.extra.UID"

    move/from16 v0, v25

    invoke-virtual {v10, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5346
    const-string/jumbo v8, "android"

    const/16 v9, 0x3e8

    .line 5347
    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v7, p0

    move/from16 v20, p3

    .line 5346
    invoke-virtual/range {v7 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    .line 5351
    .end local v10    # "intent":Landroid/content/Intent;
    :goto_4
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5353
    const/4 v4, 0x1

    return v4

    .line 5338
    :catchall_2
    move-exception v4

    :try_start_c
    monitor-exit p0

    throw v4
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_2
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 5348
    :catch_2
    move-exception v21

    .restart local v21    # "e":Landroid/os/RemoteException;
    goto :goto_4
.end method

.method final clearFocusedActivity(Lcom/android/server/am/ActivityRecord;)V
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    const/16 v7, 0x35

    const/4 v6, 0x0

    const/4 v5, 0x0

    .line 2804
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v2, p1, :cond_1

    .line 2805
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 2806
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 2807
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 2808
    .local v1, "top":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_0

    iget v2, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    if-eq v2, v3, :cond_0

    .line 2809
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 2810
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2811
    iget v4, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 2810
    invoke-virtual {v3, v7, v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 2812
    iget v2, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    .line 2815
    .end local v1    # "top":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 2816
    const/4 v2, 0x2

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, -0x1

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v6

    const-string/jumbo v3, "NULL"

    const/4 v4, 0x1

    aput-object v3, v2, v4

    const/16 v3, 0x755b

    invoke-static {v3, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 2803
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_1
    return-void
.end method

.method public clearPendingBackup()V
    .locals 2

    .prologue
    .line 16346
    const-string/jumbo v0, "android.permission.BACKUP"

    const-string/jumbo v1, "clearPendingBackup"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16348
    monitor-enter p0

    .line 16349
    const/4 v0, 0x0

    :try_start_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16350
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 16344
    return-void

    .line 16348
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 8
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 5542
    const-string/jumbo v5, "closeSystemDialogs"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5544
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 5545
    .local v2, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 5546
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5548
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 5551
    const/16 v5, 0x2710

    if-lt v4, v5, :cond_0

    .line 5553
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5554
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_3
    monitor-exit v6

    .line 5556
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v6, 0x2

    if-le v5, v6, :cond_0

    .line 5557
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Ignoring closeSystemDialogs "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 5558
    const-string/jumbo v7, " from background process "

    .line 5557
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 5565
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5559
    return-void

    .line 5553
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v5

    :try_start_5
    monitor-exit v6

    throw v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 5548
    :catchall_1
    move-exception v5

    :try_start_6
    monitor-exit p0

    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 5564
    :catchall_2
    move-exception v5

    .line 5565
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5564
    throw v5

    .line 5562
    :cond_0
    :try_start_7
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogsLocked(Ljava/lang/String;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 5565
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5541
    return-void
.end method

.method closeSystemDialogsLocked(Ljava/lang/String;)V
    .locals 18
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 5570
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v1, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5571
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5573
    if-eqz p1, :cond_0

    .line 5574
    const-string/jumbo v1, "reason"

    move-object/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 5576
    :cond_0
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p1

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->closeSystemDialogs(Ljava/lang/String;)V

    .line 5578
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->closeSystemDialogsLocked()V

    .line 5580
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 5581
    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    .line 5582
    const/4 v15, -0x1

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    .line 5580
    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 5569
    return-void
.end method

.method collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 8
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "start"    # I
    .param p3, "allPkgs"    # Z
    .param p4, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "IZ[",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v7, 0x0

    .line 14664
    monitor-enter p0

    .line 14665
    if-eqz p4, :cond_4

    :try_start_0
    array-length v5, p4

    if-le v5, p2, :cond_4

    .line 14666
    aget-object v5, p4, p2

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Ljava/lang/String;->charAt(I)C

    move-result v5

    const/16 v6, 0x2d

    if-eq v5, v6, :cond_4

    .line 14667
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14668
    .local v4, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v2, -0x1

    .line 14670
    .local v2, "pid":I
    :try_start_1
    aget-object v5, p4, p2

    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    .line 14673
    :goto_0
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_1
    if-ltz v1, :cond_3

    .line 14674
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 14675
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v5, v2, :cond_1

    .line 14676
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14673
    :cond_0
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 14677
    :cond_1
    if-eqz p3, :cond_2

    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    if-eqz v5, :cond_2

    .line 14678
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    aget-object v6, p4, p2

    invoke-virtual {v5, v6}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    .line 14677
    if-eqz v5, :cond_2

    .line 14679
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_2

    .line 14664
    .end local v1    # "i":I
    .end local v2    # "pid":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 14680
    .restart local v1    # "i":I
    .restart local v2    # "pid":I
    .restart local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    :try_start_3
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aget-object v6, p4, p2

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 14681
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 14684
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v5

    if-gtz v5, :cond_5

    monitor-exit p0

    .line 14685
    return-object v7

    .line 14688
    .end local v1    # "i":I
    .end local v2    # "pid":I
    .end local v4    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    :try_start_4
    new-instance v4, Ljava/util/ArrayList;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-direct {v4, v5}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .restart local v4    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    monitor-exit p0

    .line 14691
    return-object v4

    .line 14671
    .restart local v2    # "pid":I
    :catch_0
    move-exception v0

    .local v0, "e":Ljava/lang/NumberFormatException;
    goto :goto_0
.end method

.method compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 3709
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    return-object v0
.end method

.method completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V
    .locals 5
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "newUserId"    # I
    .param p3, "clearInitializing"    # Z
    .param p4, "clearSwitching"    # Z

    .prologue
    const/16 v4, 0x38

    const/4 v3, 0x0

    .line 20477
    const/4 v0, 0x0

    .line 20478
    .local v0, "unfrozen":Z
    monitor-enter p0

    .line 20479
    if-eqz p3, :cond_0

    .line 20480
    const/4 v1, 0x0

    :try_start_0
    iput-boolean v1, p1, Lcom/android/server/am/UserState;->initializing:Z

    .line 20481
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    .line 20483
    :cond_0
    if-eqz p4, :cond_1

    .line 20484
    const/4 v1, 0x0

    iput-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    .line 20486
    :cond_1
    iget-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/UserState;->initializing:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v1, :cond_4

    :cond_2
    :goto_0
    monitor-exit p0

    .line 20491
    if-eqz v0, :cond_3

    .line 20492
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 20493
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v4, p2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20496
    :cond_3
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->stopGuestUserIfBackground()V

    .line 20476
    return-void

    .line 20487
    :cond_4
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerService;->stopFreezingScreen()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20488
    const/4 v0, 0x1

    goto :goto_0

    .line 20478
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method continueUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 20472
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, p1, p3, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V

    .line 20471
    return-void
.end method

.method public convertFromTranslucent(Landroid/os/IBinder;)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, 0x0

    .line 11223
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11225
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11226
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    .line 11227
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11239
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11228
    return v4

    .line 11230
    :cond_0
    const/4 v4, 0x1

    :try_start_3
    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v3

    .line 11231
    .local v3, "translucentChanged":Z
    if-eqz v3, :cond_1

    .line 11232
    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStack;->releaseBackgroundResources(Lcom/android/server/am/ActivityRecord;)V

    .line 11233
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 11235
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x1

    invoke-virtual {v4, p1, v5}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11239
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11236
    return v3

    .line 11225
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "translucentChanged":Z
    :catchall_0
    move-exception v4

    :try_start_5
    monitor-exit p0

    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11238
    :catchall_1
    move-exception v4

    .line 11239
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11238
    throw v4
.end method

.method public convertToTranslucent(Landroid/os/IBinder;Landroid/app/ActivityOptions;)Z
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "options"    # Landroid/app/ActivityOptions;

    .prologue
    const/4 v6, 0x0

    .line 11245
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 11247
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11248
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v1

    .line 11249
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11266
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11250
    return v6

    .line 11252
    :cond_0
    :try_start_3
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 11253
    .local v0, "index":I
    if-lez v0, :cond_1

    .line 11254
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    add-int/lit8 v7, v0, -0x1

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityRecord;

    .line 11255
    .local v5, "under":Lcom/android/server/am/ActivityRecord;
    iput-object p2, v5, Lcom/android/server/am/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 11257
    .end local v5    # "under":Lcom/android/server/am/ActivityRecord;
    :cond_1
    const/4 v6, 0x0

    invoke-virtual {v1, v6}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v4

    .line 11258
    .local v4, "translucentChanged":Z
    if-eqz v4, :cond_2

    .line 11259
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v6, v1}, Lcom/android/server/am/ActivityStack;->convertActivityToTranslucent(Lcom/android/server/am/ActivityRecord;)V

    .line 11261
    :cond_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 11262
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v7, 0x0

    invoke-virtual {v6, p1, v7}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11266
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11263
    return v4

    .line 11247
    .end local v0    # "index":I
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "translucentChanged":Z
    :catchall_0
    move-exception v6

    :try_start_5
    monitor-exit p0

    throw v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11265
    :catchall_1
    move-exception v6

    .line 11266
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11265
    throw v6
.end method

.method public crashApplication(IILjava/lang/String;Ljava/lang/String;)V
    .locals 10
    .param p1, "uid"    # I
    .param p2, "initialPid"    # I
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "message"    # Ljava/lang/String;

    .prologue
    .line 4518
    const-string/jumbo v7, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v7

    if-eqz v7, :cond_0

    .line 4520
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Permission Denial: crashApplication() from pid="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 4521
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v8

    .line 4520
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 4522
    const-string/jumbo v8, ", uid="

    .line 4520
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 4522
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 4520
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 4523
    const-string/jumbo v8, " requires "

    .line 4520
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 4523
    const-string/jumbo v8, "android.permission.FORCE_STOP_PACKAGES"

    .line 4520
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 4524
    .local v4, "msg":Ljava/lang/String;
    const-string/jumbo v7, "ActivityManager"

    invoke-static {v7, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4525
    new-instance v7, Ljava/lang/SecurityException;

    invoke-direct {v7, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 4528
    .end local v4    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 4529
    const/4 v6, 0x0

    .line 4534
    .local v6, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 4535
    const/4 v1, 0x0

    .end local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    .local v1, "i":I
    :goto_0
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v7

    if-ge v1, v7, :cond_3

    .line 4536
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 4537
    .local v5, "p":Lcom/android/server/am/ProcessRecord;
    iget v7, v5, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v7, p1, :cond_2

    .line 4535
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4540
    :cond_2
    iget v7, v5, Lcom/android/server/am/ProcessRecord;->pid:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-ne v7, p2, :cond_4

    .line 4541
    move-object v6, v5

    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :try_start_2
    monitor-exit v8

    .line 4550
    if-nez v6, :cond_5

    .line 4551
    const-string/jumbo v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "crashApplication: nothing for uid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 4552
    const-string/jumbo v9, " initialPid="

    .line 4551
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 4553
    const-string/jumbo v9, " packageName="

    .line 4551
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 4554
    return-void

    .line 4544
    .restart local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_4
    :try_start_3
    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v7, p3}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v7

    if-eqz v7, :cond_1

    .line 4545
    move-object v6, v5

    .local v6, "proc":Lcom/android/server/am/ProcessRecord;
    goto :goto_1

    .line 4534
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    .end local v6    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v7

    :try_start_4
    monitor-exit v8

    throw v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4528
    .end local v1    # "i":I
    :catchall_1
    move-exception v7

    monitor-exit p0

    throw v7

    .line 4557
    .restart local v1    # "i":I
    :cond_5
    :try_start_5
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_7

    .line 4558
    iget v7, v6, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v8

    if-ne v7, v8, :cond_6

    .line 4559
    const-string/jumbo v7, "ActivityManager"

    const-string/jumbo v8, "crashApplication: trying to crash self!"

    invoke-static {v7, v8}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    monitor-exit p0

    .line 4560
    return-void

    .line 4562
    :cond_6
    :try_start_6
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    move-result-wide v2

    .line 4564
    .local v2, "ident":J
    :try_start_7
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v7, p4}, Landroid/app/IApplicationThread;->scheduleCrash(Ljava/lang/String;)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_0
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 4567
    :goto_2
    :try_start_8
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .end local v2    # "ident":J
    :cond_7
    monitor-exit p0

    .line 4517
    return-void

    .line 4565
    .restart local v2    # "ident":J
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_2
.end method

.method createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v2, 0x0

    .line 12898
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;

    move-result-object v0

    .line 12899
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    if-nez v0, :cond_0

    .line 12900
    return-object v2

    .line 12902
    :cond_0
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.APP_ERROR"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12903
    .local v1, "result":Landroid/content/Intent;
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 12904
    const-string/jumbo v2, "android.intent.extra.BUG_REPORT"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 12905
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12906
    return-object v1
.end method

.method public createStackOnDisplay(I)Landroid/app/IActivityContainer;
    .locals 5
    .param p1, "displayId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v4, 0x0

    .line 9110
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9111
    const-string/jumbo v3, "createStackOnDisplay()"

    .line 9110
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9112
    monitor-enter p0

    .line 9113
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getNextStackId()I

    move-result v1

    .line 9114
    .local v1, "stackId":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->createStackOnDisplay(II)Lcom/android/server/am/ActivityStack;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 9115
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 9116
    return-object v4

    .line 9118
    :cond_0
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    return-object v2

    .line 9112
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v1    # "stackId":I
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public createVirtualActivityContainer(Landroid/os/IBinder;Landroid/app/IActivityContainerCallback;)Landroid/app/IActivityContainer;
    .locals 4
    .param p1, "parentActivityToken"    # Landroid/os/IBinder;
    .param p2, "callback"    # Landroid/app/IActivityContainerCallback;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v3, 0x0

    .line 9082
    const-string/jumbo v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9083
    const-string/jumbo v2, "createActivityContainer()"

    .line 9082
    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9084
    monitor-enter p0

    .line 9085
    if-nez p1, :cond_0

    .line 9086
    :try_start_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "parent token must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9084
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 9088
    :cond_0
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v0

    .line 9089
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_1

    monitor-exit p0

    .line 9090
    return-object v3

    .line 9092
    :cond_1
    if-nez p2, :cond_2

    .line 9093
    :try_start_2
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "callback must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9095
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStackSupervisor;->createVirtualActivityContainer(Lcom/android/server/am/ActivityRecord;Landroid/app/IActivityContainerCallback;)Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result-object v1

    monitor-exit p0

    return-object v1
.end method

.method decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "conn"    # Lcom/android/server/am/ContentProviderConnection;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v1, 0x0

    .line 9611
    if-eqz p1, :cond_2

    .line 9612
    iget-object p2, p1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    .line 9618
    if-eqz p4, :cond_0

    .line 9619
    iget v0, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9623
    :goto_0
    iget v0, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-nez v0, :cond_1

    iget v0, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    if-nez v0, :cond_1

    .line 9624
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9625
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9626
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v1, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v2, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v3, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 9627
    const/4 v0, 0x1

    return v0

    .line 9621
    :cond_0
    iget v0, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    goto :goto_0

    .line 9629
    :cond_1
    return v1

    .line 9631
    :cond_2
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    .line 9632
    return v1
.end method

.method public deleteActivityContainer(Landroid/app/IActivityContainer;)V
    .locals 2
    .param p1, "container"    # Landroid/app/IActivityContainer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 9101
    const-string/jumbo v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9102
    const-string/jumbo v1, "deleteActivityContainer()"

    .line 9101
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9103
    monitor-enter p0

    .line 9104
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->deleteActivityContainer(Landroid/app/IActivityContainer;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 9100
    return-void

    .line 9103
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method dispatchForegroundProfileChanged(I)V
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 20339
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 20340
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 20342
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IUserSwitchObserver;

    invoke-interface {v3, p1}, Landroid/app/IUserSwitchObserver;->onForegroundProfileSwitch(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 20340
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 20347
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 20338
    return-void

    .line 20343
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method dispatchUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 8
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 20400
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 20401
    .local v2, "N":I
    if-lez v2, :cond_0

    .line 20402
    new-instance v0, Lcom/android/server/am/ActivityManagerService$27;

    move-object v1, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$27;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/UserState;II)V

    .line 20416
    .local v0, "callback":Landroid/os/IRemoteCallback;
    monitor-enter p0

    .line 20417
    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    .line 20418
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 20420
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    if-ge v7, v2, :cond_1

    .line 20422
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, v7}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IUserSwitchObserver;

    invoke-interface {v1, p3, v0}, Landroid/app/IUserSwitchObserver;->onUserSwitching(ILandroid/os/IRemoteCallback;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 20420
    :goto_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 20416
    .end local v7    # "i":I
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 20428
    .end local v0    # "callback":Landroid/os/IRemoteCallback;
    :cond_0
    monitor-enter p0

    .line 20429
    :try_start_2
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 20432
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 20399
    return-void

    .line 20428
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1

    .line 20424
    .restart local v0    # "callback":Landroid/os/IRemoteCallback;
    .restart local v7    # "i":I
    :catch_0
    move-exception v6

    .local v6, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method dispatchUserSwitchComplete(I)V
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 20501
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 20502
    .local v2, "observerCount":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v2, :cond_0

    .line 20504
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IUserSwitchObserver;

    invoke-interface {v3, p1}, Landroid/app/IUserSwitchObserver;->onUserSwitchComplete(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 20502
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 20508
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 20500
    return-void

    .line 20505
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method final doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 17
    .param p1, "dyingProc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4753
    const/4 v10, 0x0

    .line 4754
    .local v10, "haveBg":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    .local v11, "i":I
    :goto_0
    if-ltz v11, :cond_0

    .line 4755
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 4756
    .local v16, "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_3

    .line 4757
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xe

    if-lt v2, v3, :cond_3

    .line 4758
    const/4 v10, 0x1

    .line 4763
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez v10, :cond_b

    .line 4764
    const-string/jumbo v2, "1"

    const-string/jumbo v3, "ro.debuggable"

    const-string/jumbo v4, "0"

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    .line 4765
    .local v9, "doReport":Z
    if-eqz v9, :cond_1

    .line 4766
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 4767
    .local v14, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    const-wide/32 v4, 0x493e0

    add-long/2addr v2, v4

    cmp-long v2, v14, v2

    if-gez v2, :cond_4

    .line 4768
    const/4 v9, 0x0

    .line 4774
    .end local v9    # "doReport":Z
    .end local v14    # "now":J
    :cond_1
    :goto_1
    if-eqz v9, :cond_5

    new-instance v12, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-direct {v12, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 4775
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/16 v3, 0x7541

    invoke-static {v3, v2}, Landroid/util/EventLog;->writeEvent(II)I

    .line 4776
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 4777
    .restart local v14    # "now":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    :goto_3
    if-ltz v11, :cond_9

    .line 4778
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 4779
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    move-object/from16 v1, p1

    if-eq v0, v1, :cond_2

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_6

    .line 4777
    :cond_2
    :goto_4
    add-int/lit8 v11, v11, -0x1

    goto :goto_3

    .line 4754
    .end local v14    # "now":J
    :cond_3
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_0

    .line 4770
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "doReport":Z
    .restart local v14    # "now":J
    :cond_4
    move-object/from16 v0, p0

    iput-wide v14, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    goto :goto_1

    .line 4774
    .end local v9    # "doReport":Z
    .end local v14    # "now":J
    :cond_5
    const/4 v12, 0x0

    .local v12, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    goto :goto_2

    .line 4782
    .end local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .restart local v14    # "now":J
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_6
    if-eqz v9, :cond_7

    .line 4783
    new-instance v2, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v16

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 4784
    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, v16

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/ProcessRecord;->makeAdjReason()Ljava/lang/String;

    move-result-object v8

    .line 4783
    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v12, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4786
    :cond_7
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v14

    if-gtz v2, :cond_2

    .line 4790
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v3, 0x4

    if-gt v2, v3, :cond_8

    .line 4791
    const-wide/16 v2, 0x0

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 4795
    :goto_5
    const/4 v2, 0x1

    move-object/from16 v0, v16

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 4796
    move-object/from16 v0, v16

    iput-wide v14, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    .line 4797
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4798
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_4

    .line 4793
    :cond_8
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    goto :goto_5

    .line 4801
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_9
    if-eqz v9, :cond_a

    .line 4802
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x21

    invoke-virtual {v2, v3, v12}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v13

    .line 4803
    .local v13, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4805
    .end local v13    # "msg":Landroid/os/Message;
    :cond_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 4749
    .end local v14    # "now":J
    :cond_b
    return-void
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 30
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 13112
    const-string/jumbo v2, "android.permission.DUMP"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 13114
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Permission Denial: can\'t dump ActivityManager from from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 13115
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 13114
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 13116
    const-string/jumbo v3, ", uid="

    .line 13114
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 13116
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 13114
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 13117
    const-string/jumbo v3, " without permission "

    .line 13114
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 13118
    const-string/jumbo v3, "android.permission.DUMP"

    .line 13114
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13119
    return-void

    .line 13122
    :cond_0
    const/16 v24, 0x0

    .line 13123
    .local v24, "dumpAll":Z
    const/4 v8, 0x0

    .line 13124
    .local v8, "dumpClient":Z
    const/4 v9, 0x0

    .line 13126
    .local v9, "dumpPackage":Ljava/lang/String;
    const/4 v6, 0x0

    .line 13127
    .end local v9    # "dumpPackage":Ljava/lang/String;
    .local v6, "opti":I
    :goto_0
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_1

    .line 13128
    aget-object v27, p3, v6

    .line 13129
    .local v27, "opt":Ljava/lang/String;
    if-eqz v27, :cond_1

    invoke-virtual/range {v27 .. v27}, Ljava/lang/String;->length()I

    move-result v2

    if-gtz v2, :cond_4

    .line 13181
    .end local v27    # "opt":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 13182
    .local v28, "origId":J
    const/16 v26, 0x0

    .line 13184
    .local v26, "more":Z
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_31

    .line 13185
    aget-object v18, p3, v6

    .line 13186
    .local v18, "cmd":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13187
    const-string/jumbo v2, "activities"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    const-string/jumbo v2, "a"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 13188
    :cond_2
    monitor-enter p0

    .line 13189
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_0
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v18    # "cmd":Ljava/lang/String;
    :goto_1
    monitor-exit p0

    .line 13343
    :cond_3
    :goto_2
    if-nez v26, :cond_31

    .line 13344
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13345
    return-void

    .line 13129
    .end local v26    # "more":Z
    .end local v28    # "origId":J
    .restart local v27    # "opt":Ljava/lang/String;
    :cond_4
    const/4 v2, 0x0

    move-object/from16 v0, v27

    invoke-virtual {v0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v3, 0x2d

    if-ne v2, v3, :cond_1

    .line 13132
    add-int/lit8 v6, v6, 0x1

    .line 13133
    const-string/jumbo v2, "-a"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 13134
    const/16 v24, 0x1

    goto :goto_0

    .line 13135
    :cond_5
    const-string/jumbo v2, "-c"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 13136
    const/4 v8, 0x1

    goto :goto_0

    .line 13137
    :cond_6
    const-string/jumbo v2, "-p"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 13138
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_7

    .line 13139
    aget-object v9, p3, v6

    .line 13140
    .local v9, "dumpPackage":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13145
    const/4 v8, 0x1

    goto/16 :goto_0

    .line 13142
    .end local v9    # "dumpPackage":Ljava/lang/String;
    :cond_7
    const-string/jumbo v2, "Error: -p option requires package argument"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13143
    return-void

    .line 13146
    :cond_8
    const-string/jumbo v2, "-h"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 13147
    const-string/jumbo v2, "Activity manager dump options:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13148
    const-string/jumbo v2, "  [-a] [-c] [-p package] [-h] [cmd] ..."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13149
    const-string/jumbo v2, "  cmd may be one of:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13150
    const-string/jumbo v2, "    a[ctivities]: activity stack state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13151
    const-string/jumbo v2, "    r[recents]: recent activities state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13152
    const-string/jumbo v2, "    b[roadcasts] [PACKAGE_NAME] [history [-s]]: broadcast state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13153
    const-string/jumbo v2, "    i[ntents] [PACKAGE_NAME]: pending intent state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13154
    const-string/jumbo v2, "    p[rocesses] [PACKAGE_NAME]: process state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13155
    const-string/jumbo v2, "    o[om]: out of memory management"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13156
    const-string/jumbo v2, "    perm[issions]: URI permission grant state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13157
    const-string/jumbo v2, "    prov[iders] [COMP_SPEC ...]: content provider state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13158
    const-string/jumbo v2, "    provider [COMP_SPEC]: provider client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13159
    const-string/jumbo v2, "    s[ervices] [COMP_SPEC ...]: service state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13160
    const-string/jumbo v2, "    as[sociations]: tracked app associations"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13161
    const-string/jumbo v2, "    service [COMP_SPEC]: service client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13162
    const-string/jumbo v2, "    package [PACKAGE_NAME]: all state related to given package"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13163
    const-string/jumbo v2, "    all: dump all activities"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13164
    const-string/jumbo v2, "    top: dump the top activity"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13165
    const-string/jumbo v2, "    write: write all pending state to storage"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13166
    const-string/jumbo v2, "    track-associations: enable association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13167
    const-string/jumbo v2, "    untrack-associations: disable and clear association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13168
    const-string/jumbo v2, "  cmd may also be a COMP_SPEC to dump activities."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13169
    const-string/jumbo v2, "  COMP_SPEC may be a component name (com.foo/.myApp),"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13170
    const-string/jumbo v2, "    a partial substring in a component name, a"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13171
    const-string/jumbo v2, "    hex object identifier."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13172
    const-string/jumbo v2, "  -a: include all available server state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13173
    const-string/jumbo v2, "  -c: include client state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13174
    const-string/jumbo v2, "  -p: limit output to given package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13175
    return-void

    .line 13177
    :cond_9
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Unknown argument: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "; use -h for help"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 13188
    .end local v27    # "opt":Ljava/lang/String;
    .restart local v18    # "cmd":Ljava/lang/String;
    .restart local v26    # "more":Z
    .restart local v28    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13191
    :cond_a
    const-string/jumbo v2, "recents"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_b

    const-string/jumbo v2, "r"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_c

    .line 13192
    :cond_b
    monitor-enter p0

    .line 13193
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_1
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto/16 :goto_1

    .line 13192
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13195
    :cond_c
    const-string/jumbo v2, "broadcasts"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    const-string/jumbo v2, "b"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_10

    .line 13198
    :cond_d
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_f

    .line 13199
    const/4 v13, 0x0

    .line 13200
    .local v13, "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 13208
    .end local v13    # "name":Ljava/lang/String;
    .local v14, "newArgs":[Ljava/lang/String;
    :cond_e
    :goto_3
    monitor-enter p0

    .line 13209
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_2
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    goto/16 :goto_1

    .line 13208
    .end local v14    # "newArgs":[Ljava/lang/String;
    :catchall_2
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13202
    :cond_f
    aget-object v9, p3, v6

    .line 13203
    .restart local v9    # "dumpPackage":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13204
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13205
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_e

    .line 13206
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    .line 13205
    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_3

    .line 13211
    .end local v9    # "dumpPackage":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_10
    const-string/jumbo v2, "intents"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_11

    const-string/jumbo v2, "i"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_14

    .line 13214
    :cond_11
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_13

    .line 13215
    const/4 v13, 0x0

    .line 13216
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 13224
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_12
    :goto_4
    monitor-enter p0

    .line 13225
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_3
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    goto/16 :goto_1

    .line 13224
    .end local v14    # "newArgs":[Ljava/lang/String;
    :catchall_3
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13218
    :cond_13
    aget-object v9, p3, v6

    .line 13219
    .restart local v9    # "dumpPackage":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13220
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13221
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_12

    .line 13222
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    .line 13221
    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_4

    .line 13227
    .end local v9    # "dumpPackage":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_14
    const-string/jumbo v2, "processes"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_15

    const-string/jumbo v2, "p"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_18

    .line 13230
    :cond_15
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_17

    .line 13231
    const/4 v13, 0x0

    .line 13232
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 13240
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_16
    :goto_5
    monitor-enter p0

    .line 13241
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_4
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    goto/16 :goto_1

    .line 13240
    .end local v14    # "newArgs":[Ljava/lang/String;
    :catchall_4
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13234
    :cond_17
    aget-object v9, p3, v6

    .line 13235
    .restart local v9    # "dumpPackage":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13236
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13237
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_16

    .line 13238
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    .line 13237
    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_5

    .line 13243
    .end local v9    # "dumpPackage":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_18
    const-string/jumbo v2, "oom"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_19

    const-string/jumbo v2, "o"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    .line 13244
    :cond_19
    monitor-enter p0

    .line 13245
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_5
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    goto/16 :goto_1

    .line 13244
    :catchall_5
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13247
    :cond_1a
    const-string/jumbo v2, "permissions"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1b

    const-string/jumbo v2, "perm"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1c

    .line 13248
    :cond_1b
    monitor-enter p0

    .line 13249
    const/4 v15, 0x1

    const/16 v16, 0x0

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    :try_start_6
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    goto/16 :goto_1

    .line 13248
    :catchall_6
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13251
    :cond_1c
    const-string/jumbo v2, "provider"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 13254
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_1e

    .line 13255
    const/4 v13, 0x0

    .line 13256
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 13263
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_1d
    :goto_6
    const/4 v15, 0x0

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move/from16 v16, v24

    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 13264
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "No providers match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13265
    const-string/jumbo v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 13258
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_1e
    aget-object v13, p3, v6

    .line 13259
    .local v13, "name":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13260
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13261
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_1d

    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_6

    .line 13267
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_1f
    const-string/jumbo v2, "providers"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_20

    const-string/jumbo v2, "prov"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_21

    .line 13268
    :cond_20
    monitor-enter p0

    .line 13269
    const/16 v20, 0x1

    const/16 v21, 0x0

    move-object/from16 v15, p0

    move-object/from16 v16, p1

    move-object/from16 v17, p2

    move-object/from16 v18, p3

    move/from16 v19, v6

    :try_start_7
    invoke-virtual/range {v15 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    goto/16 :goto_1

    .line 13268
    .end local v18    # "cmd":Ljava/lang/String;
    :catchall_7
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13271
    .restart local v18    # "cmd":Ljava/lang/String;
    :cond_21
    const-string/jumbo v2, "service"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_24

    .line 13274
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_23

    .line 13275
    const/4 v13, 0x0

    .line 13276
    .local v13, "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 13284
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_22
    :goto_7
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v15, 0x0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move/from16 v16, v24

    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 13285
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "No services match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13286
    const-string/jumbo v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 13278
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_23
    aget-object v13, p3, v6

    .line 13279
    .local v13, "name":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13280
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13281
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_22

    .line 13282
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    .line 13281
    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_7

    .line 13288
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_24
    const-string/jumbo v2, "package"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_27

    .line 13290
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_25

    .line 13291
    const-string/jumbo v2, "package: no package name specified"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13292
    const-string/jumbo v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 13294
    :cond_25
    aget-object v9, p3, v6

    .line 13295
    .restart local v9    # "dumpPackage":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 13296
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 13297
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_26

    .line 13298
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    .line 13297
    const/4 v3, 0x0

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 13299
    :cond_26
    move-object/from16 p3, v14

    .line 13300
    const/4 v6, 0x0

    .line 13301
    const/16 v26, 0x1

    goto/16 :goto_2

    .line 13303
    .end local v9    # "dumpPackage":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_27
    const-string/jumbo v2, "associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_28

    const-string/jumbo v2, "as"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_29

    .line 13304
    :cond_28
    monitor-enter p0

    .line 13305
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_8
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    goto/16 :goto_1

    .line 13304
    :catchall_8
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13307
    :cond_29
    const-string/jumbo v2, "services"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2a

    const-string/jumbo v2, "s"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2b

    .line 13308
    :cond_2a
    monitor-enter p0

    .line 13309
    :try_start_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_9

    goto/16 :goto_1

    .line 13308
    :catchall_9
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13311
    :cond_2b
    const-string/jumbo v2, "write"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2c

    .line 13312
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v2}, Lcom/android/server/am/TaskPersister;->flush()V

    .line 13313
    const-string/jumbo v2, "All tasks persisted."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13314
    return-void

    .line 13315
    :cond_2c
    const-string/jumbo v2, "track-associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2e

    .line 13316
    monitor-enter p0

    .line 13317
    :try_start_a
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v2, :cond_2d

    .line 13318
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 13319
    const-string/jumbo v2, "Association tracking started."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_a

    :goto_8
    monitor-exit p0

    .line 13324
    return-void

    .line 13321
    :cond_2d
    :try_start_b
    const-string/jumbo v2, "Association tracking already enabled."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_a

    goto :goto_8

    .line 13316
    :catchall_a
    move-exception v2

    monitor-exit p0

    throw v2

    .line 13325
    :cond_2e
    const-string/jumbo v2, "untrack-associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_30

    .line 13326
    monitor-enter p0

    .line 13327
    :try_start_c
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v2, :cond_2f

    .line 13328
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 13329
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->clear()V

    .line 13330
    const-string/jumbo v2, "Association tracking stopped."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_b

    :goto_9
    monitor-exit p0

    .line 13335
    return-void

    .line 13332
    :cond_2f
    :try_start_d
    const-string/jumbo v2, "Association tracking not running."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_b

    goto :goto_9

    .line 13326
    :catchall_b
    move-exception v2

    monitor-exit p0

    throw v2

    :cond_30
    move-object/from16 v15, p0

    move-object/from16 v16, p1

    move-object/from16 v17, p2

    move-object/from16 v19, p3

    move/from16 v20, v6

    move/from16 v21, v24

    .line 13338
    invoke-virtual/range {v15 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 13339
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Bad activity command, or no activities match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13340
    const-string/jumbo v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 13350
    .end local v18    # "cmd":Ljava/lang/String;
    :cond_31
    monitor-enter p0

    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13351
    :try_start_e
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 13352
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13353
    if-eqz v24, :cond_32

    .line 13354
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_32
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13356
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 13357
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13358
    if-eqz v24, :cond_33

    .line 13359
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_33
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13361
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 13362
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13363
    if-eqz v24, :cond_34

    .line 13364
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_34
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13366
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 13367
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13368
    if-eqz v24, :cond_35

    .line 13369
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13371
    :cond_35
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 13372
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13373
    if-eqz v24, :cond_36

    .line 13374
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_36
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13376
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 13377
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13378
    if-eqz v24, :cond_37

    .line 13379
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_37
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    .line 13381
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 13382
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-lez v2, :cond_39

    .line 13383
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13384
    if-eqz v24, :cond_38

    .line 13385
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_38
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    .line 13387
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 13389
    :cond_39
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13390
    if-eqz v24, :cond_3a

    .line 13391
    const-string/jumbo v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3a
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 13393
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_c

    monitor-exit p0

    .line 13395
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13111
    return-void

    .line 13350
    :catchall_c
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 10
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13400
    const-string/jumbo v1, "ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13402
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object v2, p1

    move-object v3, p2

    move v4, p5

    move/from16 v5, p6

    move-object/from16 v6, p7

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZZLjava/lang/String;)Z

    move-result v9

    .line 13404
    .local v9, "printedAnything":Z
    move v7, v9

    .line 13406
    .local v7, "needSep":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 13407
    const-string/jumbo v2, "  mFocusedActivity: "

    .line 13406
    move-object/from16 v0, p7

    invoke-static {p2, v1, v0, v7, v2}, Lcom/android/server/am/ActivityStackSupervisor;->printThisActivity(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;ZLjava/lang/String;)Z

    move-result v8

    .line 13408
    .local v8, "printed":Z
    if-eqz v8, :cond_0

    .line 13409
    const/4 v9, 0x1

    .line 13410
    .local v9, "printedAnything":Z
    const/4 v7, 0x0

    .line 13413
    .end local v7    # "needSep":Z
    .end local v9    # "printedAnything":Z
    :cond_0
    if-nez p7, :cond_2

    .line 13414
    if-eqz v7, :cond_1

    .line 13415
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 13417
    :cond_1
    const/4 v7, 0x1

    .line 13418
    .local v7, "needSep":Z
    const/4 v9, 0x1

    .line 13419
    .restart local v9    # "printedAnything":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v2, "  "

    invoke-virtual {v1, p2, v2}, Lcom/android/server/am/ActivityStackSupervisor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13422
    .end local v7    # "needSep":Z
    .end local v9    # "printedAnything":Z
    :cond_2
    if-nez v9, :cond_3

    .line 13423
    const-string/jumbo v1, "  (nothing)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13399
    :cond_3
    return-void
.end method

.method protected dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 14
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 14184
    monitor-enter p0

    .line 14185
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getDumpActivitiesLocked(Ljava/lang/String;)Ljava/util/ArrayList;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v9

    .local v9, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    monitor-exit p0

    .line 14188
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    .line 14189
    const/4 v2, 0x0

    return v2

    .line 14184
    .end local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 14192
    .restart local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :cond_0
    move-object/from16 v0, p4

    array-length v2, v0

    sub-int v2, v2, p5

    new-array v7, v2, [Ljava/lang/String;

    .line 14193
    .local v7, "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p4

    array-length v2, v0

    sub-int v2, v2, p5

    const/4 v3, 0x0

    move-object/from16 v0, p4

    move/from16 v1, p5

    invoke-static {v0, v1, v7, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 14195
    const/4 v11, 0x0

    .line 14196
    .local v11, "lastTask":Lcom/android/server/am/TaskRecord;
    const/4 v12, 0x0

    .line 14197
    .local v12, "needSep":Z
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v10, v2, -0x1

    .end local v11    # "lastTask":Lcom/android/server/am/TaskRecord;
    .local v10, "i":I
    :goto_0
    if-ltz v10, :cond_3

    .line 14198
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ActivityRecord;

    .line 14199
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v12, :cond_1

    .line 14200
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14202
    :cond_1
    const/4 v12, 0x1

    .line 14203
    monitor-enter p0

    .line 14204
    :try_start_1
    iget-object v2, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eq v11, v2, :cond_2

    .line 14205
    iget-object v11, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 14206
    .local v11, "lastTask":Lcom/android/server/am/TaskRecord;
    const-string/jumbo v2, "TASK "

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v2, v11, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14207
    const-string/jumbo v2, " id="

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, v11, Lcom/android/server/am/TaskRecord;->taskId:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 14208
    if-eqz p6, :cond_2

    .line 14209
    const-string/jumbo v2, "  "

    move-object/from16 v0, p2

    invoke-virtual {v11, v0, v2}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .end local v11    # "lastTask":Lcom/android/server/am/TaskRecord;
    :cond_2
    monitor-exit p0

    .line 14213
    const-string/jumbo v3, "  "

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    move-object v2, p0

    move-object v4, p1

    move-object/from16 v5, p2

    move/from16 v8, p6

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V

    .line 14197
    add-int/lit8 v10, v10, -0x1

    goto :goto_0

    .line 14203
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2

    .line 14215
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    const/4 v2, 0x1

    return v2
.end method

.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;)V
    .locals 114
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "brief"    # Z
    .param p6, "categoryPw"    # Ljava/io/PrintWriter;

    .prologue
    .line 14924
    const/16 v74, 0x0

    .line 14925
    .local v74, "dumpDetails":Z
    const/16 v17, 0x0

    .line 14926
    .local v17, "dumpFullDetails":Z
    const/16 v18, 0x0

    .line 14927
    .local v18, "dumpDalvik":Z
    const/16 v19, 0x0

    .line 14928
    .local v19, "dumpSummaryOnly":Z
    const/16 v97, 0x0

    .line 14929
    .local v97, "oomOnly":Z
    const/4 v13, 0x0

    .line 14930
    .local v13, "isCompact":Z
    const/16 v85, 0x0

    .line 14931
    .local v85, "localOnly":Z
    const/16 v102, 0x0

    .line 14933
    .local v102, "packages":Z
    const/16 v101, 0x0

    .line 14934
    .local v101, "opti":I
    :goto_0
    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v101

    if-ge v0, v6, :cond_0

    .line 14935
    aget-object v100, p4, v101

    .line 14936
    .local v100, "opt":Ljava/lang/String;
    if-eqz v100, :cond_0

    invoke-virtual/range {v100 .. v100}, Ljava/lang/String;->length()I

    move-result v6

    if-gtz v6, :cond_3

    .line 14975
    .end local v100    # "opt":Ljava/lang/String;
    :cond_0
    const-string/jumbo v6, "--checkin"

    move-object/from16 v0, p4

    invoke-static {v0, v6}, Lcom/android/server/am/ActivityManagerService;->scanArgs([Ljava/lang/String;Ljava/lang/String;)Z

    move-result v12

    .line 14976
    .local v12, "isCheckinRequest":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 14977
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    .line 14978
    .local v10, "realtime":J
    const/4 v6, 0x1

    new-array v0, v6, [J

    move-object/from16 v109, v0

    .line 14980
    .local v109, "tmpLong":[J
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, v101

    move/from16 v3, v102

    move-object/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v105

    .line 14981
    .local v105, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v105, :cond_14

    .line 14983
    if-eqz p4, :cond_13

    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v101

    if-le v6, v0, :cond_13

    .line 14984
    aget-object v6, p4, v101

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_13

    .line 14986
    new-instance v91, Ljava/util/ArrayList;

    invoke-direct/range {v91 .. v91}, Ljava/util/ArrayList;-><init>()V

    .line 14987
    .local v91, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14988
    const/16 v77, -0x1

    .line 14990
    .local v77, "findPid":I
    :try_start_0
    aget-object v6, p4, v101

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1

    move-result v77

    .line 14993
    :goto_1
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 14994
    :try_start_1
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v36

    .line 14995
    .local v36, "N":I
    const/16 v80, 0x0

    .local v80, "i":I
    :goto_2
    move/from16 v0, v80

    move/from16 v1, v36

    if-ge v0, v1, :cond_c

    .line 14996
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v80

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v108

    .line 14997
    .local v108, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v108

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v0, v77

    if-eq v6, v0, :cond_1

    move-object/from16 v0, v108

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v6, :cond_2

    .line 14998
    move-object/from16 v0, v108

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    aget-object v14, p4, v101

    invoke-virtual {v6, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    .line 14997
    if-eqz v6, :cond_2

    .line 14999
    :cond_1
    move-object/from16 v0, v91

    move-object/from16 v1, v108

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14995
    :cond_2
    add-int/lit8 v80, v80, 0x1

    goto :goto_2

    .line 14936
    .end local v8    # "uptime":J
    .end local v10    # "realtime":J
    .end local v12    # "isCheckinRequest":Z
    .end local v36    # "N":I
    .end local v77    # "findPid":I
    .end local v80    # "i":I
    .end local v91    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v105    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v109    # "tmpLong":[J
    .restart local v100    # "opt":Ljava/lang/String;
    :cond_3
    const/4 v6, 0x0

    move-object/from16 v0, v100

    invoke-virtual {v0, v6}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-ne v6, v7, :cond_0

    .line 14939
    add-int/lit8 v101, v101, 0x1

    .line 14940
    const-string/jumbo v6, "-a"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 14941
    const/16 v74, 0x1

    .line 14942
    const/16 v17, 0x1

    .line 14943
    const/16 v18, 0x1

    goto/16 :goto_0

    .line 14944
    :cond_4
    const-string/jumbo v6, "-d"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 14945
    const/16 v18, 0x1

    goto/16 :goto_0

    .line 14946
    :cond_5
    const-string/jumbo v6, "-c"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 14947
    const/4 v13, 0x1

    goto/16 :goto_0

    .line 14948
    :cond_6
    const-string/jumbo v6, "-s"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 14949
    const/16 v74, 0x1

    .line 14950
    const/16 v19, 0x1

    goto/16 :goto_0

    .line 14951
    :cond_7
    const-string/jumbo v6, "--oom"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 14952
    const/16 v97, 0x1

    goto/16 :goto_0

    .line 14953
    :cond_8
    const-string/jumbo v6, "--local"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 14954
    const/16 v85, 0x1

    goto/16 :goto_0

    .line 14955
    :cond_9
    const-string/jumbo v6, "--package"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 14956
    const/16 v102, 0x1

    goto/16 :goto_0

    .line 14957
    :cond_a
    const-string/jumbo v6, "-h"

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 14958
    const-string/jumbo v6, "meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14959
    const-string/jumbo v6, "  -a: include all available information for each process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14960
    const-string/jumbo v6, "  -d: include dalvik details."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14961
    const-string/jumbo v6, "  -c: dump in a compact machine-parseable representation."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14962
    const-string/jumbo v6, "  -s: dump only summary of application memory usage."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14963
    const-string/jumbo v6, "  --oom: only show processes organized by oom adj."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14964
    const-string/jumbo v6, "  --local: only collect details locally, don\'t call process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14965
    const-string/jumbo v6, "  --package: interpret process arg as package, dumping all"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14966
    const-string/jumbo v6, "             processes that have loaded that package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14967
    const-string/jumbo v6, "If [process] is specified it can be the name or "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14968
    const-string/jumbo v6, "pid of a specific process to dump."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14969
    return-void

    .line 14971
    :cond_b
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Unknown argument: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v100

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "; use -h for help"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .end local v100    # "opt":Ljava/lang/String;
    .restart local v8    # "uptime":J
    .restart local v10    # "realtime":J
    .restart local v12    # "isCheckinRequest":Z
    .restart local v36    # "N":I
    .restart local v77    # "findPid":I
    .restart local v80    # "i":I
    .restart local v91    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v105    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v109    # "tmpLong":[J
    :cond_c
    monitor-exit v7

    .line 15003
    invoke-virtual/range {v91 .. v91}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_13

    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 15004
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 15006
    const/4 v15, 0x0

    .line 15007
    .local v15, "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v91 .. v91}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v80, v6, -0x1

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :goto_3
    if-ltz v80, :cond_12

    .line 15008
    move-object/from16 v0, v91

    move/from16 v1, v80

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v106

    check-cast v106, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 15009
    .local v106, "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v106

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v20, v0

    .line 15010
    .local v20, "pid":I
    if-nez v12, :cond_d

    if-eqz v74, :cond_d

    .line 15011
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v106

    iget-object v7, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15013
    :cond_d
    if-nez v15, :cond_e

    .line 15014
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 15016
    :cond_e
    if-nez v74, :cond_11

    if-nez p5, :cond_f

    if-eqz v97, :cond_11

    .line 15019
    :cond_f
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v109

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 15020
    const/4 v6, 0x0

    aget-wide v6, v109, v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 15023
    :goto_4
    move-object/from16 v0, v106

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move-object/from16 v21, v0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v14, p2

    move/from16 v16, v12

    .line 15022
    invoke-static/range {v14 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 15024
    if-eqz v12, :cond_10

    .line 15025
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 15007
    :cond_10
    add-int/lit8 v80, v80, -0x1

    goto/16 :goto_3

    .line 14993
    .end local v20    # "pid":I
    .end local v36    # "N":I
    .end local v80    # "i":I
    .end local v106    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_0
    move-exception v6

    monitor-exit v7

    throw v6

    .line 15017
    .restart local v20    # "pid":I
    .restart local v36    # "N":I
    .restart local v80    # "i":I
    .restart local v106    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_11
    move/from16 v0, v20

    invoke-static {v0, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    goto :goto_4

    .line 15028
    .end local v20    # "pid":I
    .end local v106    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_12
    return-void

    .line 15031
    .end local v36    # "N":I
    .end local v77    # "findPid":I
    .end local v80    # "i":I
    .end local v91    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    :cond_13
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "No process found for: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, p4, v101

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15032
    return-void

    .line 15035
    :cond_14
    if-nez p5, :cond_15

    if-eqz v97, :cond_1b

    :cond_15
    :goto_5
    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 15039
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 15041
    move-object/from16 v0, p4

    array-length v6, v0

    sub-int v6, v6, v101

    new-array v0, v6, [Ljava/lang/String;

    move-object/from16 v81, v0

    .line 15042
    .local v81, "innerArgs":[Ljava/lang/String;
    move-object/from16 v0, p4

    array-length v6, v0

    sub-int v6, v6, v101

    const/4 v7, 0x0

    move-object/from16 v0, p4

    move/from16 v1, v101

    move-object/from16 v2, v81

    invoke-static {v0, v1, v2, v7, v6}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 15044
    new-instance v103, Ljava/util/ArrayList;

    invoke-direct/range {v103 .. v103}, Ljava/util/ArrayList;-><init>()V

    .line 15045
    .local v103, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v104, Landroid/util/SparseArray;

    invoke-direct/range {v104 .. v104}, Landroid/util/SparseArray;-><init>()V

    .line 15046
    .local v104, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v92, 0x0

    .line 15047
    .local v92, "nativePss":J
    const-wide/16 v72, 0x0

    .line 15048
    .local v72, "dalvikPss":J
    if-eqz v18, :cond_1d

    const/16 v6, 0x8

    new-array v0, v6, [J

    move-object/from16 v71, v0

    .line 15050
    .local v71, "dalvikSubitemPss":[J
    :goto_6
    const-wide/16 v48, 0x0

    .line 15051
    .local v48, "otherPss":J
    const/16 v6, 0x11

    new-array v0, v6, [J

    move-object/from16 v90, v0

    .line 15053
    .local v90, "miscPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [J

    move-object/from16 v99, v0

    .line 15055
    .local v99, "oomPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [Ljava/util/ArrayList;

    move-object/from16 v98, v0

    .line 15057
    .local v98, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v110, 0x0

    .line 15058
    .local v110, "totalPss":J
    const-wide/16 v68, 0x0

    .line 15060
    .local v68, "cachedPss":J
    const/4 v15, 0x0

    .line 15061
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v105 .. v105}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v80, v6, -0x1

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v80    # "i":I
    :goto_7
    if-ltz v80, :cond_29

    .line 15062
    move-object/from16 v0, v105

    move/from16 v1, v80

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v107

    check-cast v107, Lcom/android/server/am/ProcessRecord;

    .line 15067
    .local v107, "r":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 15068
    :try_start_2
    move-object/from16 v0, v107

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v21, v0

    .line 15069
    .local v21, "thread":Landroid/app/IApplicationThread;
    move-object/from16 v0, v107

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v20, v0

    .line 15070
    .restart local v20    # "pid":I
    invoke-virtual/range {v107 .. v107}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v94

    .line 15071
    .local v94, "oomAdj":I
    move-object/from16 v0, v107

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v6

    if-lez v6, :cond_1e

    const/16 v35, 0x1

    .local v35, "hasActivities":Z
    :goto_8
    monitor-exit p0

    .line 15073
    if-eqz v21, :cond_27

    .line 15074
    if-nez v12, :cond_16

    if-eqz v74, :cond_16

    .line 15075
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v107

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15077
    :cond_16
    if-nez v15, :cond_17

    .line 15078
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 15080
    :cond_17
    if-nez v74, :cond_1f

    if-nez p5, :cond_18

    if-eqz v97, :cond_1f

    .line 15083
    :cond_18
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v109

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 15084
    const/4 v6, 0x0

    aget-wide v6, v109, v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 15086
    :goto_9
    if-eqz v74, :cond_19

    .line 15087
    if-eqz v85, :cond_20

    .line 15089
    move-object/from16 v0, v107

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v21, v0

    .end local v21    # "thread":Landroid/app/IApplicationThread;
    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v14, p2

    move/from16 v16, v12

    .line 15088
    invoke-static/range {v14 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 15090
    if-eqz v12, :cond_19

    .line 15091
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 15107
    :cond_19
    :goto_a
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 15108
    .local v24, "myTotalPss":J
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v26, v0

    .line 15110
    .local v26, "myTotalUss":J
    monitor-enter p0

    .line 15111
    :try_start_3
    move-object/from16 v0, v107

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_1a

    invoke-virtual/range {v107 .. v107}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v6

    move/from16 v0, v94

    if-ne v0, v6, :cond_1a

    .line 15113
    move-object/from16 v0, v107

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    move-object/from16 v23, v0

    move-object/from16 v0, v107

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v29, v0

    const/16 v28, 0x1

    invoke-virtual/range {v23 .. v29}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :cond_1a
    monitor-exit p0

    .line 15117
    if-nez v12, :cond_27

    if-eqz v15, :cond_27

    .line 15118
    add-long v110, v110, v24

    .line 15119
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v107

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " (pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 15120
    if-eqz v35, :cond_21

    const-string/jumbo v6, " / activities)"

    .line 15119
    :goto_b
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    .line 15121
    move-object/from16 v0, v107

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v31, v0

    move-wide/from16 v32, v24

    move/from16 v34, v20

    .line 15119
    invoke-direct/range {v29 .. v35}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JIZ)V

    .line 15122
    .local v29, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v103

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15123
    move-object/from16 v0, v104

    move/from16 v1, v20

    move-object/from16 v2, v29

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 15125
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v6, v6

    add-long v92, v92, v6

    .line 15126
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v6, v6

    add-long v72, v72, v6

    .line 15127
    const/16 v44, 0x0

    .local v44, "j":I
    :goto_c
    move-object/from16 v0, v71

    array-length v6, v0

    move/from16 v0, v44

    if-ge v0, v6, :cond_22

    .line 15128
    aget-wide v6, v71, v44

    add-int/lit8 v14, v44, 0x11

    invoke-virtual {v15, v14}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v14

    int-to-long v0, v14

    move-wide/from16 v22, v0

    add-long v6, v6, v22

    aput-wide v6, v71, v44

    .line 15127
    add-int/lit8 v44, v44, 0x1

    goto :goto_c

    .line 15035
    .end local v20    # "pid":I
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v35    # "hasActivities":Z
    .end local v44    # "j":I
    .end local v48    # "otherPss":J
    .end local v68    # "cachedPss":J
    .end local v71    # "dalvikSubitemPss":[J
    .end local v72    # "dalvikPss":J
    .end local v80    # "i":I
    .end local v81    # "innerArgs":[Ljava/lang/String;
    .end local v90    # "miscPss":[J
    .end local v92    # "nativePss":J
    .end local v94    # "oomAdj":I
    .end local v98    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v99    # "oomPss":[J
    .end local v103    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v104    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v107    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v110    # "totalPss":J
    :cond_1b
    invoke-virtual/range {v105 .. v105}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-eq v6, v7, :cond_1c

    if-nez v12, :cond_1c

    if-eqz v102, :cond_15

    .line 15036
    :cond_1c
    const/16 v74, 0x1

    goto/16 :goto_5

    .line 15049
    .restart local v72    # "dalvikPss":J
    .restart local v81    # "innerArgs":[Ljava/lang/String;
    .restart local v92    # "nativePss":J
    .restart local v103    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v104    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_1d
    sget-object v71, Llibcore/util/EmptyArray;->LONG:[J

    .restart local v71    # "dalvikSubitemPss":[J
    goto/16 :goto_6

    .line 15071
    .restart local v20    # "pid":I
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    .restart local v48    # "otherPss":J
    .restart local v68    # "cachedPss":J
    .restart local v80    # "i":I
    .restart local v90    # "miscPss":[J
    .restart local v94    # "oomAdj":I
    .restart local v98    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v99    # "oomPss":[J
    .restart local v107    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v110    # "totalPss":J
    :cond_1e
    const/16 v35, 0x0

    .restart local v35    # "hasActivities":Z
    goto/16 :goto_8

    .line 15067
    .end local v20    # "pid":I
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v35    # "hasActivities":Z
    .end local v94    # "oomAdj":I
    :catchall_1
    move-exception v6

    monitor-exit p0

    throw v6

    .line 15081
    .restart local v20    # "pid":I
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    .restart local v35    # "hasActivities":Z
    .restart local v94    # "oomAdj":I
    :cond_1f
    move/from16 v0, v20

    invoke-static {v0, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    goto/16 :goto_9

    .line 15095
    :cond_20
    :try_start_4
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    move-object/from16 v22, p1

    move-object/from16 v23, v15

    move/from16 v24, v12

    move/from16 v25, v17

    move/from16 v26, v18

    move/from16 v27, v19

    move-object/from16 v28, v81

    .line 15096
    invoke-interface/range {v21 .. v28}, Landroid/app/IApplicationThread;->dumpMemInfo(Ljava/io/FileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZ[Ljava/lang/String;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    goto/16 :goto_a

    .line 15098
    :catch_0
    move-exception v75

    .line 15099
    .local v75, "e":Landroid/os/RemoteException;
    if-nez v12, :cond_19

    .line 15100
    const-string/jumbo v6, "Got RemoteException!"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15101
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto/16 :goto_a

    .line 15110
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v75    # "e":Landroid/os/RemoteException;
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    :catchall_2
    move-exception v6

    monitor-exit p0

    throw v6

    .line 15120
    :cond_21
    const-string/jumbo v6, ")"

    goto/16 :goto_b

    .line 15130
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v44    # "j":I
    :cond_22
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v6, v6

    add-long v48, v48, v6

    .line 15131
    const/16 v44, 0x0

    :goto_d
    const/16 v6, 0x11

    move/from16 v0, v44

    if-ge v0, v6, :cond_23

    .line 15132
    move/from16 v0, v44

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v86, v0

    .line 15133
    .local v86, "mem":J
    aget-wide v6, v90, v44

    add-long v6, v6, v86

    aput-wide v6, v90, v44

    .line 15134
    sub-long v48, v48, v86

    .line 15131
    add-int/lit8 v44, v44, 0x1

    goto :goto_d

    .line 15137
    .end local v86    # "mem":J
    :cond_23
    const/16 v6, 0x9

    move/from16 v0, v94

    if-lt v0, v6, :cond_24

    .line 15138
    add-long v68, v68, v24

    .line 15141
    :cond_24
    const/16 v95, 0x0

    .local v95, "oomIndex":I
    :goto_e
    move-object/from16 v0, v99

    array-length v6, v0

    move/from16 v0, v95

    if-ge v0, v6, :cond_27

    .line 15142
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v6, v6, v95

    move/from16 v0, v94

    if-le v0, v6, :cond_25

    .line 15143
    move-object/from16 v0, v99

    array-length v6, v0

    add-int/lit8 v6, v6, -0x1

    move/from16 v0, v95

    if-ne v0, v6, :cond_28

    .line 15144
    :cond_25
    aget-wide v6, v99, v95

    add-long v6, v6, v24

    aput-wide v6, v99, v95

    .line 15145
    aget-object v6, v98, v95

    if-nez v6, :cond_26

    .line 15146
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    aput-object v6, v98, v95

    .line 15148
    :cond_26
    aget-object v6, v98, v95

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15061
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v44    # "j":I
    .end local v95    # "oomIndex":I
    :cond_27
    add-int/lit8 v80, v80, -0x1

    goto/16 :goto_7

    .line 15141
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v44    # "j":I
    .restart local v95    # "oomIndex":I
    :cond_28
    add-int/lit8 v95, v95, 0x1

    goto :goto_e

    .line 15156
    .end local v20    # "pid":I
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v35    # "hasActivities":Z
    .end local v44    # "j":I
    .end local v94    # "oomAdj":I
    .end local v95    # "oomIndex":I
    .end local v107    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_29
    const-wide/16 v64, 0x0

    .line 15158
    .local v64, "nativeProcTotalPss":J
    if-nez v12, :cond_2a

    invoke-virtual/range {v105 .. v105}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-le v6, v7, :cond_2a

    if-eqz v102, :cond_2b

    .line 14923
    :cond_2a
    :goto_f
    return-void

    .line 15161
    :cond_2b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 15162
    const/4 v15, 0x0

    .line 15163
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 15164
    :try_start_5
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    move-result v36

    .line 15165
    .restart local v36    # "N":I
    const/16 v80, 0x0

    move-object/from16 v89, v15

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v89, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_10
    move/from16 v0, v80

    move/from16 v1, v36

    if-ge v0, v1, :cond_32

    .line 15166
    :try_start_6
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v80

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v108

    .line 15167
    .restart local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v108

    iget-wide v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    move-wide/from16 v22, v0

    const-wide/16 v30, 0x0

    cmp-long v6, v22, v30

    if-lez v6, :cond_2d

    move-object/from16 v0, v108

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v104

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_2d

    .line 15168
    if-nez v89, :cond_4f

    .line 15169
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_5

    .line 15171
    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v15, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_11
    if-nez p5, :cond_2c

    if-eqz v97, :cond_2e

    .line 15174
    :cond_2c
    :try_start_7
    move-object/from16 v0, v108

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v14, 0x0

    move-object/from16 v0, v109

    invoke-static {v6, v0, v14}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v22

    move-wide/from16 v0, v22

    long-to-int v6, v0

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 15175
    const/4 v6, 0x0

    aget-wide v22, v109, v6

    move-wide/from16 v0, v22

    long-to-int v6, v0

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 15178
    :goto_12
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 15179
    .restart local v24    # "myTotalPss":J
    add-long v110, v110, v24

    .line 15180
    add-long v64, v64, v24

    .line 15182
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v108

    iget-object v14, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v14, " (pid "

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v108

    iget v14, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v14, ")"

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v38

    .line 15183
    move-object/from16 v0, v108

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v39, v0

    move-object/from16 v0, v108

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v42, v0

    const/16 v43, 0x0

    move-object/from16 v37, v29

    move-wide/from16 v40, v24

    .line 15182
    invoke-direct/range {v37 .. v43}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JIZ)V

    .line 15184
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v103

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15186
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v92, v92, v22

    .line 15187
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v72, v72, v22

    .line 15188
    const/16 v44, 0x0

    .restart local v44    # "j":I
    :goto_13
    move-object/from16 v0, v71

    array-length v6, v0

    move/from16 v0, v44

    if-ge v0, v6, :cond_2f

    .line 15189
    aget-wide v22, v71, v44

    .line 15190
    add-int/lit8 v6, v44, 0x11

    .line 15189
    invoke-virtual {v15, v6}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v30, v0

    add-long v22, v22, v30

    aput-wide v22, v71, v44

    .line 15188
    add-int/lit8 v44, v44, 0x1

    goto :goto_13

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v44    # "j":I
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_2d
    move-object/from16 v15, v89

    .line 15165
    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :goto_14
    add-int/lit8 v80, v80, 0x1

    move-object/from16 v89, v15

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_10

    .line 15172
    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_2e
    move-object/from16 v0, v108

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v6, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    goto/16 :goto_12

    .line 15163
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v36    # "N":I
    .end local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v6

    :goto_15
    monitor-exit v7

    throw v6

    .line 15192
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v24    # "myTotalPss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v36    # "N":I
    .restart local v44    # "j":I
    .restart local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2f
    :try_start_8
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v48, v48, v22

    .line 15193
    const/16 v44, 0x0

    :goto_16
    const/16 v6, 0x11

    move/from16 v0, v44

    if-ge v0, v6, :cond_30

    .line 15194
    move/from16 v0, v44

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v86, v0

    .line 15195
    .restart local v86    # "mem":J
    aget-wide v22, v90, v44

    add-long v22, v22, v86

    aput-wide v22, v90, v44

    .line 15196
    sub-long v48, v48, v86

    .line 15193
    add-int/lit8 v44, v44, 0x1

    goto :goto_16

    .line 15198
    .end local v86    # "mem":J
    :cond_30
    const/4 v6, 0x0

    aget-wide v22, v99, v6

    add-long v22, v22, v24

    aput-wide v22, v99, v6

    .line 15199
    const/4 v6, 0x0

    aget-object v6, v98, v6

    if-nez v6, :cond_31

    .line 15200
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    const/4 v14, 0x0

    aput-object v6, v98, v14

    .line 15202
    :cond_31
    const/4 v6, 0x0

    aget-object v6, v98, v6

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    goto :goto_14

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v44    # "j":I
    .end local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_32
    monitor-exit v7

    .line 15207
    new-instance v70, Ljava/util/ArrayList;

    invoke-direct/range {v70 .. v70}, Ljava/util/ArrayList;-><init>()V

    .line 15209
    .local v70, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string/jumbo v38, "Native"

    const-string/jumbo v39, "Native"

    const/16 v42, -0x1

    move-wide/from16 v40, v92

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v70

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15210
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string/jumbo v38, "Dalvik"

    const-string/jumbo v39, "Dalvik"

    const/16 v42, -0x2

    move-wide/from16 v40, v72

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    .line 15211
    .local v37, "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v71

    array-length v6, v0

    if-lez v6, :cond_33

    .line 15212
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v37

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 15213
    const/16 v44, 0x0

    .restart local v44    # "j":I
    :goto_17
    move-object/from16 v0, v71

    array-length v6, v0

    move/from16 v0, v44

    if-ge v0, v6, :cond_33

    .line 15215
    add-int/lit8 v6, v44, 0x11

    .line 15214
    invoke-static {v6}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v40

    .line 15216
    .local v40, "name":Ljava/lang/String;
    move-object/from16 v0, v37

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v39, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v42, v71, v44

    move-object/from16 v41, v40

    invoke-direct/range {v39 .. v44}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v39

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15213
    add-int/lit8 v44, v44, 0x1

    goto :goto_17

    .line 15219
    .end local v40    # "name":Ljava/lang/String;
    .end local v44    # "j":I
    :cond_33
    move-object/from16 v0, v70

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15220
    new-instance v45, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string/jumbo v46, "Unknown"

    const-string/jumbo v47, "Unknown"

    const/16 v50, -0x3

    invoke-direct/range {v45 .. v50}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v70

    move-object/from16 v1, v45

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15221
    const/16 v44, 0x0

    .restart local v44    # "j":I
    :goto_18
    const/16 v6, 0x11

    move/from16 v0, v44

    if-ge v0, v6, :cond_34

    .line 15222
    invoke-static/range {v44 .. v44}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v52

    .line 15223
    .local v52, "label":Ljava/lang/String;
    new-instance v51, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v54, v90, v44

    move-object/from16 v53, v52

    move/from16 v56, v44

    invoke-direct/range {v51 .. v56}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v70

    move-object/from16 v1, v51

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15221
    add-int/lit8 v44, v44, 0x1

    goto :goto_18

    .line 15226
    .end local v52    # "label":Ljava/lang/String;
    :cond_34
    new-instance v96, Ljava/util/ArrayList;

    invoke-direct/range {v96 .. v96}, Ljava/util/ArrayList;-><init>()V

    .line 15227
    .local v96, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v44, 0x0

    :goto_19
    move-object/from16 v0, v99

    array-length v6, v0

    move/from16 v0, v44

    if-ge v0, v6, :cond_37

    .line 15228
    aget-wide v6, v99, v44

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_35

    .line 15229
    if-eqz v13, :cond_36

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v52, v6, v44

    .line 15231
    .restart local v52    # "label":Ljava/lang/String;
    :goto_1a
    new-instance v51, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v54, v99, v44

    .line 15232
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v56, v6, v44

    move-object/from16 v53, v52

    .line 15231
    invoke-direct/range {v51 .. v56}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    .line 15233
    .local v51, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v6, v98, v44

    move-object/from16 v0, v51

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 15234
    move-object/from16 v0, v96

    move-object/from16 v1, v51

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15227
    .end local v51    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v52    # "label":Ljava/lang/String;
    :cond_35
    add-int/lit8 v44, v44, 0x1

    goto :goto_19

    .line 15230
    :cond_36
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v52, v6, v44

    .restart local v52    # "label":Ljava/lang/String;
    goto :goto_1a

    .line 15238
    .end local v52    # "label":Ljava/lang/String;
    :cond_37
    if-nez p5, :cond_38

    if-eqz v97, :cond_44

    .line 15244
    :cond_38
    :goto_1b
    if-nez v13, :cond_39

    .line 15245
    const-string/jumbo v6, "Total PSS by OOM adjustment:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15247
    :cond_39
    const-string/jumbo v54, "  "

    const-string/jumbo v55, "oom"

    const/16 v57, 0x0

    move-object/from16 v53, p2

    move-object/from16 v56, v96

    move/from16 v58, v13

    invoke-static/range {v53 .. v58}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 15248
    if-nez p5, :cond_3a

    if-eqz v97, :cond_45

    .line 15256
    :cond_3a
    :goto_1c
    if-nez v13, :cond_3b

    .line 15257
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 15259
    :cond_3b
    new-instance v88, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 15260
    .local v88, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 15261
    const-wide/16 v6, 0x0

    cmp-long v6, v64, v6

    if-lez v6, :cond_3c

    .line 15262
    monitor-enter p0

    .line 15263
    :try_start_9
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v66

    .line 15264
    .local v66, "cachedKb":J
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v78

    .line 15265
    .local v78, "freeKb":J
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v112

    .line 15266
    .local v112, "zramKb":J
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v82

    .line 15267
    .local v82, "kernelKb":J
    const-wide/16 v6, 0x400

    mul-long v54, v66, v6

    const-wide/16 v6, 0x400

    mul-long v56, v78, v6

    const-wide/16 v6, 0x400

    mul-long v58, v112, v6

    .line 15268
    const-wide/16 v6, 0x400

    mul-long v60, v82, v6

    const-wide/16 v6, 0x400

    mul-long v62, v64, v6

    .line 15267
    invoke-static/range {v54 .. v63}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 15269
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v55, v0

    move-wide/from16 v56, v66

    move-wide/from16 v58, v78

    move-wide/from16 v60, v112

    move-wide/from16 v62, v82

    invoke-virtual/range {v55 .. v65}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    monitor-exit p0

    .line 15273
    .end local v66    # "cachedKb":J
    .end local v78    # "freeKb":J
    .end local v82    # "kernelKb":J
    .end local v112    # "zramKb":J
    :cond_3c
    if-nez p5, :cond_3d

    .line 15274
    if-nez v13, :cond_48

    .line 15275
    const-string/jumbo v6, "Total RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15276
    const-string/jumbo v6, " kB (status "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15277
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    packed-switch v6, :pswitch_data_0

    .line 15291
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 15292
    const-string/jumbo v6, ")"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15295
    :goto_1d
    const-string/jumbo v6, " Free RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v68

    .line 15296
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    .line 15295
    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15296
    const-string/jumbo v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15297
    move-object/from16 v0, p2

    move-wide/from16 v1, v68

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " cached pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15298
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " cached kernel + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15299
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " free)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15307
    :cond_3d
    :goto_1e
    if-nez v13, :cond_3e

    .line 15308
    const-string/jumbo v6, " Used RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sub-long v6, v110, v68

    .line 15309
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    .line 15308
    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15309
    const-string/jumbo v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15310
    sub-long v6, v110, v68

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " used pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15311
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " kernel)\n"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15312
    const-string/jumbo v6, " Lost RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    sub-long v6, v6, v110

    .line 15313
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    .line 15312
    sub-long v6, v6, v22

    .line 15313
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v22

    .line 15312
    sub-long v6, v6, v22

    .line 15314
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    .line 15312
    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15314
    const-string/jumbo v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15316
    :cond_3e
    if-nez p5, :cond_4e

    .line 15317
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_3f

    .line 15318
    if-nez v13, :cond_49

    .line 15319
    const-string/jumbo v6, "     ZRAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15320
    const-string/jumbo v6, " kB physical used for "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15321
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    .line 15322
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v22

    .line 15321
    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15323
    const-string/jumbo v6, " kB in swap ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15324
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15325
    const-string/jumbo v6, " kB total swap)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15332
    :cond_3f
    :goto_1f
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v84

    .line 15333
    .local v84, "ksm":[J
    if-nez v13, :cond_4b

    .line 15334
    const/4 v6, 0x1

    aget-wide v6, v84, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_40

    const/4 v6, 0x0

    aget-wide v6, v84, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_4a

    .line 15336
    :cond_40
    :goto_20
    const-string/jumbo v6, "      KSM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15337
    const-string/jumbo v6, " kB saved from shared "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15338
    const/4 v6, 0x0

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15339
    const-string/jumbo v6, "           "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15340
    const-string/jumbo v6, " kB unshared; "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15341
    const/4 v6, 0x3

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, " kB volatile"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15343
    :cond_41
    const-string/jumbo v6, "   Tuning: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15344
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 15345
    const-string/jumbo v6, " (large "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15346
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 15347
    const-string/jumbo v6, "), oom "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15348
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15349
    const-string/jumbo v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15350
    const-string/jumbo v6, ", restore limit "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15351
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15352
    const-string/jumbo v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15353
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_42

    .line 15354
    const-string/jumbo v6, " (low-ram)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15356
    :cond_42
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_43

    .line 15357
    const-string/jumbo v6, " (high-end-gfx)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15359
    :cond_43
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v15, v89

    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_f

    .line 15238
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v84    # "ksm":[J
    .end local v88    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_44
    if-nez v13, :cond_38

    .line 15239
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 15240
    const-string/jumbo v6, "Total PSS by process:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15241
    const-string/jumbo v54, "  "

    const-string/jumbo v55, "proc"

    const/16 v57, 0x1

    move-object/from16 v53, p2

    move-object/from16 v56, v103

    move/from16 v58, v13

    invoke-static/range {v53 .. v58}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 15242
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_1b

    .line 15249
    :cond_45
    if-eqz p6, :cond_47

    move-object/from16 v53, p6

    .line 15250
    .local v53, "out":Ljava/io/PrintWriter;
    :goto_21
    if-nez v13, :cond_46

    .line 15251
    invoke-virtual/range {v53 .. v53}, Ljava/io/PrintWriter;->println()V

    .line 15252
    const-string/jumbo v6, "Total PSS by category:"

    move-object/from16 v0, v53

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 15254
    :cond_46
    const-string/jumbo v54, "  "

    const-string/jumbo v55, "cat"

    const/16 v57, 0x1

    move-object/from16 v56, v70

    move/from16 v58, v13

    invoke-static/range {v53 .. v58}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    goto/16 :goto_1c

    .line 15249
    .end local v53    # "out":Ljava/io/PrintWriter;
    :cond_47
    move-object/from16 v53, p2

    .restart local v53    # "out":Ljava/io/PrintWriter;
    goto :goto_21

    .line 15262
    .end local v53    # "out":Ljava/io/PrintWriter;
    .restart local v88    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    :catchall_4
    move-exception v6

    monitor-exit p0

    throw v6

    .line 15279
    :pswitch_0
    const-string/jumbo v6, "normal)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1d

    .line 15282
    :pswitch_1
    const-string/jumbo v6, "moderate)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1d

    .line 15285
    :pswitch_2
    const-string/jumbo v6, "low)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1d

    .line 15288
    :pswitch_3
    const-string/jumbo v6, "critical)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1d

    .line 15301
    :cond_48
    const-string/jumbo v6, "ram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15302
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v68

    .line 15303
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    .line 15302
    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15303
    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15304
    sub-long v6, v110, v68

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_1e

    .line 15327
    :cond_49
    const-string/jumbo v6, "zram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15328
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15329
    invoke-virtual/range {v88 .. v88}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_1f

    .line 15334
    .restart local v84    # "ksm":[J
    :cond_4a
    const/4 v6, 0x2

    aget-wide v6, v84, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_40

    .line 15335
    const/4 v6, 0x3

    aget-wide v6, v84, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_41

    goto/16 :goto_20

    .line 15361
    :cond_4b
    const-string/jumbo v6, "ksm,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15362
    const/4 v6, 0x0

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15363
    const-string/jumbo v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x3

    aget-wide v6, v84, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    .line 15364
    const-string/jumbo v6, "tuning,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15365
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 15366
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 15367
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 15368
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 15369
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 15370
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_4c

    .line 15371
    const-string/jumbo v6, ",low-ram"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15373
    :cond_4c
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_4d

    .line 15374
    const-string/jumbo v6, ",high-end-gfx"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15376
    :cond_4d
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v15, v89

    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_f

    .line 15163
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v37    # "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v44    # "j":I
    .end local v70    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v84    # "ksm":[J
    .end local v88    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v96    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    :catchall_5
    move-exception v6

    move-object/from16 v15, v89

    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_15

    .line 14991
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v36    # "N":I
    .end local v48    # "otherPss":J
    .end local v64    # "nativeProcTotalPss":J
    .end local v68    # "cachedPss":J
    .end local v71    # "dalvikSubitemPss":[J
    .end local v72    # "dalvikPss":J
    .end local v80    # "i":I
    .end local v81    # "innerArgs":[Ljava/lang/String;
    .end local v90    # "miscPss":[J
    .end local v92    # "nativePss":J
    .end local v98    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v99    # "oomPss":[J
    .end local v103    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v104    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v110    # "totalPss":J
    .restart local v77    # "findPid":I
    .restart local v91    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    :catch_1
    move-exception v76

    .local v76, "e":Ljava/lang/NumberFormatException;
    goto/16 :goto_1

    .end local v76    # "e":Ljava/lang/NumberFormatException;
    .end local v77    # "findPid":I
    .end local v91    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v36    # "N":I
    .restart local v37    # "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v44    # "j":I
    .restart local v48    # "otherPss":J
    .restart local v64    # "nativeProcTotalPss":J
    .restart local v68    # "cachedPss":J
    .restart local v70    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v71    # "dalvikSubitemPss":[J
    .restart local v72    # "dalvikPss":J
    .restart local v80    # "i":I
    .restart local v81    # "innerArgs":[Ljava/lang/String;
    .restart local v88    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v90    # "miscPss":[J
    .restart local v92    # "nativePss":J
    .restart local v96    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v98    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v99    # "oomPss":[J
    .restart local v103    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v104    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v110    # "totalPss":J
    :cond_4e
    move-object/from16 v15, v89

    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_f

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v37    # "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v44    # "j":I
    .end local v70    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v88    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v96    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v108    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_4f
    move-object/from16 v15, v89

    .end local v89    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_11

    .line 15277
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 26
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13465
    const-string/jumbo v24, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13467
    const/4 v9, 0x0

    .line 13468
    .local v9, "dumpUid":I
    if-eqz p7, :cond_0

    .line 13469
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v17

    .line 13471
    .local v17, "pm":Landroid/content/pm/IPackageManager;
    const/16 v24, 0x0

    :try_start_0
    move-object/from16 v0, v17

    move-object/from16 v1, p7

    move/from16 v2, v24

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v9

    .line 13476
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    :cond_0
    :goto_0
    const/16 v20, 0x0

    .line 13478
    .local v20, "printedAnything":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v18

    .line 13480
    .local v18, "now":J
    const/4 v13, 0x0

    .local v13, "i1":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Landroid/util/SparseArray;->size()I

    move-result v4

    .local v4, "N1":I
    :goto_1
    if-ge v13, v4, :cond_7

    .line 13482
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Landroid/util/ArrayMap;

    .line 13483
    .local v23, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    const/4 v14, 0x0

    .local v14, "i2":I
    invoke-virtual/range {v23 .. v23}, Landroid/util/ArrayMap;->size()I

    move-result v5

    .local v5, "N2":I
    :goto_2
    if-ge v14, v5, :cond_6

    .line 13485
    move-object/from16 v0, v23

    invoke-virtual {v0, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Landroid/util/SparseArray;

    .line 13486
    .local v22, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    const/4 v15, 0x0

    .local v15, "i3":I
    invoke-virtual/range {v22 .. v22}, Landroid/util/SparseArray;->size()I

    move-result v6

    .local v6, "N3":I
    :goto_3
    if-ge v15, v6, :cond_5

    .line 13487
    move-object/from16 v0, v22

    invoke-virtual {v0, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Landroid/util/ArrayMap;

    .line 13488
    .local v21, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    const/16 v16, 0x0

    .local v16, "i4":I
    invoke-virtual/range {v21 .. v21}, Landroid/util/ArrayMap;->size()I

    move-result v7

    .local v7, "N4":I
    :goto_4
    move/from16 v0, v16

    if-ge v0, v7, :cond_4

    .line 13489
    move-object/from16 v0, v21

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ActivityManagerService$Association;

    .line 13490
    .local v8, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz p7, :cond_2

    .line 13491
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v24

    move-object/from16 v0, v24

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v24

    if-nez v24, :cond_2

    .line 13492
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v24, v0

    invoke-static/range {v24 .. v24}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v24

    move/from16 v0, v24

    if-eq v0, v9, :cond_2

    .line 13488
    :cond_1
    :goto_5
    add-int/lit8 v16, v16, 0x1

    goto :goto_4

    .line 13472
    .end local v4    # "N1":I
    .end local v5    # "N2":I
    .end local v6    # "N3":I
    .end local v7    # "N4":I
    .end local v8    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .end local v13    # "i1":I
    .end local v14    # "i2":I
    .end local v15    # "i3":I
    .end local v16    # "i4":I
    .end local v18    # "now":J
    .end local v20    # "printedAnything":Z
    .end local v21    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .end local v22    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    .end local v23    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    .restart local v17    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v12

    .local v12, "e":Landroid/os/RemoteException;
    goto :goto_0

    .line 13496
    .end local v12    # "e":Landroid/os/RemoteException;
    .end local v17    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v4    # "N1":I
    .restart local v5    # "N2":I
    .restart local v6    # "N3":I
    .restart local v7    # "N4":I
    .restart local v8    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .restart local v13    # "i1":I
    .restart local v14    # "i2":I
    .restart local v15    # "i3":I
    .restart local v16    # "i4":I
    .restart local v18    # "now":J
    .restart local v20    # "printedAnything":Z
    .restart local v21    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    .restart local v22    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    .restart local v23    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_2
    const/16 v20, 0x1

    .line 13497
    const-string/jumbo v24, "  "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13498
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    move-object/from16 v24, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13499
    const-string/jumbo v24, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13500
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    move/from16 v24, v0

    move-object/from16 v0, p2

    move/from16 v1, v24

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 13501
    const-string/jumbo v24, " <- "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13502
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    move-object/from16 v24, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13503
    const-string/jumbo v24, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13504
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v24, v0

    move-object/from16 v0, p2

    move/from16 v1, v24

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 13505
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13506
    const-string/jumbo v24, "    via "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13507
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v24

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13508
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13509
    const-string/jumbo v24, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13510
    iget-wide v10, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 13511
    .local v10, "dur":J
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v24, v0

    if-lez v24, :cond_3

    .line 13512
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v18, v24

    add-long v10, v10, v24

    .line 13514
    :cond_3
    move-object/from16 v0, p2

    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13515
    const-string/jumbo v24, " ("

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13516
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    move/from16 v24, v0

    move-object/from16 v0, p2

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13517
    const-string/jumbo v24, " times)"

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13518
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v24, v0

    if-lez v24, :cond_1

    .line 13519
    const-string/jumbo v24, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13520
    const-string/jumbo v24, " Currently active: "

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13521
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v18, v24

    move-wide/from16 v0, v24

    move-object/from16 v2, p2

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13522
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_5

    .line 13486
    .end local v8    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .end local v10    # "dur":J
    :cond_4
    add-int/lit8 v15, v15, 0x1

    goto/16 :goto_3

    .line 13483
    .end local v7    # "N4":I
    .end local v16    # "i4":I
    .end local v21    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :cond_5
    add-int/lit8 v14, v14, 0x1

    goto/16 :goto_2

    .line 13480
    .end local v6    # "N3":I
    .end local v15    # "i3":I
    .end local v22    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    :cond_6
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_1

    .line 13530
    .end local v5    # "N2":I
    .end local v14    # "i2":I
    .end local v23    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_7
    if-nez v20, :cond_8

    .line 13531
    const-string/jumbo v24, "  (nothing)"

    move-object/from16 v0, p2

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13464
    :cond_8
    return-void
.end method

.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 26
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 14258
    const/4 v9, 0x0

    .line 14259
    .local v9, "needSep":Z
    const/16 v17, 0x0

    .line 14260
    .local v17, "onlyHistory":Z
    const/16 v19, 0x0

    .line 14262
    .local v19, "printedAnything":Z
    const-string/jumbo v3, "history"

    move-object/from16 v0, p6

    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 14263
    move-object/from16 v0, p3

    array-length v3, v0

    move/from16 v0, p4

    if-ge v0, v3, :cond_0

    const-string/jumbo v3, "-s"

    aget-object v5, p3, p4

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 14264
    const/16 p5, 0x0

    .line 14266
    .end local p5    # "dumpAll":Z
    :cond_0
    const/16 v17, 0x1

    .line 14267
    const/16 p6, 0x0

    .line 14270
    .end local p6    # "dumpPackage":Ljava/lang/String;
    :cond_1
    const-string/jumbo v3, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14271
    if-nez v17, :cond_6

    if-eqz p5, :cond_6

    .line 14272
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_5

    .line 14273
    const/16 v18, 0x0

    .line 14274
    .local v18, "printed":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v16

    .line 14275
    .local v16, "it":Ljava/util/Iterator;
    :cond_2
    :goto_0
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 14276
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/ReceiverList;

    .line 14277
    .local v21, "r":Lcom/android/server/am/ReceiverList;
    if-eqz p6, :cond_3

    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_2

    .line 14278
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 14281
    :cond_3
    if-nez v18, :cond_4

    .line 14282
    const-string/jumbo v3, "  Registered Receivers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14283
    const/4 v9, 0x1

    .line 14284
    const/16 v18, 0x1

    .line 14285
    const/16 v19, 0x1

    .line 14287
    :cond_4
    const-string/jumbo v3, "  * "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 14288
    const-string/jumbo v3, "    "

    move-object/from16 v0, v21

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 14292
    .end local v16    # "it":Ljava/util/Iterator;
    .end local v18    # "printed":Z
    .end local v21    # "r":Lcom/android/server/am/ReceiverList;
    :cond_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v9, :cond_7

    .line 14293
    const-string/jumbo v4, "\n  Receiver Resolver Table:"

    .line 14294
    :goto_1
    const-string/jumbo v5, "    "

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v3, p2

    move-object/from16 v6, p6

    .line 14292
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 14295
    const/4 v9, 0x1

    .line 14296
    const/16 v19, 0x1

    .line 14300
    :cond_6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v24, v0

    const/4 v3, 0x0

    move-object/from16 v0, v24

    array-length v0, v0

    move/from16 v25, v0

    move/from16 v23, v3

    .end local v9    # "needSep":Z
    .end local v19    # "printedAnything":Z
    :goto_2
    move/from16 v0, v23

    move/from16 v1, v25

    if-ge v0, v1, :cond_8

    aget-object v2, v24, v23

    .local v2, "q":Lcom/android/server/am/BroadcastQueue;
    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    .line 14301
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z

    move-result v9

    .line 14302
    .local v9, "needSep":Z
    or-int v19, v19, v9

    .line 14300
    .local v19, "printedAnything":Z
    add-int/lit8 v3, v23, 0x1

    move/from16 v23, v3

    goto :goto_2

    .line 14293
    .end local v2    # "q":Lcom/android/server/am/BroadcastQueue;
    .local v9, "needSep":Z
    .local v19, "printedAnything":Z
    :cond_7
    const-string/jumbo v4, "  Receiver Resolver Table:"

    goto :goto_1

    .line 14305
    .end local v9    # "needSep":Z
    .end local v19    # "printedAnything":Z
    :cond_8
    const/4 v9, 0x1

    .line 14307
    .restart local v9    # "needSep":Z
    if-nez v17, :cond_e

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v3, :cond_e

    if-nez p6, :cond_e

    .line 14308
    const/16 v22, 0x0

    .local v22, "user":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    move/from16 v0, v22

    if-ge v0, v3, :cond_e

    .line 14309
    if-eqz v9, :cond_9

    .line 14310
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14312
    :cond_9
    const/4 v9, 0x1

    .line 14313
    const/16 v19, 0x1

    .line 14314
    .restart local v19    # "printedAnything":Z
    const-string/jumbo v3, "  Sticky broadcasts for user "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14315
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14316
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v4, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 14318
    .local v4, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    .line 14317
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v13

    .local v13, "ent$iterator":Ljava/util/Iterator;
    :cond_a
    :goto_4
    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_d

    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Ljava/util/Map$Entry;

    .line 14319
    .local v12, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-string/jumbo v3, "  * Sticky action "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14320
    if-eqz p5, :cond_c

    .line 14321
    const-string/jumbo v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14322
    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/ArrayList;

    .line 14323
    .local v15, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 14324
    .local v10, "N":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_5
    if-ge v14, v10, :cond_a

    .line 14325
    const/4 v3, 0x0

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 14326
    const-string/jumbo v3, "    Intent: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14327
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual/range {v3 .. v8}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 14328
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14329
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v11

    .line 14330
    .local v11, "bundle":Landroid/os/Bundle;
    if-eqz v11, :cond_b

    .line 14331
    const-string/jumbo v3, "      "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14332
    invoke-virtual {v11}, Landroid/os/Bundle;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14324
    :cond_b
    add-int/lit8 v14, v14, 0x1

    goto :goto_5

    .line 14336
    .end local v10    # "N":I
    .end local v11    # "bundle":Landroid/os/Bundle;
    .end local v14    # "i":I
    .end local v15    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_c
    const-string/jumbo v3, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_4

    .line 14308
    .end local v12    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_d
    add-int/lit8 v22, v22, 0x1

    goto/16 :goto_3

    .line 14342
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    .end local v13    # "ent$iterator":Ljava/util/Iterator;
    .end local v19    # "printedAnything":Z
    .end local v22    # "user":I
    :cond_e
    if-nez v17, :cond_10

    if-eqz p5, :cond_10

    .line 14343
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14344
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v3, 0x0

    array-length v6, v5

    :goto_6
    if-ge v3, v6, :cond_f

    aget-object v20, v5, v3

    .line 14345
    .local v20, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "  mBroadcastsScheduled ["

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v20

    iget-object v8, v0, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "]="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 14346
    move-object/from16 v0, v20

    iget-boolean v8, v0, Lcom/android/server/am/BroadcastQueue;->mBroadcastsScheduled:Z

    .line 14345
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    move-object/from16 v0, p2

    invoke-virtual {v0, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14344
    add-int/lit8 v3, v3, 0x1

    goto :goto_6

    .line 14348
    .end local v20    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_f
    const-string/jumbo v3, "  mHandler:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14349
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Landroid/util/PrintWriterPrinter;

    move-object/from16 v0, p2

    invoke-direct {v5, v0}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    const-string/jumbo v6, "    "

    invoke-virtual {v3, v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 14350
    const/4 v9, 0x1

    .line 14351
    const/16 v19, 0x1

    .line 14354
    :cond_10
    if-nez v19, :cond_11

    .line 14355
    const-string/jumbo v3, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14257
    :cond_11
    return-void
.end method

.method final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 9
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v8, 0x0

    .line 14732
    invoke-virtual {p0, p2, v8, v8, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v3

    .line 14733
    .local v3, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v3, :cond_0

    .line 14734
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "No process found for: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, p3, v8

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14735
    return-void

    .line 14738
    :cond_0
    const-string/jumbo v6, "Applications Database Info:"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14740
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v2, v6, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_2

    .line 14741
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 14742
    .local v4, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_1

    .line 14743
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "\n** Database info for pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14744
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 14746
    :try_start_0
    new-instance v5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 14748
    .local v5, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v7

    invoke-virtual {v7}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v7

    invoke-interface {v6, v7, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 14749
    invoke-virtual {v5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14751
    :try_start_2
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 14740
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_1
    :goto_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 14750
    .restart local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_0
    move-exception v6

    .line 14751
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 14750
    throw v6
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 14753
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v1

    .line 14754
    .local v1, "e":Ljava/io/IOException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Failure while dumping the app: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14755
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 14756
    .end local v1    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 14757
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Got a RemoteException while dumping the app "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14758
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 14731
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v4    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    return-void
.end method

.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 14696
    const/4 v10, 0x0

    const/4 v11, 0x0

    invoke-virtual {p0, p2, v10, v11, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v3

    .line 14697
    .local v3, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v3, :cond_0

    .line 14698
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "No process found for: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const/4 v11, 0x0

    aget-object v11, p3, v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14699
    return-void

    .line 14702
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 14703
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 14704
    .local v6, "realtime":J
    const-string/jumbo v10, "Applications Graphics Acceleration Info:"

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14705
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Uptime: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v11, " Realtime: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14707
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v10

    add-int/lit8 v2, v10, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_2

    .line 14708
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 14709
    .local v4, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v10, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v10, :cond_1

    .line 14710
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "\n** Graphics info for pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v11, " ["

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v11, "] **"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14711
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 14713
    :try_start_0
    new-instance v5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 14715
    .local v5, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget-object v10, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v11

    invoke-virtual {v11}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v11

    invoke-interface {v10, v11, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 14716
    invoke-virtual {v5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14718
    :try_start_2
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 14707
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_1
    :goto_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 14717
    .restart local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_0
    move-exception v10

    .line 14718
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 14717
    throw v10
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 14720
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v1

    .line 14721
    .local v1, "e":Ljava/io/IOException;
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Failure while dumping the app: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14722
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 14723
    .end local v1    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 14724
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Got a RemoteException while dumping the app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14725
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 14695
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v4    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    return-void
.end method

.method public dumpHeap(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
    .locals 7
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "managed"    # Z
    .param p4, "path"    # Ljava/lang/String;
    .param p5, "fd"    # Landroid/os/ParcelFileDescriptor;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 19972
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 19975
    :try_start_1
    const-string/jumbo v4, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_1

    .line 19977
    new-instance v4, Ljava/lang/SecurityException;

    const-string/jumbo v5, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19972
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit p0

    throw v4
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 20001
    .end local p5    # "fd":Landroid/os/ParcelFileDescriptor;
    :catch_0
    move-exception v0

    .line 20002
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v4, Ljava/lang/IllegalStateException;

    const-string/jumbo v5, "Process disappeared"

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 20003
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v4

    .line 20004
    if-eqz p5, :cond_0

    .line 20006
    :try_start_4
    invoke-virtual {p5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    .line 20003
    :cond_0
    :goto_0
    throw v4

    .line 19981
    .restart local p5    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_1
    if-nez p5, :cond_2

    .line 19982
    :try_start_5
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v5, "null fd"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 19985
    :cond_2
    const-string/jumbo v4, "dumpHeap"

    invoke-direct {p0, p1, p2, v4}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 19986
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_3

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v4, :cond_4

    .line 19987
    :cond_3
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Unknown process: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 19990
    :cond_4
    const-string/jumbo v4, "1"

    const-string/jumbo v5, "ro.debuggable"

    const-string/jumbo v6, "0"

    invoke-static {v5, v6}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 19991
    .local v2, "isDebuggable":Z
    if-nez v2, :cond_5

    .line 19992
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_5

    .line 19993
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Process not debuggable: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 19997
    :cond_5
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v4, p3, p4, p5}, Landroid/app/IApplicationThread;->dumpHeap(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 19998
    const/4 p5, 0x0

    .local p5, "fd":Landroid/os/ParcelFileDescriptor;
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 19999
    const/4 v4, 0x1

    return v4

    .line 20007
    .end local v2    # "isDebuggable":Z
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local p5    # "fd":Landroid/os/ParcelFileDescriptor;
    :catch_1
    move-exception v1

    .local v1, "e":Ljava/io/IOException;
    goto :goto_0
.end method

.method public dumpHeapFinished(Ljava/lang/String;)V
    .locals 3
    .param p1, "path"    # Ljava/lang/String;

    .prologue
    .line 20053
    monitor-enter p0

    .line 20054
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    if-eq v0, v1, :cond_0

    .line 20055
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "dumpHeapFinished: Calling pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20056
    const-string/jumbo v2, " does not match last pid "

    .line 20055
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20056
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    .line 20055
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 20057
    return-void

    .line 20059
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 20065
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x33

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 20052
    return-void

    .line 20060
    :cond_1
    :try_start_2
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "dumpHeapFinished: Calling path "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20061
    const-string/jumbo v2, " does not match last path "

    .line 20060
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20061
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    .line 20060
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 20062
    return-void

    .line 20053
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 14036
    const/4 v5, 0x0

    .line 14038
    .local v5, "needSep":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_2

    .line 14039
    if-eqz v5, :cond_0

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14040
    :cond_0
    const/4 v5, 0x1

    .line 14041
    const-string/jumbo v0, "  OOM levels:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14042
    const-string/jumbo v0, "SYSTEM_ADJ"

    const/16 v1, -0x10

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14043
    const-string/jumbo v0, "PERSISTENT_PROC_ADJ"

    const/16 v1, -0xc

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14044
    const-string/jumbo v0, "PERSISTENT_SERVICE_ADJ"

    const/16 v1, -0xb

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14045
    const-string/jumbo v0, "FOREGROUND_APP_ADJ"

    const/4 v1, 0x0

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14046
    const-string/jumbo v0, "VISIBLE_APP_ADJ"

    const/4 v1, 0x1

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14047
    const-string/jumbo v0, "PERCEPTIBLE_APP_ADJ"

    const/4 v1, 0x2

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14048
    const-string/jumbo v0, "BACKUP_APP_ADJ"

    const/4 v1, 0x3

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14049
    const-string/jumbo v0, "HEAVY_WEIGHT_APP_ADJ"

    const/4 v1, 0x4

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14050
    const-string/jumbo v0, "SERVICE_ADJ"

    const/4 v1, 0x5

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14051
    const-string/jumbo v0, "HOME_APP_ADJ"

    const/4 v1, 0x6

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14052
    const-string/jumbo v0, "PREVIOUS_APP_ADJ"

    const/4 v1, 0x7

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14053
    const-string/jumbo v0, "SERVICE_B_ADJ"

    const/16 v1, 0x8

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14054
    const-string/jumbo v0, "CACHED_APP_MIN_ADJ"

    const/16 v1, 0x9

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14055
    const-string/jumbo v0, "CACHED_APP_MAX_ADJ"

    const/16 v1, 0xf

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 14057
    if-eqz v5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14058
    :cond_1
    const-string/jumbo v0, "  Process OOM control ("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 14059
    const-string/jumbo v0, " total, non-act at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14060
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 14061
    const-string/jumbo v0, ", non-svc at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14062
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 14063
    const-string/jumbo v0, "):"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14064
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string/jumbo v3, "    "

    const-string/jumbo v4, "Proc"

    const-string/jumbo v5, "PERS"

    .end local v5    # "needSep":Z
    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v0, p2

    move-object v1, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 14065
    const/4 v5, 0x1

    .line 14068
    .restart local v5    # "needSep":Z
    :cond_2
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v6, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    .line 14070
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14071
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "  mHomeProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14072
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "  mPreviousProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14073
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_3

    .line 14074
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "  mHeavyWeightProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14077
    :cond_3
    const/4 v0, 0x1

    return v0
.end method

.method dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 5
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 14443
    const/4 v1, 0x0

    .line 14445
    .local v1, "printed":Z
    const-string/jumbo v4, "ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14447
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_4

    .line 14449
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 14450
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 14451
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/ref/WeakReference;

    .line 14452
    .local v3, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v3, :cond_2

    invoke-virtual {v3}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 14453
    :goto_1
    if-eqz p6, :cond_1

    if-eqz v2, :cond_0

    .line 14454
    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 14457
    :cond_1
    const/4 v1, 0x1

    .line 14458
    if-eqz v2, :cond_3

    .line 14459
    const-string/jumbo v4, "  * "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 14460
    if-eqz p5, :cond_0

    .line 14461
    const-string/jumbo v4, "    "

    invoke-virtual {v2, p2, v4}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 14452
    :cond_2
    const/4 v2, 0x0

    .local v2, "rec":Lcom/android/server/am/PendingIntentRecord;
    goto :goto_1

    .line 14464
    .end local v2    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_3
    const-string/jumbo v4, "  * "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_0

    .line 14469
    .end local v0    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v3    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_4
    if-nez v1, :cond_5

    .line 14470
    const-string/jumbo v4, "  (nothing)"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14442
    :cond_5
    return-void
.end method

.method dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 13
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 14398
    const/4 v4, 0x0

    .line 14399
    .local v4, "needSep":Z
    const/4 v9, 0x0

    .line 14401
    .local v9, "printedAnything":Z
    const-string/jumbo v11, "ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14403
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-lez v11, :cond_6

    .line 14404
    const/4 v8, 0x0

    .line 14405
    .local v8, "printed":Z
    const/4 v1, -0x2

    .line 14406
    .local v1, "dumpUid":I
    if-eqz p6, :cond_0

    .line 14408
    :try_start_0
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v11}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v11

    const/4 v12, 0x0

    move-object/from16 v0, p6

    invoke-virtual {v11, v0, v12}, Landroid/content/pm/PackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v1

    .line 14413
    :cond_0
    :goto_0
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-ge v3, v11, :cond_6

    .line 14414
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v10

    .line 14415
    .local v10, "uid":I
    const/4 v11, -0x1

    if-lt v1, v11, :cond_2

    invoke-static {v10}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v11

    if-eq v11, v1, :cond_2

    .line 14413
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 14409
    .end local v3    # "i":I
    .end local v10    # "uid":I
    :catch_0
    move-exception v2

    .line 14410
    .local v2, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    const/4 v1, -0x1

    goto :goto_0

    .line 14418
    .end local v2    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v3    # "i":I
    .restart local v10    # "uid":I
    :cond_2
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .line 14419
    .local v7, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v8, :cond_4

    .line 14420
    if-eqz v4, :cond_3

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14421
    :cond_3
    const/4 v4, 0x1

    .line 14422
    const-string/jumbo v11, "  Granted Uri Permissions:"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14423
    const/4 v8, 0x1

    .line 14424
    const/4 v9, 0x1

    .line 14426
    :cond_4
    const-string/jumbo v11, "  * UID "

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v11, " holds:"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14427
    invoke-virtual {v7}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v11

    invoke-interface {v11}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .local v6, "perm$iterator":Ljava/util/Iterator;
    :cond_5
    :goto_2
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_1

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 14428
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    const-string/jumbo v11, "    "

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 14429
    if-eqz p5, :cond_5

    .line 14430
    const-string/jumbo v11, "      "

    invoke-virtual {v5, p2, v11}, Lcom/android/server/am/UriPermission;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_2

    .line 14436
    .end local v1    # "dumpUid":I
    .end local v3    # "i":I
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perm$iterator":Ljava/util/Iterator;
    .end local v7    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v8    # "printed":Z
    .end local v10    # "uid":I
    :cond_6
    if-nez v9, :cond_7

    .line 14437
    const-string/jumbo v11, "  (nothing)"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14397
    :cond_7
    return-void
.end method

.method dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 47
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13537
    const/4 v9, 0x0

    .line 13538
    .local v9, "needSep":Z
    const/16 v34, 0x0

    .line 13539
    .local v34, "printedAnything":Z
    const/16 v25, 0x0

    .line 13541
    .local v25, "numPers":I
    const-string/jumbo v4, "ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13543
    if-eqz p5, :cond_5

    .line 13544
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 13545
    .local v14, "NP":I
    const/16 v20, 0x0

    .local v20, "ip":I
    :goto_0
    move/from16 v0, v20

    if-ge v0, v14, :cond_5

    .line 13546
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    move/from16 v0, v20

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v37

    check-cast v37, Landroid/util/SparseArray;

    .line 13547
    .local v37, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual/range {v37 .. v37}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 13548
    .local v13, "NA":I
    const/16 v18, 0x0

    .local v18, "ia":I
    :goto_1
    move/from16 v0, v18

    if-ge v0, v13, :cond_4

    .line 13549
    move-object/from16 v0, v37

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13550
    .local v39, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_0

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 13553
    :cond_0
    if-nez v9, :cond_1

    .line 13554
    const-string/jumbo v4, "  All known processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13555
    const/4 v9, 0x1

    .line 13556
    const/16 v34, 0x1

    .line 13558
    :cond_1
    move-object/from16 v0, v39

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_3

    const-string/jumbo v4, "  *PERS*"

    :goto_2
    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13559
    const-string/jumbo v4, " UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v37

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13560
    const-string/jumbo v4, " "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13561
    const-string/jumbo v4, "    "

    move-object/from16 v0, v39

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13562
    move-object/from16 v0, v39

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_2

    .line 13563
    add-int/lit8 v25, v25, 0x1

    .line 13548
    :cond_2
    add-int/lit8 v18, v18, 0x1

    goto :goto_1

    .line 13558
    :cond_3
    const-string/jumbo v4, "  *APP*"

    goto :goto_2

    .line 13545
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_4
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_0

    .line 13569
    .end local v13    # "NA":I
    .end local v14    # "NP":I
    .end local v18    # "ia":I
    .end local v20    # "ip":I
    .end local v37    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_a

    .line 13570
    const/16 v33, 0x0

    .line 13571
    .local v33, "printed":Z
    const/16 v17, 0x0

    .local v17, "i":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_a

    .line 13572
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13573
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_6

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 13576
    :cond_6
    if-nez v33, :cond_8

    .line 13577
    if-eqz v9, :cond_7

    .line 13578
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13580
    :cond_7
    const-string/jumbo v4, "  Isolated process list (sorted by uid):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13581
    const/16 v34, 0x1

    .line 13582
    const/16 v33, 0x1

    .line 13583
    const/4 v9, 0x1

    .line 13585
    :cond_8
    const-string/jumbo v4, "%sIsolated #%2d: %s"

    const/4 v5, 0x3

    new-array v5, v5, [Ljava/lang/Object;

    .line 13586
    const-string/jumbo v6, "    "

    const/4 v7, 0x0

    aput-object v6, v5, v7

    invoke-static/range {v17 .. v17}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v7, 0x1

    aput-object v6, v5, v7

    invoke-virtual/range {v39 .. v39}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x2

    aput-object v6, v5, v7

    .line 13585
    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13571
    :cond_9
    add-int/lit8 v17, v17, 0x1

    goto :goto_3

    .line 13590
    .end local v17    # "i":I
    .end local v33    # "printed":Z
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_a
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_d

    .line 13591
    if-eqz v9, :cond_b

    .line 13592
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13594
    :cond_b
    const-string/jumbo v4, "  UID states:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13595
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_c

    .line 13596
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v41

    check-cast v41, Lcom/android/server/am/UidRecord;

    .line 13597
    .local v41, "uidRec":Lcom/android/server/am/UidRecord;
    const-string/jumbo v4, "    UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v41

    iget v4, v0, Lcom/android/server/am/UidRecord;->uid:I

    move-object/from16 v0, p2

    invoke-static {v0, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 13598
    const-string/jumbo v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v41

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13595
    add-int/lit8 v17, v17, 0x1

    goto :goto_4

    .line 13600
    .end local v41    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_c
    const/4 v9, 0x1

    .line 13601
    const/16 v34, 0x1

    .line 13604
    .end local v17    # "i":I
    :cond_d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_f

    .line 13605
    if-eqz v9, :cond_e

    .line 13606
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13608
    :cond_e
    const-string/jumbo v4, "  Process LRU list (sorted by oom_adj, "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13609
    const-string/jumbo v4, " total, non-act at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13610
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13611
    const-string/jumbo v4, ", non-svc at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13612
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13613
    const-string/jumbo v4, "):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13614
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string/jumbo v7, "    "

    const-string/jumbo v8, "Proc"

    const-string/jumbo v9, "PERS"

    .end local v9    # "needSep":Z
    const/4 v10, 0x0

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v11, p6

    invoke-static/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 13615
    const/4 v9, 0x1

    .line 13616
    .restart local v9    # "needSep":Z
    const/16 v34, 0x1

    .line 13619
    :cond_f
    if-nez p5, :cond_10

    if-eqz p6, :cond_16

    .line 13620
    :cond_10
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 13621
    const/16 v33, 0x0

    .line 13622
    .restart local v33    # "printed":Z
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_5
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_15

    .line 13623
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13624
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_11

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_14

    .line 13627
    :cond_11
    if-nez v33, :cond_13

    .line 13628
    if-eqz v9, :cond_12

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13629
    :cond_12
    const/4 v9, 0x1

    .line 13630
    const-string/jumbo v4, "  PID mappings:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13631
    const/16 v33, 0x1

    .line 13632
    const/16 v34, 0x1

    .line 13634
    :cond_13
    const-string/jumbo v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13635
    const-string/jumbo v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13622
    :cond_14
    add-int/lit8 v17, v17, 0x1

    goto :goto_5

    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_15
    monitor-exit v5

    .line 13640
    .end local v17    # "i":I
    .end local v33    # "printed":Z
    :cond_16
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_1c

    .line 13641
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 13642
    const/16 v33, 0x0

    .line 13643
    .restart local v33    # "printed":Z
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_6
    :try_start_1
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_1b

    .line 13644
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 13645
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    iget v4, v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    .line 13644
    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13646
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_17

    if-eqz v39, :cond_1a

    .line 13647
    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1a

    .line 13650
    :cond_17
    if-nez v33, :cond_19

    .line 13651
    if-eqz v9, :cond_18

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13652
    :cond_18
    const/4 v9, 0x1

    .line 13653
    const-string/jumbo v4, "  Foreground Processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13654
    const/16 v33, 0x1

    .line 13655
    const/16 v34, 0x1

    .line 13657
    :cond_19
    const-string/jumbo v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13658
    const-string/jumbo v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13643
    :cond_1a
    add-int/lit8 v17, v17, 0x1

    goto :goto_6

    .line 13620
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    monitor-exit v5

    throw v4

    :cond_1b
    monitor-exit v5

    .line 13663
    .end local v17    # "i":I
    .end local v33    # "printed":Z
    :cond_1c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_1e

    .line 13664
    if-eqz v9, :cond_1d

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13665
    :cond_1d
    const/16 v24, 0x1

    .line 13666
    .end local v9    # "needSep":Z
    .local v24, "needSep":Z
    const/16 v34, 0x1

    .line 13667
    const-string/jumbo v4, "  Persisent processes that are starting:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13668
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string/jumbo v7, "    "

    .line 13669
    const-string/jumbo v8, "Starting Norm"

    const-string/jumbo v9, "Restarting PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    .line 13668
    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .line 13672
    .end local v24    # "needSep":Z
    :cond_1e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_20

    .line 13673
    if-eqz v9, :cond_1f

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13674
    :cond_1f
    const/16 v24, 0x1

    .line 13675
    .restart local v24    # "needSep":Z
    const/16 v34, 0x1

    .line 13676
    const-string/jumbo v4, "  Processes that are being removed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13677
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string/jumbo v7, "    "

    .line 13678
    const-string/jumbo v8, "Removed Norm"

    const-string/jumbo v9, "Removed PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    .line 13677
    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .line 13681
    .end local v24    # "needSep":Z
    :cond_20
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_22

    .line 13682
    if-eqz v9, :cond_21

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13683
    :cond_21
    const/16 v24, 0x1

    .line 13684
    .restart local v24    # "needSep":Z
    const/16 v34, 0x1

    .line 13685
    const-string/jumbo v4, "  Processes that are on old until the system is ready:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13686
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string/jumbo v7, "    "

    .line 13687
    const-string/jumbo v8, "OnHold Norm"

    const-string/jumbo v9, "OnHold PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    .line 13686
    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .end local v24    # "needSep":Z
    :cond_22
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p4

    move/from16 v10, p5

    move-object/from16 v11, p6

    .line 13690
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    move-result v9

    .line 13692
    .local v9, "needSep":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_28

    .line 13693
    const/16 v33, 0x0

    .line 13694
    .restart local v33    # "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v26

    .line 13695
    .local v26, "now":J
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v30

    .line 13696
    .local v30, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v30 .. v30}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 13697
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .end local v9    # "needSep":Z
    .restart local v20    # "ip":I
    :goto_7
    move/from16 v0, v20

    if-ge v0, v14, :cond_28

    .line 13698
    move-object/from16 v0, v30

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Ljava/lang/String;

    .line 13699
    .local v31, "pname":Ljava/lang/String;
    move-object/from16 v0, v30

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v44

    check-cast v44, Landroid/util/SparseArray;

    .line 13700
    .local v44, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual/range {v44 .. v44}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 13701
    .local v12, "N":I
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_8
    move/from16 v0, v17

    if-ge v0, v12, :cond_27

    .line 13702
    move-object/from16 v0, v44

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v38

    .line 13703
    .local v38, "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v31

    move/from16 v1, v38

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13704
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_23

    if-eqz v39, :cond_26

    .line 13705
    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_26

    .line 13708
    :cond_23
    if-nez v33, :cond_25

    .line 13709
    if-eqz v9, :cond_24

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13710
    :cond_24
    const/4 v9, 0x1

    .line 13711
    .local v9, "needSep":Z
    const-string/jumbo v4, "  Time since processes crashed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13712
    const/16 v33, 0x1

    .line 13713
    const/16 v34, 0x1

    .line 13715
    .end local v9    # "needSep":Z
    :cond_25
    const-string/jumbo v4, "    Process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v31

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13716
    const-string/jumbo v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v38

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13717
    const-string/jumbo v4, ": last crashed "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13718
    move-object/from16 v0, v44

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Long;

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    sub-long v4, v26, v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13719
    const-string/jumbo v4, " ago"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13701
    :cond_26
    add-int/lit8 v17, v17, 0x1

    goto/16 :goto_8

    .line 13641
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v20    # "ip":I
    .end local v26    # "now":J
    .end local v30    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v31    # "pname":Ljava/lang/String;
    .end local v38    # "puid":I
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v44    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .restart local v9    # "needSep":Z
    :catchall_1
    move-exception v4

    monitor-exit v5

    throw v4

    .line 13697
    .end local v9    # "needSep":Z
    .restart local v12    # "N":I
    .restart local v14    # "NP":I
    .restart local v20    # "ip":I
    .restart local v26    # "now":J
    .restart local v30    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .restart local v31    # "pname":Ljava/lang/String;
    .restart local v44    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    :cond_27
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_7

    .line 13724
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v17    # "i":I
    .end local v20    # "ip":I
    .end local v26    # "now":J
    .end local v30    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v31    # "pname":Ljava/lang/String;
    .end local v33    # "printed":Z
    .end local v44    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    :cond_28
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_32

    .line 13725
    const/16 v33, 0x0

    .line 13726
    .restart local v33    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v29

    .line 13727
    .local v29, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    invoke-virtual/range {v29 .. v29}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 13728
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .restart local v20    # "ip":I
    :goto_9
    move/from16 v0, v20

    if-ge v0, v14, :cond_32

    .line 13729
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Ljava/lang/String;

    .line 13730
    .restart local v31    # "pname":Ljava/lang/String;
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v43

    check-cast v43, Landroid/util/SparseArray;

    .line 13731
    .local v43, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    invoke-virtual/range {v43 .. v43}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 13732
    .restart local v12    # "N":I
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_a
    move/from16 v0, v17

    if-ge v0, v12, :cond_31

    .line 13733
    move-object/from16 v0, v43

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v38

    .line 13734
    .restart local v38    # "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v31

    move/from16 v1, v38

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 13735
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_29

    if-eqz v39, :cond_30

    .line 13736
    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_30

    .line 13739
    :cond_29
    if-nez v33, :cond_2b

    .line 13740
    if-eqz v9, :cond_2a

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13741
    :cond_2a
    const/4 v9, 0x1

    .line 13742
    .restart local v9    # "needSep":Z
    const-string/jumbo v4, "  Bad processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13743
    const/16 v34, 0x1

    .line 13745
    .end local v9    # "needSep":Z
    :cond_2b
    move-object/from16 v0, v43

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    .line 13746
    .local v19, "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    const-string/jumbo v4, "    Bad process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v31

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13747
    const-string/jumbo v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v38

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13748
    const-string/jumbo v4, ": crashed at time "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->time:J

    move-object/from16 v0, p2

    invoke-virtual {v0, v4, v5}, Ljava/io/PrintWriter;->println(J)V

    .line 13749
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    if-eqz v4, :cond_2c

    .line 13750
    const-string/jumbo v4, "      Short msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13752
    :cond_2c
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    if-eqz v4, :cond_2d

    .line 13753
    const-string/jumbo v4, "      Long msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13755
    :cond_2d
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    if-eqz v4, :cond_30

    .line 13756
    const-string/jumbo v4, "      Stack:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13757
    const/16 v22, 0x0

    .line 13758
    .local v22, "lastPos":I
    const/16 v32, 0x0

    .local v32, "pos":I
    :goto_b
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v32

    if-ge v0, v4, :cond_2f

    .line 13759
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move/from16 v0, v32

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0xa

    if-ne v4, v5, :cond_2e

    .line 13760
    const-string/jumbo v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13761
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    sub-int v5, v32, v22

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 13762
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13763
    add-int/lit8 v22, v32, 0x1

    .line 13758
    :cond_2e
    add-int/lit8 v32, v32, 0x1

    goto :goto_b

    .line 13766
    :cond_2f
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v22

    if-ge v0, v4, :cond_30

    .line 13767
    const-string/jumbo v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13768
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move-object/from16 v0, v19

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v5

    sub-int v5, v5, v22

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 13769
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13732
    .end local v19    # "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    .end local v22    # "lastPos":I
    .end local v32    # "pos":I
    :cond_30
    add-int/lit8 v17, v17, 0x1

    goto/16 :goto_a

    .line 13728
    .end local v38    # "puid":I
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_31
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_9

    .line 13776
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v17    # "i":I
    .end local v20    # "ip":I
    .end local v29    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    .end local v31    # "pname":Ljava/lang/String;
    .end local v33    # "printed":Z
    .end local v43    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    :cond_32
    if-nez p6, :cond_3a

    .line 13777
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13778
    const/4 v9, 0x0

    .line 13779
    .restart local v9    # "needSep":Z
    const-string/jumbo v4, "  mStartedUsers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13780
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_33

    .line 13781
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v45

    check-cast v45, Lcom/android/server/am/UserState;

    .line 13782
    .local v45, "uss":Lcom/android/server/am/UserState;
    const-string/jumbo v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v45

    iget-object v4, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v4}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13783
    const-string/jumbo v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v4, ""

    move-object/from16 v0, v45

    move-object/from16 v1, p2

    invoke-virtual {v0, v4, v1}, Lcom/android/server/am/UserState;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13780
    add-int/lit8 v17, v17, 0x1

    goto :goto_c

    .line 13785
    .end local v45    # "uss":Lcom/android/server/am/UserState;
    :cond_33
    const-string/jumbo v4, "  mStartedUserArray: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13786
    const/16 v17, 0x0

    :goto_d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    array-length v4, v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_35

    .line 13787
    if-lez v17, :cond_34

    const-string/jumbo v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13788
    :cond_34
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    aget v4, v4, v17

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13786
    add-int/lit8 v17, v17, 0x1

    goto :goto_d

    .line 13790
    :cond_35
    const-string/jumbo v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13791
    const-string/jumbo v4, "  mUserLru: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13792
    const/16 v17, 0x0

    :goto_e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_37

    .line 13793
    if-lez v17, :cond_36

    const-string/jumbo v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13794
    :cond_36
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 13792
    add-int/lit8 v17, v17, 0x1

    goto :goto_e

    .line 13796
    :cond_37
    const-string/jumbo v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13797
    if-eqz p5, :cond_38

    .line 13798
    const-string/jumbo v4, "  mStartedUserArray: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    invoke-static {v4}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13800
    :cond_38
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v5

    .line 13801
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    if-lez v4, :cond_39

    .line 13802
    const-string/jumbo v4, "  mUserProfileGroupIds:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13803
    const/16 v17, 0x0

    :goto_f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_39

    .line 13804
    const-string/jumbo v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13805
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13806
    const-string/jumbo v4, " -> profile #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13807
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v17

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 13803
    add-int/lit8 v17, v17, 0x1

    goto :goto_f

    :cond_39
    monitor-exit v5

    .line 13812
    .end local v9    # "needSep":Z
    .end local v17    # "i":I
    :cond_3a
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_3d

    if-eqz p6, :cond_3b

    .line 13813
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    .line 13812
    if-eqz v4, :cond_3d

    .line 13814
    :cond_3b
    if-eqz v9, :cond_3c

    .line 13815
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13816
    const/4 v9, 0x0

    .line 13818
    :cond_3c
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mHomeProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13820
    :cond_3d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_40

    if-eqz p6, :cond_3e

    .line 13821
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    .line 13820
    if-eqz v4, :cond_40

    .line 13822
    :cond_3e
    if-eqz v9, :cond_3f

    .line 13823
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13824
    const/4 v9, 0x0

    .line 13826
    :cond_3f
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mPreviousProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13828
    :cond_40
    if-eqz p5, :cond_41

    .line 13829
    new-instance v40, Ljava/lang/StringBuilder;

    const/16 v4, 0x80

    move-object/from16 v0, v40

    invoke-direct {v0, v4}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 13830
    .local v40, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v4, "  mPreviousProcessVisibleTime: "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13831
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J

    move-object/from16 v0, v40

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 13832
    move-object/from16 v0, p2

    move-object/from16 v1, v40

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13834
    .end local v40    # "sb":Ljava/lang/StringBuilder;
    :cond_41
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_44

    if-eqz p6, :cond_42

    .line 13835
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    .line 13834
    if-eqz v4, :cond_44

    .line 13836
    :cond_42
    if-eqz v9, :cond_43

    .line 13837
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13838
    const/4 v9, 0x0

    .line 13840
    :cond_43
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mHeavyWeightProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13842
    :cond_44
    if-nez p6, :cond_45

    .line 13843
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mConfiguration: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13845
    :cond_45
    if-eqz p5, :cond_49

    .line 13846
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mConfigWillChange: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    iget-boolean v5, v5, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13847
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_49

    .line 13848
    const/16 v33, 0x0

    .line 13850
    .restart local v33    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v4

    .line 13849
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v16

    .local v16, "entry$iterator":Ljava/util/Iterator;
    :cond_46
    :goto_10
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_49

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/Map$Entry;

    .line 13851
    .local v15, "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-interface {v15}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Ljava/lang/String;

    .line 13852
    .local v28, "pkg":Ljava/lang/String;
    invoke-interface {v15}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v23

    .line 13853
    .local v23, "mode":I
    if-eqz p6, :cond_47

    move-object/from16 v0, p6

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_46

    .line 13856
    :cond_47
    if-nez v33, :cond_48

    .line 13857
    const-string/jumbo v4, "  mScreenCompatPackages:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13858
    const/16 v33, 0x1

    .line 13860
    :cond_48
    const-string/jumbo v4, "    "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13861
    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_10

    .line 13800
    .end local v15    # "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    .end local v16    # "entry$iterator":Ljava/util/Iterator;
    .end local v23    # "mode":I
    .end local v28    # "pkg":Ljava/lang/String;
    .end local v33    # "printed":Z
    .restart local v9    # "needSep":Z
    .restart local v17    # "i":I
    :catchall_2
    move-exception v4

    monitor-exit v5

    throw v4

    .line 13865
    .end local v9    # "needSep":Z
    .end local v17    # "i":I
    :cond_49
    if-nez p6, :cond_4a

    .line 13866
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mWakefulness="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13867
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    invoke-static {v5}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    move-result-object v5

    .line 13866
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13868
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mSleepTokens="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13869
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mSleeping="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mLockScreenShown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13870
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->lockScreenShownToString()Ljava/lang/String;

    move-result-object v5

    .line 13869
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13871
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mShuttingDown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mTestPssMode="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13872
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v4, :cond_4a

    .line 13873
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mRunningVoice="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13874
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mVoiceWakeLock"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13877
    :cond_4a
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v4, :cond_4b

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-eqz v4, :cond_52

    .line 13879
    :cond_4b
    :goto_11
    if-eqz p6, :cond_4c

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_4c

    .line 13880
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    .line 13879
    if-eqz v4, :cond_4e

    .line 13881
    :cond_4c
    if-eqz v9, :cond_4d

    .line 13882
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13883
    const/4 v9, 0x0

    .line 13885
    :cond_4d
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mDebugApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, "/orig="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13886
    const-string/jumbo v5, " mDebugTransient="

    .line 13885
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13886
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 13885
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13887
    const-string/jumbo v5, " mOrigWaitForDebugger="

    .line 13885
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13887
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 13885
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13890
    :cond_4e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v4, :cond_4f

    .line 13891
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    const-string/jumbo v5, "  "

    const/4 v6, 0x1

    move-object/from16 v0, p2

    invoke-virtual {v4, v0, v5, v6}, Lcom/android/server/am/AppTimeTracker;->dumpWithHeader(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 13893
    :cond_4f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_55

    .line 13894
    const-string/jumbo v4, "  Mem watch processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13896
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v36

    .line 13897
    .local v36, "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    const/16 v17, 0x0

    .restart local v17    # "i":I
    :goto_12
    invoke-virtual/range {v36 .. v36}, Landroid/util/ArrayMap;->size()I

    move-result v4

    move/from16 v0, v17

    if-ge v0, v4, :cond_54

    .line 13898
    move-object/from16 v0, v36

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Ljava/lang/String;

    .line 13899
    .local v35, "proc":Ljava/lang/String;
    move-object/from16 v0, v36

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Landroid/util/SparseArray;

    .line 13900
    .local v42, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    const/16 v21, 0x0

    .local v21, "j":I
    :goto_13
    invoke-virtual/range {v42 .. v42}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v21

    if-ge v0, v4, :cond_53

    .line 13901
    if-eqz v9, :cond_50

    .line 13902
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13903
    const/4 v9, 0x0

    .line 13905
    :cond_50
    new-instance v40, Ljava/lang/StringBuilder;

    invoke-direct/range {v40 .. v40}, Ljava/lang/StringBuilder;-><init>()V

    .line 13906
    .restart local v40    # "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v4, "    "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v35

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/16 v5, 0x2f

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 13907
    move-object/from16 v0, v42

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, v40

    invoke-static {v0, v4}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 13908
    move-object/from16 v0, v42

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v46

    check-cast v46, Landroid/util/Pair;

    .line 13909
    .local v46, "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    const-string/jumbo v4, ": "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v4, Ljava/lang/Long;

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    move-object/from16 v0, v40

    invoke-static {v4, v5, v0}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    .line 13910
    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    if-eqz v4, :cond_51

    .line 13911
    const-string/jumbo v4, ", report to "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13913
    :cond_51
    invoke-virtual/range {v40 .. v40}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13900
    add-int/lit8 v21, v21, 0x1

    goto :goto_13

    .line 13877
    .end local v17    # "i":I
    .end local v21    # "j":I
    .end local v35    # "proc":Ljava/lang/String;
    .end local v36    # "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    .end local v40    # "sb":Ljava/lang/StringBuilder;
    .end local v42    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    .end local v46    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    :cond_52
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v4, :cond_4b

    .line 13878
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 13877
    if-eqz v4, :cond_4e

    goto/16 :goto_11

    .line 13897
    .restart local v17    # "i":I
    .restart local v21    # "j":I
    .restart local v35    # "proc":Ljava/lang/String;
    .restart local v36    # "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    .restart local v42    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    :cond_53
    add-int/lit8 v17, v17, 0x1

    goto/16 :goto_12

    .line 13916
    .end local v21    # "j":I
    .end local v35    # "proc":Ljava/lang/String;
    .end local v42    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    :cond_54
    const-string/jumbo v4, "  mMemWatchDumpProcName="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13917
    const-string/jumbo v4, "  mMemWatchDumpFile="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13918
    const-string/jumbo v4, "  mMemWatchDumpPid="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13919
    const-string/jumbo v4, " mMemWatchDumpUid="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 13921
    .end local v17    # "i":I
    .end local v36    # "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    :cond_55
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v4, :cond_58

    .line 13922
    if-eqz p6, :cond_56

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_58

    .line 13923
    :cond_56
    if-eqz v9, :cond_57

    .line 13924
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13925
    const/4 v9, 0x0

    .line 13927
    :cond_57
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mOpenGlTraceApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13930
    :cond_58
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-nez v4, :cond_59

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_61

    .line 13932
    :cond_59
    :goto_14
    if-eqz p6, :cond_5a

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_5c

    .line 13933
    :cond_5a
    if-eqz v9, :cond_5b

    .line 13934
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13935
    const/4 v9, 0x0

    .line 13937
    :cond_5b
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mProfileApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mProfileProc="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13938
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mProfileFile="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mProfileFd="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13939
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mSamplingInterval="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mAutoStopProfiler="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13940
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 13939
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13941
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mProfileType="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13944
    :cond_5c
    if-nez p6, :cond_5f

    .line 13945
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-nez v4, :cond_5d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v4, :cond_5e

    .line 13946
    :cond_5d
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mAlwaysFinishActivities="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13947
    const-string/jumbo v5, " mController="

    .line 13946
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13947
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 13946
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13949
    :cond_5e
    if-eqz p5, :cond_5f

    .line 13950
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  Total persistent processes: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v25

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13951
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mProcessesReady="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13952
    const-string/jumbo v5, " mSystemReady="

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13952
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13953
    const-string/jumbo v5, " mBooted="

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13953
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13954
    const-string/jumbo v5, " mFactoryTest="

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13954
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 13951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13955
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mBooting="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13956
    const-string/jumbo v5, " mCallFinishBooting="

    .line 13955
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13956
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 13955
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13957
    const-string/jumbo v5, " mBootAnimationComplete="

    .line 13955
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13957
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 13955
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13958
    const-string/jumbo v4, "  mLastPowerCheckRealtime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13959
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13960
    const-string/jumbo v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13961
    const-string/jumbo v4, "  mLastPowerCheckUptime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13962
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13963
    const-string/jumbo v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13964
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mGoingToSleep="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13965
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mLaunchingActivity="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13966
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mAdjSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " mLruSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13967
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mNumNonCachedProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13968
    const-string/jumbo v5, " ("

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13968
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13968
    const-string/jumbo v5, " total)"

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13969
    const-string/jumbo v5, " mNumCachedHiddenProcs="

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13969
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13970
    const-string/jumbo v5, " mNumServiceProcs="

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13970
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13971
    const-string/jumbo v5, " mNewNumServiceProcs="

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13971
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 13967
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13972
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "  mAllowLowerMemLevel="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13973
    const-string/jumbo v5, " mLastMemoryLevel"

    .line 13972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13973
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 13972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13974
    const-string/jumbo v5, " mLastNumProcesses"

    .line 13972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 13974
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    .line 13972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13975
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v26

    .line 13976
    .restart local v26    # "now":J
    const-string/jumbo v4, "  mLastIdleTime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13977
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-wide/from16 v0, v26

    move-object/from16 v2, p2

    invoke-static {v0, v1, v4, v5, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 13978
    const-string/jumbo v4, " mLowRamSinceLastIdle="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13979
    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13980
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13984
    .end local v26    # "now":J
    :cond_5f
    if-nez v34, :cond_60

    .line 13985
    const-string/jumbo v4, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13536
    :cond_60
    return-void

    .line 13930
    :cond_61
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    if-nez v4, :cond_59

    .line 13931
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_5c

    goto/16 :goto_14
.end method

.method dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "needSep"    # Z
    .param p6, "dumpAll"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13991
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_4

    .line 13992
    const/4 v1, 0x0

    .line 13993
    .local v1, "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 13994
    .local v2, "now":J
    const/4 v0, 0x0

    .end local p5    # "needSep":Z
    .local v0, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v0, v5, :cond_4

    .line 13995
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 13996
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 13999
    :cond_0
    if-nez v1, :cond_2

    .line 14000
    if-eqz p5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14001
    :cond_1
    const/4 p5, 0x1

    .line 14002
    .local p5, "needSep":Z
    const-string/jumbo v5, "  Processes that are waiting to GC:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14003
    const/4 v1, 0x1

    .line 14005
    .end local p5    # "needSep":Z
    :cond_2
    const-string/jumbo v5, "    Process "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 14006
    const-string/jumbo v5, "      lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 14007
    const-string/jumbo v5, ", last gced="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14008
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14009
    const-string/jumbo v5, " ms ago, last lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14010
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14011
    const-string/jumbo v5, " ms ago"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13994
    :cond_3
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 14015
    .end local v0    # "i":I
    .end local v1    # "printed":Z
    .end local v2    # "now":J
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    return p5
.end method

.method protected dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 14090
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ProviderMap;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    return v0
.end method

.method dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 14364
    new-instance v1, Lcom/android/server/am/ActivityManagerService$ItemMatcher;

    invoke-direct {v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V

    .line 14365
    .local v1, "matcher":Lcom/android/server/am/ActivityManagerService$ItemMatcher;
    invoke-virtual {v1, p3, p4}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I

    .line 14367
    const-string/jumbo v6, "ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14369
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v6, p2, p5, p6}, Lcom/android/server/am/ProviderMap;->dumpProvidersLocked(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v2

    .line 14370
    .local v2, "needSep":Z
    move v4, v2

    .line 14372
    .local v4, "printedAnything":Z
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_4

    .line 14373
    const/4 v3, 0x0

    .line 14374
    .local v3, "printed":Z
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v0, v6, -0x1

    .end local v2    # "needSep":Z
    .end local v4    # "printedAnything":Z
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_4

    .line 14375
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    .line 14376
    .local v5, "r":Lcom/android/server/am/ContentProviderRecord;
    if-eqz p6, :cond_0

    iget-object v6, v5, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p6, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_3

    .line 14379
    :cond_0
    if-nez v3, :cond_2

    .line 14380
    if-eqz v2, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 14381
    :cond_1
    const/4 v2, 0x1

    .line 14382
    .local v2, "needSep":Z
    const-string/jumbo v6, "  Launching content providers:"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14383
    const/4 v3, 0x1

    .line 14384
    const/4 v4, 0x1

    .line 14386
    .end local v2    # "needSep":Z
    :cond_2
    const-string/jumbo v6, "  Launching #"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v6, ": "

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14387
    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 14374
    :cond_3
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 14391
    .end local v0    # "i":I
    .end local v3    # "printed":Z
    .end local v5    # "r":Lcom/android/server/am/ContentProviderRecord;
    :cond_4
    if-nez v4, :cond_5

    .line 14392
    const-string/jumbo v6, "  (nothing)"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14360
    :cond_5
    return-void
.end method

.method dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13429
    const-string/jumbo v5, "ACTIVITY MANAGER RECENT TASKS (dumpsys activity recents)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13431
    const/4 v2, 0x0

    .line 13433
    .local v2, "printedAnything":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v5

    if-lez v5, :cond_3

    .line 13434
    const/4 v3, 0x0

    .line 13436
    .local v3, "printedHeader":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 13437
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    .line 13438
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 13439
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz p6, :cond_0

    .line 13440
    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    if-eqz v5, :cond_2

    .line 13441
    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 13445
    :cond_0
    if-nez v3, :cond_1

    .line 13446
    const-string/jumbo v5, "  Recent tasks:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13447
    const/4 v3, 0x1

    .line 13448
    const/4 v2, 0x1

    .line 13450
    :cond_1
    const-string/jumbo v5, "  * Recent #"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v5, ": "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13451
    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13452
    if-eqz p5, :cond_2

    .line 13453
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/TaskRecord;

    const-string/jumbo v6, "    "

    invoke-virtual {v5, p2, v6}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13437
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 13458
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v3    # "printedHeader":Z
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    if-nez v2, :cond_4

    .line 13459
    const-string/jumbo v5, "  (nothing)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13428
    :cond_4
    return-void
.end method

.method enableScreenAfterBoot()V
    .locals 3

    .prologue
    .line 6438
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 6437
    const/16 v2, 0xbea

    invoke-static {v2, v0, v1}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 6439
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->enableScreenAfterBoot()V

    .line 6441
    monitor-enter p0

    .line 6442
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 6436
    return-void

    .line 6441
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    .line 7324
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 7326
    return-void

    .line 7329
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7330
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 7329
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7331
    const-string/jumbo v2, ", uid="

    .line 7329
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7331
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 7329
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7332
    const-string/jumbo v2, " requires "

    .line 7329
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 7333
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7334
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;

    .prologue
    .line 3713
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3714
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Isolated process not allowed to call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3712
    :cond_0
    return-void
.end method

.method enforceShellRestriction(Ljava/lang/String;I)V
    .locals 3
    .param p1, "restriction"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 3719
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_1

    .line 3720
    if-ltz p2, :cond_0

    .line 3721
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v0

    .line 3720
    if-eqz v0, :cond_1

    .line 3722
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Shell does not have permission to access user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3718
    :cond_1
    return-void
.end method

.method final ensureBootCompleted()V
    .locals 3

    .prologue
    .line 6632
    monitor-enter p0

    .line 6633
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 6634
    .local v0, "booting":Z
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 6635
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v2, :cond_2

    const/4 v1, 0x0

    .line 6636
    .local v1, "enableScreen":Z
    :goto_0
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 6639
    if-eqz v0, :cond_0

    .line 6640
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 6643
    :cond_0
    if-eqz v1, :cond_1

    .line 6644
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->enableScreenAfterBoot()V

    .line 6629
    :cond_1
    return-void

    .line 6635
    .end local v1    # "enableScreen":Z
    :cond_2
    const/4 v1, 0x1

    .restart local v1    # "enableScreen":Z
    goto :goto_0

    .line 6632
    .end local v0    # "booting":Z
    .end local v1    # "enableScreen":Z
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method ensurePackageDexOpt(Ljava/lang/String;)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3170
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 3172
    .local v1, "pm":Landroid/content/pm/IPackageManager;
    const/4 v2, 0x0

    :try_start_0
    invoke-interface {v1, p1, v2}, Landroid/content/pm/IPackageManager;->performDexOptIfNeeded(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 3173
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3169
    :cond_0
    :goto_0
    return-void

    .line 3175
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public final enterSafeMode()V
    .locals 2

    .prologue
    .line 11368
    monitor-enter p0

    .line 11371
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v1, :cond_0

    .line 11373
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    invoke-interface {v1}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11378
    :cond_0
    :goto_0
    const/4 v1, 0x1

    :try_start_2
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 11367
    return-void

    .line 11368
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 11374
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;Z)Z
    .locals 17
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Landroid/content/Intent;
    .param p4, "finishTask"    # Z

    .prologue
    .line 4416
    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4417
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 4420
    :cond_0
    monitor-enter p0

    .line 4421
    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v12

    .line 4422
    .local v12, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v12, :cond_1

    .line 4423
    const/4 v2, 0x1

    monitor-exit p0

    return v2

    .line 4426
    :cond_1
    :try_start_1
    iget-object v0, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v16, v0

    .line 4427
    .local v16, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v15

    .line 4428
    .local v15, "rootR":Lcom/android/server/am/ActivityRecord;
    if-nez v15, :cond_2

    .line 4429
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Finishing task with all activities already finished"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4433
    :cond_2
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    const/4 v3, 0x4

    if-eq v2, v3, :cond_3

    if-ne v15, v12, :cond_3

    .line 4434
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->isLastLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v2

    .line 4433
    if-eqz v2, :cond_3

    .line 4435
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Not finishing task in lock task mode"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4436
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4437
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4439
    :cond_3
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_4

    .line 4441
    iget-object v2, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v2, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Landroid/os/IBinder;I)Lcom/android/server/am/ActivityRecord;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result-object v9

    .line 4442
    .local v9, "next":Lcom/android/server/am/ActivityRecord;
    if-eqz v9, :cond_4

    .line 4444
    const/4 v14, 0x1

    .line 4446
    .local v14, "resumeOK":Z
    :try_start_3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    iget-object v3, v9, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v2, v3}, Landroid/app/IActivityController;->activityResuming(Ljava/lang/String;)Z
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v14

    .line 4452
    .end local v14    # "resumeOK":Z
    :goto_0
    if-nez v14, :cond_4

    .line 4453
    :try_start_4
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Not finishing activity because controller resumed"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 4454
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4447
    .restart local v14    # "resumeOK":Z
    :catch_0
    move-exception v8

    .line 4448
    .local v8, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    :try_start_5
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 4449
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_0

    .line 4420
    .end local v8    # "e":Landroid/os/RemoteException;
    .end local v9    # "next":Lcom/android/server/am/ActivityRecord;
    .end local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v14    # "resumeOK":Z
    .end local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .end local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 4458
    .restart local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .restart local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_4
    :try_start_6
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    move-result-wide v10

    .line 4461
    .local v10, "origId":J
    if-eqz p4, :cond_6

    if-ne v12, v15, :cond_6

    .line 4465
    :try_start_7
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    move-result v13

    .line 4466
    .local v13, "res":Z
    if-nez v13, :cond_5

    .line 4467
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Removing task failed to finish activity"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 4478
    :cond_5
    :goto_1
    :try_start_8
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    monitor-exit p0

    .line 4476
    return v13

    .line 4470
    .end local v13    # "res":Z
    :cond_6
    :try_start_9
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    .line 4471
    const-string/jumbo v6, "app-request"

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move/from16 v4, p2

    move-object/from16 v5, p3

    .line 4470
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->requestFinishActivityLocked(Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    move-result v13

    .line 4472
    .restart local v13    # "res":Z
    if-nez v13, :cond_5

    .line 4473
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Failed to finish by app-request"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    goto :goto_1

    .line 4477
    .end local v13    # "res":Z
    :catchall_1
    move-exception v2

    .line 4478
    :try_start_a
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4477
    throw v2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0
.end method

.method public finishActivityAffinity(Landroid/os/IBinder;)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v6, 0x0

    .line 4587
    monitor-enter p0

    .line 4588
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 4590
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    .line 4591
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 4605
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 4592
    return v6

    .line 4597
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 4598
    .local v3, "task":Lcom/android/server/am/TaskRecord;
    iget v4, v3, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    const/4 v5, 0x4

    if-eq v4, v5, :cond_1

    .line 4599
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStackSupervisor;->isLastLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v4

    .line 4598
    if-eqz v4, :cond_1

    .line 4599
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v4

    if-ne v4, v2, :cond_1

    .line 4600
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 4605
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 4601
    return v6

    .line 4603
    :cond_1
    :try_start_5
    iget-object v4, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStack;->finishActivityAffinityLocked(Lcom/android/server/am/ActivityRecord;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-result v4

    .line 4605
    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    monitor-exit p0

    .line 4603
    return v4

    .line 4604
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v4

    .line 4605
    :try_start_7
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4604
    throw v4
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 4587
    .end local v0    # "origId":J
    :catchall_1
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method final finishBooting()V
    .locals 30

    .prologue
    .line 6496
    monitor-enter p0

    .line 6497
    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    if-nez v2, :cond_0

    .line 6498
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 6499
    return-void

    .line 6501
    :cond_0
    const/4 v2, 0x0

    :try_start_1
    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 6504
    new-instance v21, Landroid/util/ArraySet;

    invoke-direct/range {v21 .. v21}, Landroid/util/ArraySet;-><init>()V

    .line 6505
    .local v21, "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    sget-object v3, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    const/4 v2, 0x0

    array-length v4, v3

    :goto_0
    if-ge v2, v4, :cond_3

    aget-object v20, v3, v2

    .line 6506
    .local v20, "abi":Ljava/lang/String;
    invoke-static/range {v20 .. v20}, Landroid/os/Process;->establishZygoteConnectionForAbi(Ljava/lang/String;)V

    .line 6507
    invoke-static/range {v20 .. v20}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v24

    .line 6508
    .local v24, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, v21

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_2

    .line 6509
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    invoke-static/range {v20 .. v20}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Lcom/android/server/pm/Installer;->markBootComplete(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_1

    .line 6510
    const-string/jumbo v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Unable to mark boot complete for abi: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v20

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6512
    :cond_1
    move-object/from16 v0, v21

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 6505
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6496
    .end local v20    # "abi":Ljava/lang/String;
    .end local v21    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v24    # "instructionSet":Ljava/lang/String;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 6516
    .restart local v21    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    :cond_3
    new-instance v27, Landroid/content/IntentFilter;

    invoke-direct/range {v27 .. v27}, Landroid/content/IntentFilter;-><init>()V

    .line 6517
    .local v27, "pkgFilter":Landroid/content/IntentFilter;
    const-string/jumbo v2, "android.intent.action.QUERY_PACKAGE_RESTART"

    move-object/from16 v0, v27

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 6518
    const-string/jumbo v2, "package"

    move-object/from16 v0, v27

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 6519
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$6;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v27

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 6537
    new-instance v22, Landroid/content/IntentFilter;

    invoke-direct/range {v22 .. v22}, Landroid/content/IntentFilter;-><init>()V

    .line 6538
    .local v22, "dumpheapFilter":Landroid/content/IntentFilter;
    const-string/jumbo v2, "com.android.server.am.DELETE_DUMPHEAP"

    move-object/from16 v0, v22

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 6539
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$7;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v22

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 6550
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$8;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v2, v3}, Landroid/content/pm/ThemeUtils;->registerThemeChangeReceiver(Landroid/content/Context;Landroid/content/BroadcastReceiver;)V

    .line 6558
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v3, 0x3e8

    invoke-virtual {v2, v3}, Lcom/android/server/SystemServiceManager;->startBootPhase(I)V

    .line 6560
    monitor-enter p0

    .line 6563
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v19

    .line 6564
    .local v19, "NP":I
    if-lez v19, :cond_4

    .line 6566
    new-instance v28, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v28

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 6567
    .local v28, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/16 v25, 0x0

    .local v25, "ip":I
    :goto_1
    move/from16 v0, v25

    move/from16 v1, v19

    if-ge v0, v1, :cond_4

    .line 6570
    move-object/from16 v0, v28

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v3, "on-hold"

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 6567
    add-int/lit8 v25, v25, 0x1

    goto :goto_1

    .line 6574
    .end local v25    # "ip":I
    .end local v28    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_9

    .line 6576
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x1b

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v26

    .line 6577
    .local v26, "nmsg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v6, 0xdbba0

    move-object/from16 v0, v26

    invoke-virtual {v2, v0, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 6579
    const-string/jumbo v2, "sys.boot_completed"

    const-string/jumbo v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6582
    const-string/jumbo v2, "trigger_restart_min_framework"

    const-string/jumbo v3, "vold.decrypt"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 6583
    const-string/jumbo v2, ""

    const-string/jumbo v3, "vold.encrypt_progress"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 6582
    if-eqz v2, :cond_6

    .line 6584
    :cond_5
    const-string/jumbo v2, "dev.bootcomplete"

    const-string/jumbo v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6586
    :cond_6
    const/16 v23, 0x0

    .local v23, "i":I
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    move/from16 v0, v23

    if-ge v0, v2, :cond_8

    .line 6587
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v23

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/UserState;

    .line 6588
    .local v29, "uss":Lcom/android/server/am/UserState;
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v2, :cond_7

    .line 6589
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput v2, v0, Lcom/android/server/am/UserState;->mState:I

    .line 6590
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v23

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v18

    .line 6591
    .local v18, "userId":I
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.BOOT_COMPLETED"

    const/4 v3, 0x0

    invoke-direct {v5, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 6592
    .local v5, "intent":Landroid/content/Intent;
    const-string/jumbo v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 6593
    const/high16 v2, 0x8000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6595
    new-instance v7, Lcom/android/server/am/ActivityManagerService$9;

    move-object/from16 v0, p0

    invoke-direct {v7, v0}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 6607
    const/4 v2, 0x1

    new-array v11, v2, [Ljava/lang/String;

    const-string/jumbo v2, "android.permission.RECEIVE_BOOT_COMPLETED"

    const/4 v3, 0x0

    aput-object v2, v11, v3

    .line 6609
    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 6594
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    .line 6606
    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 6608
    const/16 v12, 0x41

    const/4 v13, 0x0

    const/4 v14, 0x1

    const/4 v15, 0x0

    .line 6609
    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    .line 6594
    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 6586
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "userId":I
    :cond_7
    add-int/lit8 v23, v23, 0x1

    goto :goto_2

    .line 6612
    .end local v29    # "uss":Lcom/android/server/am/UserState;
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleStartProfilesLocked()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .end local v23    # "i":I
    .end local v26    # "nmsg":Landroid/os/Message;
    :cond_9
    monitor-exit p0

    .line 6495
    return-void

    .line 6560
    .end local v19    # "NP":I
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public final finishHeavyWeightApp()V
    .locals 9

    .prologue
    .line 4485
    const-string/jumbo v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 4487
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 4488
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 4487
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 4489
    const-string/jumbo v2, ", uid="

    .line 4487
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 4489
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 4487
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 4490
    const-string/jumbo v2, " requires "

    .line 4487
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 4490
    const-string/jumbo v2, "android.permission.FORCE_STOP_PACKAGES"

    .line 4487
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 4491
    .local v8, "msg":Ljava/lang/String;
    const-string/jumbo v0, "ActivityManager"

    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4492
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4495
    .end local v8    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 4496
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_1

    monitor-exit p0

    .line 4497
    return-void

    .line 4500
    :cond_1
    :try_start_1
    new-instance v6, Ljava/util/ArrayList;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-direct {v6, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 4501
    .local v6, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_3

    .line 4502
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityRecord;

    .line 4503
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    iget-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v0, :cond_2

    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4504
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    .line 4505
    const-string/jumbo v4, "finish-heavy"

    .line 4504
    const/4 v2, 0x0

    .line 4505
    const/4 v3, 0x0

    const/4 v5, 0x1

    .line 4504
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    .line 4501
    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 4509
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 4510
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v3, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 4509
    const/16 v4, 0x19

    .line 4510
    const/4 v5, 0x0

    .line 4509
    invoke-virtual {v2, v4, v3, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4511
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 4484
    return-void

    .line 4495
    .end local v6    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    .end local v7    # "i":I
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 7
    .param p1, "target"    # Landroid/app/IApplicationThread;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    .line 17489
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 17491
    .local v1, "userId":I
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 17492
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v5, "File descriptors passed in Intent"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 17495
    :cond_0
    monitor-enter p0

    .line 17496
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 17497
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    .line 17498
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "finishInstrumentation: no app for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17499
    return-void

    .line 17501
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 17502
    .local v2, "origId":J
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 17503
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 17488
    return-void

    .line 17495
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    const/4 v5, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 17459
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v0, :cond_0

    .line 17462
    :try_start_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 17463
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 17462
    invoke-interface {v0, v1, p2, p3}, Landroid/app/IInstrumentationWatcher;->instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 17471
    :cond_0
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v0, :cond_1

    .line 17472
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 17473
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 17472
    const/16 v2, 0x39

    invoke-virtual {v0, v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 17476
    :cond_1
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 17477
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 17478
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 17479
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 17480
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    .line 17481
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    .line 17483
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 17484
    const-string/jumbo v9, "finished inst"

    .line 17483
    const/4 v2, -0x1

    move-object v0, p0

    move v4, v3

    move v6, v5

    move v7, v3

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 17458
    return-void

    .line 17466
    :catch_0
    move-exception v10

    .local v10, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZI)V
    .locals 11
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Ljava/lang/String;
    .param p4, "resultExtras"    # Landroid/os/Bundle;
    .param p5, "resultAbort"    # Z
    .param p6, "flags"    # I

    .prologue
    .line 17336
    if-eqz p4, :cond_0

    invoke-virtual {p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 17337
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "File descriptors passed in Bundle"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 17340
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 17342
    .local v8, "origId":J
    const/4 v7, 0x0

    .line 17345
    .local v7, "doNext":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 17346
    const/high16 v0, 0x10000000

    and-int v0, v0, p6

    if-eqz v0, :cond_3

    .line 17347
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 17348
    .local v10, "queue":Lcom/android/server/am/BroadcastQueue;
    :goto_0
    invoke-virtual {v10, p1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v1

    .line 17349
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_1

    .line 17350
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    .line 17351
    const/4 v6, 0x1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move/from16 v5, p5

    .line 17350
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v7

    .end local v7    # "doNext":Z
    :cond_1
    :try_start_2
    monitor-exit p0

    .line 17355
    if-eqz v7, :cond_2

    .line 17356
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    .line 17358
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 17360
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17332
    return-void

    .line 17347
    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v10    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v7    # "doNext":Z
    :cond_3
    :try_start_3
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .restart local v10    # "queue":Lcom/android/server/am/BroadcastQueue;
    goto :goto_0

    .line 17345
    .end local v10    # "queue":Lcom/android/server/am/BroadcastQueue;
    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit p0

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 17359
    .end local v7    # "doNext":Z
    :catchall_1
    move-exception v0

    .line 17360
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17359
    throw v0
.end method

.method finishRunningVoiceLocked()V
    .locals 2

    .prologue
    const/4 v1, 0x0

    .line 10515
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_0

    .line 10516
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 10517
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 10518
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 10514
    :cond_0
    return-void
.end method

.method public final finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultWho"    # Ljava/lang/String;
    .param p3, "requestCode"    # I

    .prologue
    .line 4575
    monitor-enter p0

    .line 4576
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4577
    .local v0, "origId":J
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4578
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 4579
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3}, Lcom/android/server/am/ActivityStack;->finishSubActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 4581
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 4574
    return-void

    .line 4575
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method finishUserBoot(Lcom/android/server/am/UserState;)V
    .locals 18
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    .line 20564
    monitor-enter p0

    .line 20565
    :try_start_0
    move-object/from16 v0, p1

    iget v1, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v1, :cond_0

    .line 20566
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v0, p1

    if-ne v1, v0, :cond_0

    .line 20567
    const/4 v1, 0x1

    move-object/from16 v0, p1

    iput v1, v0, Lcom/android/server/am/UserState;->mState:I

    .line 20568
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v17

    .line 20569
    .local v17, "userId":I
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v1, "android.intent.action.BOOT_COMPLETED"

    const/4 v2, 0x0

    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 20570
    .local v4, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "android.intent.extra.user_handle"

    move/from16 v0, v17

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20571
    const/high16 v1, 0x8000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20574
    const/4 v1, 0x1

    new-array v10, v1, [Ljava/lang/String;

    const-string/jumbo v1, "android.permission.RECEIVE_BOOT_COMPLETED"

    const/4 v2, 0x0

    aput-object v1, v10, v2

    .line 20575
    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20572
    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 20573
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 20575
    const/16 v11, 0x41

    const/4 v12, 0x0

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/16 v16, 0x3e8

    move-object/from16 v1, p0

    .line 20572
    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v4    # "intent":Landroid/content/Intent;
    .end local v17    # "userId":I
    :cond_0
    monitor-exit p0

    .line 20563
    return-void

    .line 20564
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method finishUserStop(Lcom/android/server/am/UserState;)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    .line 20725
    iget-object v5, p1, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v5}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    .line 20728
    .local v4, "userId":I
    monitor-enter p0

    .line 20729
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    iget-object v5, p1, Lcom/android/server/am/UserState;->mStopCallbacks:Ljava/util/ArrayList;

    invoke-direct {v0, v5}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 20730
    .local v0, "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    if-eq v5, p1, :cond_0

    .line 20731
    const/4 v3, 0x0

    .line 20747
    .local v3, "stopped":Z
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v4}, Lcom/android/server/am/RecentTasks;->removeTasksForUserLocked(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 20750
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v2, v5, :cond_3

    .line 20752
    if-eqz v3, :cond_2

    :try_start_1
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/app/IStopUserCallback;

    invoke-interface {v5, v4}, Landroid/app/IStopUserCallback;->userStopped(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 20750
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 20732
    .end local v2    # "i":I
    .end local v3    # "stopped":Z
    :cond_0
    :try_start_2
    iget v5, p1, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x3

    if-eq v5, v6, :cond_1

    .line 20733
    const/4 v3, 0x0

    .restart local v3    # "stopped":Z
    goto :goto_0

    .line 20735
    .end local v3    # "stopped":Z
    :cond_1
    const/4 v3, 0x1

    .line 20737
    .restart local v3    # "stopped":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 20738
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20739
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 20743
    const-string/jumbo v5, "finish user"

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->forceStopUserLocked(ILjava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 20728
    .end local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .end local v3    # "stopped":Z
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5

    .line 20753
    .restart local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .restart local v2    # "i":I
    .restart local v3    # "stopped":Z
    :cond_2
    :try_start_3
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/app/IStopUserCallback;

    invoke-interface {v5, v4}, Landroid/app/IStopUserCallback;->userStopAborted(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_2

    .line 20754
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_2

    .line 20758
    .end local v1    # "e":Landroid/os/RemoteException;
    :cond_3
    if-eqz v3, :cond_4

    .line 20759
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v5, v4}, Lcom/android/server/SystemServiceManager;->cleanupUser(I)V

    .line 20760
    monitor-enter p0

    .line 20761
    :try_start_4
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v4}, Lcom/android/server/am/ActivityStackSupervisor;->removeUserLocked(I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 20724
    :cond_4
    return-void

    .line 20760
    :catchall_1
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method finishUserSwitch(Lcom/android/server/am/UserState;)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    const/4 v6, 0x3

    .line 20582
    monitor-enter p0

    .line 20583
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->finishUserBoot(Lcom/android/server/am/UserState;)V

    .line 20585
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startProfilesLocked()V

    .line 20587
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 20588
    .local v1, "num":I
    const/4 v0, 0x0

    .line 20589
    .local v0, "i":I
    :goto_0
    if-le v1, v6, :cond_5

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v0, v4, :cond_5

    .line 20590
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 20591
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserState;

    .line 20592
    .local v3, "oldUss":Lcom/android/server/am/UserState;
    if-nez v3, :cond_0

    .line 20594
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 20595
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 20598
    :cond_0
    iget v4, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x2

    if-eq v4, v5, :cond_1

    .line 20599
    iget v4, v3, Lcom/android/server/am/UserState;->mState:I

    if-ne v4, v6, :cond_2

    .line 20601
    :cond_1
    add-int/lit8 v1, v1, -0x1

    .line 20602
    add-int/lit8 v0, v0, 0x1

    .line 20603
    goto :goto_0

    .line 20605
    :cond_2
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    if-eqz v4, :cond_3

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-ne v4, v5, :cond_4

    .line 20607
    :cond_3
    add-int/lit8 v0, v0, 0x1

    .line 20608
    goto :goto_0

    .line 20611
    :cond_4
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    const/4 v5, 0x0

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20612
    add-int/lit8 v1, v1, -0x1

    .line 20613
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserState;
    :cond_5
    monitor-exit p0

    .line 20581
    return-void

    .line 20582
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    .locals 3
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;

    .prologue
    .line 4612
    monitor-enter p0

    .line 4613
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 4615
    .local v0, "origId":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4617
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 4611
    return-void

    .line 4616
    :catchall_0
    move-exception v2

    .line 4617
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4616
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 4612
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 21
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 5443
    const-string/jumbo v4, "android.permission.FORCE_STOP_PACKAGES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 5445
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5446
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 5445
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5447
    const-string/jumbo v6, ", uid="

    .line 5445
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5447
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 5445
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5448
    const-string/jumbo v6, " requires "

    .line 5445
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5448
    const-string/jumbo v6, "android.permission.FORCE_STOP_PACKAGES"

    .line 5445
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    .line 5449
    .local v16, "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    move-object/from16 v0, v16

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5450
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v16

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 5452
    .end local v16    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 5453
    .local v5, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 5454
    const-string/jumbo v10, "forceStopPackage"

    const/4 v8, 0x1

    const/4 v9, 0x2

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p2

    .line 5453
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 5455
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 5457
    .local v12, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v18

    .line 5458
    .local v18, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5459
    const/4 v4, -0x1

    move/from16 v0, p2

    if-ne v0, v4, :cond_2

    .line 5460
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v20

    .line 5461
    .local v20, "users":[I
    :goto_0
    const/4 v4, 0x0

    move-object/from16 v0, v20

    array-length v6, v0

    :goto_1
    if-ge v4, v6, :cond_4

    aget v19, v20, v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5462
    .local v19, "user":I
    const/16 v17, -0x1

    .line 5464
    .local v17, "pkgUid":I
    :try_start_2
    move-object/from16 v0, v18

    move-object/from16 v1, p1

    move/from16 v2, v19

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v17

    .line 5467
    :goto_2
    const/4 v7, -0x1

    move/from16 v0, v17

    if-ne v0, v7, :cond_3

    .line 5468
    :try_start_3
    const-string/jumbo v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Invalid packageName: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p1

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5461
    :cond_1
    :goto_3
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 5460
    .end local v17    # "pkgUid":I
    .end local v19    # "user":I
    .end local v20    # "users":[I
    :cond_2
    const/4 v4, 0x1

    new-array v0, v4, [I

    move-object/from16 v20, v0

    const/4 v4, 0x0

    aput p2, v20, v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .restart local v20    # "users":[I
    goto :goto_0

    .line 5465
    .restart local v17    # "pkgUid":I
    .restart local v19    # "user":I
    :catch_0
    move-exception v14

    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_2

    .line 5472
    .end local v14    # "e":Landroid/os/RemoteException;
    :cond_3
    const/4 v7, 0x1

    :try_start_4
    move-object/from16 v0, v18

    move-object/from16 v1, p1

    move/from16 v2, v19

    invoke-interface {v0, v1, v7, v2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 5478
    :goto_4
    const/4 v7, 0x0

    :try_start_5
    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-virtual {v0, v1, v7}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 5479
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "from pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v17

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_3

    .line 5458
    .end local v17    # "pkgUid":I
    .end local v19    # "user":I
    .end local v20    # "users":[I
    :catchall_0
    move-exception v4

    :try_start_6
    monitor-exit p0

    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 5483
    .end local v18    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v4

    .line 5484
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5483
    throw v4

    .line 5474
    .restart local v17    # "pkgUid":I
    .restart local v18    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v19    # "user":I
    .restart local v20    # "users":[I
    :catch_1
    move-exception v15

    .line 5475
    .local v15, "e":Ljava/lang/IllegalArgumentException;
    :try_start_7
    const-string/jumbo v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Failed trying to unstop package "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p1

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 5476
    const-string/jumbo v9, ": "

    .line 5475
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto :goto_4

    .line 5473
    .end local v15    # "e":Ljava/lang/IllegalArgumentException;
    :catch_2
    move-exception v14

    .restart local v14    # "e":Landroid/os/RemoteException;
    goto :goto_4

    .end local v14    # "e":Landroid/os/RemoteException;
    .end local v17    # "pkgUid":I
    .end local v19    # "user":I
    :cond_4
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 5484
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5442
    return-void
.end method

.method foregroundTokenDied(Lcom/android/server/am/ActivityManagerService$ForegroundToken;)V
    .locals 5
    .param p1, "token"    # Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .prologue
    .line 7105
    monitor-enter p0

    .line 7106
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7108
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7109
    .local v0, "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eq v0, p1, :cond_0

    :try_start_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 7110
    return-void

    .line 7112
    :cond_0
    :try_start_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 7113
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 7114
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 7115
    return-void

    .line 7117
    :cond_1
    const/4 v2, 0x0

    :try_start_5
    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 7118
    const/4 v2, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    monitor-exit v3

    .line 7120
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    monitor-exit p0

    .line 7104
    return-void

    .line 7106
    .end local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    :try_start_7
    monitor-exit v3

    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 7105
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public getActivityClassForToken(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 6770
    monitor-enter p0

    .line 6771
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 6772
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 6773
    return-object v1

    .line 6775
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v1

    monitor-exit p0

    return-object v1

    .line 6770
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getActivityDisplayId(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 9124
    monitor-enter p0

    .line 9125
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 9126
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->isAttachedLocked()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 9127
    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->getDisplayId()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 9129
    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    return v1

    .line 9124
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 3
    .param p1, "aInfo"    # Landroid/content/pm/ActivityInfo;
    .param p2, "userId"    # I

    .prologue
    .line 20903
    if-eqz p1, :cond_0

    .line 20904
    const/4 v1, 0x1

    if-ge p2, v1, :cond_1

    iget-object v1, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const v2, 0x186a0

    if-ge v1, v2, :cond_1

    .line 20905
    :cond_0
    return-object p1

    .line 20908
    :cond_1
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 20909
    .local v0, "info":Landroid/content/pm/ActivityInfo;
    iget-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 20910
    return-object v0
.end method

.method public getActivityOptions(Landroid/os/IBinder;)Landroid/app/ActivityOptions;
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, 0x0

    .line 11304
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 11306
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11307
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 11308
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_0

    .line 11309
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;

    .line 11310
    .local v0, "activityOptions":Landroid/app/ActivityOptions;
    const/4 v4, 0x0

    iput-object v4, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11316
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11311
    return-object v0

    .end local v0    # "activityOptions":Landroid/app/ActivityOptions;
    :cond_0
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11316
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11313
    return-object v4

    .line 11306
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v4

    :try_start_4
    monitor-exit p0

    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11315
    :catchall_1
    move-exception v4

    .line 11316
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11315
    throw v4
.end method

.method public getAllStackInfos()Ljava/util/List;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$StackInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 9169
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9170
    const-string/jumbo v3, "getAllStackInfos()"

    .line 9169
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9171
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9173
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9174
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getAllStackInfosLocked()Ljava/util/ArrayList;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9177
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9174
    return-object v2

    .line 9173
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9176
    :catchall_1
    move-exception v2

    .line 9177
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9176
    throw v2
.end method

.method getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 3
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "userId"    # I

    .prologue
    const/4 v1, 0x0

    .line 20893
    if-nez p1, :cond_0

    return-object v1

    .line 20894
    :cond_0
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 20895
    .local v0, "newInfo":Landroid/content/pm/ApplicationInfo;
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-direct {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->applyUserId(II)I

    move-result v1

    iput v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 20897
    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->volumeUuid:Ljava/lang/String;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 20896
    invoke-static {v1, p2, v2}, Landroid/os/Environment;->getDataUserPackageDirectory(Ljava/lang/String;ILjava/lang/String;)Ljava/io/File;

    move-result-object v1

    invoke-virtual {v1}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    .line 20899
    return-object v0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 1

    .prologue
    .line 2318
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    return-object v0
.end method

.method public getAppTaskThumbnailSize()Landroid/graphics/Point;
    .locals 3

    .prologue
    .line 8775
    monitor-enter p0

    .line 8776
    :try_start_0
    new-instance v0, Landroid/graphics/Point;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-direct {v0, v1, v2}, Landroid/graphics/Point;-><init>(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return-object v0

    .line 8775
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAppTasks(Ljava/lang/String;)Ljava/util/List;
    .locals 11
    .param p1, "callingPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/app/IAppTask;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8464
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8465
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 8467
    .local v4, "ident":J
    monitor-enter p0

    .line 8468
    :try_start_0
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8472
    .local v6, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v10}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 8473
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 8474
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v10, v2}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/TaskRecord;

    .line 8478
    .local v9, "tr":Lcom/android/server/am/TaskRecord;
    iget v10, v9, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-eq v10, v1, :cond_1

    .line 8473
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 8481
    :cond_1
    invoke-virtual {v9}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v3

    .line 8482
    .local v3, "intent":Landroid/content/Intent;
    if-eqz v3, :cond_0

    .line 8483
    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v10

    invoke-virtual {v10}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_0

    .line 8487
    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v8

    .line 8488
    .local v8, "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    new-instance v7, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;

    iget v10, v8, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    invoke-direct {v7, p0, v10, v1}, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;-><init>(Lcom/android/server/am/ActivityManagerService;II)V

    .line 8489
    .local v7, "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .line 8491
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "intent":Landroid/content/Intent;
    .end local v7    # "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    .end local v8    # "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    .end local v9    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v10

    .line 8492
    :try_start_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8491
    throw v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8467
    .end local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :catchall_1
    move-exception v10

    monitor-exit p0

    throw v10

    .line 8492
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :cond_2
    :try_start_3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    monitor-exit p0

    .line 8494
    return-object v6
.end method

.method public getAssistContextExtras(I)Landroid/os/Bundle;
    .locals 12
    .param p1, "requestType"    # I

    .prologue
    const/4 v2, 0x0

    .line 10975
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    const-wide/16 v8, 0x1f4

    move-object v0, p0

    move v1, p1

    move-object v3, v2

    move-object v4, v2

    move-object v5, v2

    move-object v7, v2

    .line 10974
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v11

    .line 10976
    .local v11, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    if-nez v11, :cond_0

    .line 10977
    return-object v2

    .line 10979
    :cond_0
    monitor-enter v11

    .line 10980
    :goto_0
    :try_start_0
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_1

    .line 10982
    :try_start_1
    invoke-virtual {v11}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 10983
    :catch_0
    move-exception v10

    .local v10, "e":Ljava/lang/InterruptedException;
    goto :goto_0

    .end local v10    # "e":Ljava/lang/InterruptedException;
    :cond_1
    monitor-exit v11

    .line 10987
    monitor-enter p0

    .line 10988
    :try_start_2
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    invoke-direct {p0, v11, v0}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 10989
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 10990
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v0, v11}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeCallbacks(Ljava/lang/Runnable;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 10992
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    return-object v0

    .line 10979
    :catchall_0
    move-exception v0

    monitor-exit v11

    throw v0

    .line 10987
    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCallingActivity(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 6742
    monitor-enter p0

    .line 6743
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6744
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    :cond_0
    monitor-exit p0

    return-object v1

    .line 6742
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getCallingPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 6734
    monitor-enter p0

    .line 6735
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6736
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    return-object v1

    .line 6734
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getCallingPackageForBroadcast(Z)Ljava/lang/String;
    .locals 5
    .param p1, "foreground"    # Z

    .prologue
    const/4 v4, 0x0

    .line 6749
    if-eqz p1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 6750
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    :goto_0
    invoke-virtual {v0}, Lcom/android/server/am/BroadcastQueue;->getProcessingBroadcast()Lcom/android/server/am/BroadcastRecord;

    move-result-object v1

    .line 6751
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_1

    .line 6752
    iget-object v2, v1, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;

    return-object v2

    .line 6749
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .restart local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    goto :goto_0

    .line 6754
    .restart local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_1
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Broadcast sender is only retrievable in the onReceive"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6756
    return-object v4
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 2

    .prologue
    .line 17545
    monitor-enter p0

    .line 17546
    :try_start_0
    new-instance v0, Landroid/content/res/Configuration;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 17547
    .local v0, "ci":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    iput-boolean v1, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    .line 17548
    iget-object v1, v0, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;

    if-nez v1, :cond_0

    .line 17549
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-static {v1}, Landroid/content/res/ThemeConfig;->getBootTheme(Landroid/content/ContentResolver;)Landroid/content/res/ThemeConfig;

    move-result-object v1

    iput-object v1, v0, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 17552
    return-object v0

    .line 17545
    .end local v0    # "ci":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;IZ)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 7
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "userId"    # I
    .param p4, "stable"    # Z

    .prologue
    const/4 v3, 0x0

    .line 9989
    const-string/jumbo v0, "getContentProvider"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9990
    if-nez p1, :cond_0

    .line 9991
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "null IApplicationThread when getting content provider "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 9993
    .local v6, "msg":Ljava/lang/String;
    const-string/jumbo v0, "ActivityManager"

    invoke-static {v0, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9994
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .end local v6    # "msg":Ljava/lang/String;
    :cond_0
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v4, p4

    move v5, p3

    .line 9998
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 8
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10003
    const-string/jumbo v0, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    .line 10004
    const-string/jumbo v1, "Do not have permission in call getContentProviderExternal()"

    .line 10003
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10005
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 10006
    const-string/jumbo v6, "getContentProvider"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move-object v0, p0

    move v3, p2

    .line 10005
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 10007
    invoke-direct {p0, p1, p3, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 4

    .prologue
    .line 20768
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 20770
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    .line 20769
    if-eqz v2, :cond_0

    .line 20772
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Permission Denial: getCurrentUser() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 20773
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 20772
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 20774
    const-string/jumbo v3, ", uid="

    .line 20772
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 20774
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 20772
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 20775
    const-string/jumbo v3, " requires "

    .line 20772
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 20775
    const-string/jumbo v3, "android.permission.INTERACT_ACROSS_USERS"

    .line 20772
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20776
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20777
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 20779
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 20780
    :try_start_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v3, -0x2710

    if-eq v2, v3, :cond_1

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 20781
    .local v1, "userId":I
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v2

    invoke-virtual {v2, v1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v2

    monitor-exit p0

    return-object v2

    .line 20780
    .end local v1    # "userId":I
    :cond_1
    :try_start_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .restart local v1    # "userId":I
    goto :goto_0

    .line 20779
    .end local v1    # "userId":I
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method getCurrentUserIdLocked()I
    .locals 2

    .prologue
    .line 20786
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v1, -0x2710

    if-eq v0, v1, :cond_0

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    :goto_0
    return v0

    :cond_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    goto :goto_0
.end method

.method public getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;
    .locals 3

    .prologue
    .line 17512
    new-instance v0, Landroid/content/pm/ConfigurationInfo;

    invoke-direct {v0}, Landroid/content/pm/ConfigurationInfo;-><init>()V

    .line 17513
    .local v0, "config":Landroid/content/pm/ConfigurationInfo;
    monitor-enter p0

    .line 17514
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->touchscreen:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqTouchScreen:I

    .line 17515
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqKeyboardType:I

    .line 17516
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqNavigation:I

    .line 17517
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v2, 0x2

    if-eq v1, v2, :cond_0

    .line 17518
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_1

    .line 17519
    :cond_0
    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v1, v1, 0x2

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 17521
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    if-eqz v1, :cond_2

    .line 17522
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_2

    .line 17523
    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v1, v1, 0x1

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 17525
    :cond_2
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqGlEsVersion:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17527
    return-object v0

    .line 17513
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method getFocusedStack()Lcom/android/server/am/ActivityStack;
    .locals 1

    .prologue
    .line 17531
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    return-object v0
.end method

.method public getFocusedStackId()I
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 17536
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 17537
    .local v0, "focusedStack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 17538
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->getStackId()I

    move-result v1

    return v1

    .line 17540
    :cond_0
    const/4 v1, -0x1

    return v1
.end method

.method public getFrontActivityScreenCompatMode()I
    .locals 1

    .prologue
    .line 3730
    const-string/jumbo v0, "getFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3731
    monitor-enter p0

    .line 3732
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0}, Lcom/android/server/am/CompatModePackages;->getFrontActivityScreenCompatModeLocked()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 3731
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method getHomeIntent()Landroid/content/Intent;
    .locals 4

    .prologue
    const/4 v1, 0x0

    .line 3583
    new-instance v0, Landroid/content/Intent;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    if-eqz v3, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    :cond_0
    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 3584
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 3585
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_1

    .line 3586
    const-string/jumbo v1, "android.intent.category.HOME"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 3588
    :cond_1
    return-object v0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v4, 0x0

    .line 7036
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 7037
    return-object v4

    .line 7040
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 7041
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v3, :cond_1

    new-instance v3, Landroid/content/Intent;

    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {v3, v5}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    :goto_0
    return-object v3

    :cond_1
    move-object v3, v4

    goto :goto_0

    .line 7042
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 7044
    .local v1, "e":Ljava/lang/ClassCastException;
    return-object v4
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 22
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "resultWho"    # Ljava/lang/String;
    .param p5, "requestCode"    # I
    .param p6, "intents"    # [Landroid/content/Intent;
    .param p7, "resolvedTypes"    # [Ljava/lang/String;
    .param p8, "flags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I

    .prologue
    .line 6806
    const-string/jumbo v1, "getIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6808
    if-eqz p6, :cond_5

    .line 6809
    move-object/from16 v0, p6

    array-length v1, v0

    const/4 v2, 0x1

    if-ge v1, v2, :cond_0

    .line 6810
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "Intents array length must be >= 1"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6812
    :cond_0
    const/16 v17, 0x0

    .local v17, "i":I
    :goto_0
    move-object/from16 v0, p6

    array-length v1, v0

    move/from16 v0, v17

    if-ge v0, v1, :cond_4

    .line 6813
    aget-object v18, p6, v17

    .line 6814
    .local v18, "intent":Landroid/content/Intent;
    if-eqz v18, :cond_3

    .line 6815
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6816
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6818
    :cond_1
    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_2

    .line 6819
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x2000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_2

    .line 6820
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 6821
    const-string/jumbo v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    .line 6820
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6823
    :cond_2
    new-instance v1, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-direct {v1, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v1, p6, v17

    .line 6812
    :cond_3
    add-int/lit8 v17, v17, 0x1

    goto :goto_0

    .line 6826
    .end local v18    # "intent":Landroid/content/Intent;
    :cond_4
    if-eqz p7, :cond_5

    move-object/from16 v0, p7

    array-length v1, v0

    move-object/from16 v0, p6

    array-length v2, v0

    if-eq v1, v2, :cond_5

    .line 6827
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 6828
    const-string/jumbo v2, "Intent array length does not match resolvedTypes length"

    .line 6827
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6831
    .end local v17    # "i":I
    :cond_5
    if-eqz p9, :cond_6

    .line 6832
    invoke-virtual/range {p9 .. p9}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 6833
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "File descriptors passed in options"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6837
    :cond_6
    monitor-enter p0

    .line 6838
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 6839
    .local v3, "callingUid":I
    move/from16 v20, p10

    .line 6840
    .local v20, "origUserId":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 6841
    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_8

    const/4 v5, 0x1

    .line 6842
    :goto_1
    const-string/jumbo v7, "getIntentSender"

    const/4 v6, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    .line 6840
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result p10

    .line 6843
    const/4 v1, -0x2

    move/from16 v0, v20

    if-ne v0, v1, :cond_7

    .line 6847
    const/16 p10, -0x2

    .line 6850
    :cond_7
    if-eqz v3, :cond_9

    const/16 v1, 0x3e8

    if-eq v3, v1, :cond_9

    .line 6851
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 6852
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 6851
    move-object/from16 v0, p2

    invoke-interface {v1, v0, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v21

    .line 6853
    .local v21, "uid":I
    move/from16 v0, v21

    invoke-static {v3, v0}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_9

    .line 6854
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6855
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6856
    const-string/jumbo v2, ", uid="

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6856
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6857
    const-string/jumbo v2, ", (need uid="

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move/from16 v0, v21

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6857
    const-string/jumbo v2, ")"

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6858
    const-string/jumbo v2, " is not allowed to send as package "

    .line 6854
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p2

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    .line 6859
    .local v19, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    move-object/from16 v0, v19

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6860
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v19

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6867
    .end local v19    # "msg":Ljava/lang/String;
    .end local v21    # "uid":I
    :catch_0
    move-exception v16

    .line 6868
    .local v16, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v16

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6837
    .end local v3    # "callingUid":I
    .end local v16    # "e":Landroid/os/RemoteException;
    .end local v20    # "origUserId":I
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 6841
    .restart local v3    # "callingUid":I
    .restart local v20    # "origUserId":I
    :cond_8
    const/4 v5, 0x0

    goto/16 :goto_1

    :cond_9
    move-object/from16 v4, p0

    move/from16 v5, p1

    move-object/from16 v6, p2

    move v7, v3

    move/from16 v8, p10

    move-object/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-object/from16 v12, p6

    move-object/from16 v13, p7

    move/from16 v14, p8

    move-object/from16 v15, p9

    .line 6864
    :try_start_3
    invoke-virtual/range {v4 .. v15}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-object v1

    monitor-exit p0

    return-object v1
.end method

.method getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    .locals 18
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "userId"    # I
    .param p5, "token"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "intents"    # [Landroid/content/Intent;
    .param p9, "resolvedTypes"    # [Ljava/lang/String;
    .param p10, "flags"    # I
    .param p11, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6878
    const/4 v5, 0x0

    .line 6879
    .local v5, "activity":Lcom/android/server/am/ActivityRecord;
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_1

    .line 6880
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    .line 6881
    .local v5, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v5, :cond_0

    .line 6882
    const/4 v3, 0x0

    return-object v3

    .line 6884
    :cond_0
    iget-boolean v3, v5, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v3, :cond_1

    .line 6885
    const/4 v3, 0x0

    return-object v3

    .line 6889
    .end local v5    # "activity":Lcom/android/server/am/ActivityRecord;
    :cond_1
    const/high16 v3, 0x20000000

    and-int v3, v3, p10

    if-eqz v3, :cond_4

    const/4 v14, 0x1

    .line 6890
    .local v14, "noCreate":Z
    :goto_0
    const/high16 v3, 0x10000000

    and-int v3, v3, p10

    if-eqz v3, :cond_5

    const/4 v13, 0x1

    .line 6891
    .local v13, "cancelCurrent":Z
    :goto_1
    const/high16 v3, 0x8000000

    and-int v3, v3, p10

    if-eqz v3, :cond_6

    const/16 v17, 0x1

    .line 6892
    .local v17, "updateCurrent":Z
    :goto_2
    const v3, -0x38000001

    and-int p10, p10, v3

    .line 6895
    new-instance v2, Lcom/android/server/am/PendingIntentRecord$Key;

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v6, p6

    move/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    move/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p4

    invoke-direct/range {v2 .. v12}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)V

    .line 6899
    .local v2, "key":Lcom/android/server/am/PendingIntentRecord$Key;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/lang/ref/WeakReference;

    .line 6900
    .local v16, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v16, :cond_7

    invoke-virtual/range {v16 .. v16}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/PendingIntentRecord;

    .line 6901
    :goto_3
    if-eqz v15, :cond_b

    .line 6902
    if-nez v13, :cond_a

    .line 6903
    if-eqz v17, :cond_3

    .line 6904
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v3, :cond_2

    .line 6905
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz p8, :cond_8

    .line 6906
    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    aget-object v3, p8, v3

    .line 6905
    :goto_4
    invoke-virtual {v4, v3}, Landroid/content/Intent;->replaceExtras(Landroid/content/Intent;)Landroid/content/Intent;

    .line 6908
    :cond_2
    if-eqz p8, :cond_9

    .line 6909
    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    aput-object v4, p8, v3

    .line 6910
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p8

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 6911
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p9

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    .line 6917
    :cond_3
    :goto_5
    return-object v15

    .line 6889
    .end local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .end local v13    # "cancelCurrent":Z
    .end local v14    # "noCreate":Z
    .end local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    .end local v17    # "updateCurrent":Z
    :cond_4
    const/4 v14, 0x0

    .restart local v14    # "noCreate":Z
    goto :goto_0

    .line 6890
    :cond_5
    const/4 v13, 0x0

    .restart local v13    # "cancelCurrent":Z
    goto :goto_1

    .line 6891
    :cond_6
    const/16 v17, 0x0

    .restart local v17    # "updateCurrent":Z
    goto :goto_2

    .line 6900
    .restart local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .restart local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_7
    const/4 v15, 0x0

    .local v15, "rec":Lcom/android/server/am/PendingIntentRecord;
    goto :goto_3

    .line 6906
    .end local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_8
    const/4 v3, 0x0

    goto :goto_4

    .line 6913
    :cond_9
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 6914
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto :goto_5

    .line 6919
    :cond_a
    const/4 v3, 0x1

    iput-boolean v3, v15, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 6920
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6922
    :cond_b
    if-eqz v14, :cond_c

    .line 6923
    return-object v15

    .line 6925
    :cond_c
    new-instance v15, Lcom/android/server/am/PendingIntentRecord;

    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v15, v0, v2, v1}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    .line 6926
    .local v15, "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6927
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_e

    .line 6928
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-nez v3, :cond_d

    .line 6930
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 6929
    iput-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 6932
    :cond_d
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 6934
    :cond_e
    return-object v15
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 17792
    monitor-enter p0

    .line 17793
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    monitor-exit p0

    .line 17795
    if-nez v0, :cond_0

    .line 17796
    return-object v1

    .line 17792
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 17798
    .restart local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    return-object v1
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 17781
    monitor-enter p0

    .line 17782
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    monitor-exit p0

    .line 17784
    if-nez v0, :cond_0

    .line 17785
    const/4 v1, -0x1

    return v1

    .line 17781
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 17787
    .restart local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iget v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    return v1
.end method

.method public getLockTaskModeState()I
    .locals 1

    .prologue
    .line 9381
    monitor-enter p0

    .line 9382
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getLockTaskModeState()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 9381
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 14
    .param p1, "outInfo"    # Landroid/app/ActivityManager$MemoryInfo;

    .prologue
    const/4 v5, 0x1

    const/4 v6, 0x0

    .line 8443
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x6

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    .line 8444
    .local v2, "homeAppMem":J
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0x9

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    .line 8445
    .local v0, "cachedAppMem":J
    invoke-static {}, Landroid/os/Process;->getFreeMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    .line 8446
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J

    .line 8447
    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->threshold:J

    .line 8448
    iget-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    sub-long v10, v0, v2

    const-wide/16 v12, 0x2

    div-long/2addr v10, v12

    add-long/2addr v10, v2

    cmp-long v4, v8, v10

    if-gez v4, :cond_0

    move v4, v5

    :goto_0
    iput-boolean v4, p1, Landroid/app/ActivityManager$MemoryInfo;->lowMemory:Z

    .line 8449
    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J

    .line 8450
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 8451
    const/4 v7, 0x5

    .line 8450
    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J

    .line 8452
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J

    .line 8454
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->foregroundAppThreshold:J

    .line 8442
    return-void

    :cond_0
    move v4, v6

    .line 8448
    goto :goto_0
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 4
    .param p1, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 13100
    const-string/jumbo v1, "getMyMemoryState"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13101
    monitor-enter p0

    .line 13103
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13104
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_2
    monitor-exit v2

    .line 13106
    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 13099
    return-void

    .line 13103
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v2

    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13101
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getPackageAskScreenCompat(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3764
    const-string/jumbo v0, "getPackageAskScreenCompat"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3765
    monitor-enter p0

    .line 3766
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageAskCompatModeLocked(Ljava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 3765
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPackageForIntentSender(Landroid/content/IIntentSender;)Ljava/lang/String;
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v4, 0x0

    .line 6973
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 6974
    return-object v4

    .line 6977
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 6978
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v3

    .line 6979
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 6981
    .local v1, "e":Ljava/lang/ClassCastException;
    return-object v4
.end method

.method public getPackageForToken(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 6781
    monitor-enter p0

    .line 6782
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 6783
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 6784
    return-object v1

    .line 6786
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    return-object v1

    .line 6781
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getPackageProcessState(Ljava/lang/String;Ljava/lang/String;)I
    .locals 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingPackage"    # Ljava/lang/String;

    .prologue
    .line 3791
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 3792
    const-string/jumbo v5, "android.permission.GET_PACKAGE_IMPORTANCE"

    .line 3793
    const-string/jumbo v6, "getPackageProcessState"

    .line 3792
    invoke-virtual {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3796
    :cond_0
    const/4 v4, -0x1

    .line 3797
    .local v4, "procState":I
    monitor-enter p0

    .line 3798
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_8

    .line 3799
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 3800
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    const/4 v5, -0x1

    if-eq v4, v5, :cond_1

    .line 3801
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-le v4, v5, :cond_3

    .line 3802
    :cond_1
    const/4 v0, 0x0

    .line 3803
    .local v0, "found":Z
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v5

    add-int/lit8 v2, v5, -0x1

    .local v2, "j":I
    :goto_1
    if-ltz v2, :cond_2

    if-eqz v0, :cond_4

    .line 3809
    :cond_2
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v5, :cond_3

    if-eqz v0, :cond_6

    .line 3798
    .end local v0    # "found":Z
    .end local v2    # "j":I
    :cond_3
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 3804
    .restart local v0    # "found":Z
    .restart local v2    # "j":I
    :cond_4
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 3805
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 3806
    const/4 v0, 0x1

    .line 3803
    :cond_5
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 3810
    :cond_6
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    add-int/lit8 v2, v5, -0x1

    :goto_3
    if-ltz v2, :cond_3

    .line 3811
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v5, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_7

    .line 3812
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_2

    .line 3810
    :cond_7
    add-int/lit8 v2, v2, -0x1

    goto :goto_3

    .end local v0    # "found":Z
    .end local v2    # "j":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_8
    monitor-exit p0

    .line 3820
    return v4

    .line 3797
    .end local v1    # "i":I
    :catchall_0
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public getPackageScreenCompatMode(Ljava/lang/String;)I
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3747
    const-string/jumbo v0, "getPackageScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3748
    monitor-enter p0

    .line 3749
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageScreenCompatModeLocked(Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 3748
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPersistedUriPermissions(Ljava/lang/String;Z)Landroid/content/pm/ParceledListSlice;
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "incoming"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Landroid/content/pm/ParceledListSlice",
            "<",
            "Landroid/content/UriPermission;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8381
    const-string/jumbo v10, "getPersistedUriPermissions"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8382
    const-string/jumbo v10, "packageName"

    invoke-static {p1, v10}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8384
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8385
    .local v0, "callingUid":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    .line 8387
    .local v7, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-interface {v7, p1, v10}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v3

    .line 8388
    .local v3, "packageUid":I
    if-eq v3, v0, :cond_0

    .line 8389
    new-instance v10, Ljava/lang/SecurityException;

    .line 8390
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Package "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string/jumbo v12, " does not belong to calling UID "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    .line 8389
    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8392
    .end local v3    # "packageUid":I
    :catch_0
    move-exception v1

    .line 8393
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v10, Ljava/lang/SecurityException;

    const-string/jumbo v11, "Failed to verify package name ownership"

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10

    .line 8396
    .end local v1    # "e":Landroid/os/RemoteException;
    .restart local v3    # "packageUid":I
    :cond_0
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v8

    .line 8397
    .local v8, "result":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/UriPermission;>;"
    monitor-enter p0

    .line 8398
    if-eqz p2, :cond_4

    .line 8399
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 8401
    .local v6, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v6, :cond_2

    .line 8402
    const-string/jumbo v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "No permission grants found for "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_1
    monitor-exit p0

    .line 8423
    new-instance v10, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v10, v8}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v10

    .line 8404
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :try_start_2
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v5

    .local v5, "perm$iterator":Ljava/util/Iterator;
    :cond_3
    :goto_0
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_1

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 8405
    .local v4, "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v4, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_3

    iget v10, v4, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_3

    .line 8406
    invoke-virtual {v4}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 8397
    .end local v4    # "perm":Lcom/android/server/am/UriPermission;
    .end local v5    # "perm$iterator":Ljava/util/Iterator;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :catchall_0
    move-exception v10

    monitor-exit p0

    throw v10

    .line 8411
    :cond_4
    :try_start_3
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 8412
    .local v9, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v9, :cond_1

    .line 8414
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 8415
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v5

    .restart local v5    # "perm$iterator":Ljava/util/Iterator;
    :cond_5
    :goto_2
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_6

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 8416
    .restart local v4    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v4, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_5

    iget v10, v4, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_5

    .line 8417
    invoke-virtual {v4}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 8412
    .end local v4    # "perm":Lcom/android/server/am/UriPermission;
    :cond_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_1
.end method

.method public getProcessLimit()I
    .locals 1

    .prologue
    .line 7099
    monitor-enter p0

    .line 7100
    :try_start_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return v0

    .line 7099
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 11
    .param p1, "pids"    # [I

    .prologue
    .line 5587
    const-string/jumbo v1, "getProcessMemoryInfo"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5588
    array-length v1, p1

    new-array v8, v1, [Landroid/os/Debug$MemoryInfo;

    .line 5589
    .local v8, "infos":[Landroid/os/Debug$MemoryInfo;
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 5592
    monitor-enter p0

    .line 5593
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5594
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 5595
    .local v10, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v10, :cond_2

    iget v9, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v9, "oomAdj":I
    :goto_1
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 5598
    new-instance v1, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v1}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v1, v8, v0

    .line 5599
    aget v1, p1, v0

    aget-object v2, v8, v0

    invoke-static {v1, v2}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 5600
    if-eqz v10, :cond_1

    .line 5601
    monitor-enter p0

    .line 5602
    :try_start_3
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v9, :cond_0

    .line 5604
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-object v2, v8, v0

    invoke-virtual {v2}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v2

    int-to-long v2, v2

    .line 5605
    aget-object v4, v8, v0

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v4

    int-to-long v4, v4

    iget-object v7, v10, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    const/4 v6, 0x0

    .line 5604
    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :cond_0
    monitor-exit p0

    .line 5589
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 5595
    .end local v9    # "oomAdj":I
    :cond_2
    const/4 v9, 0x0

    .restart local v9    # "oomAdj":I
    goto :goto_1

    .line 5593
    .end local v9    # "oomAdj":I
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2

    throw v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5592
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1

    .line 5601
    .restart local v9    # "oomAdj":I
    .restart local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_2
    move-exception v1

    monitor-exit p0

    throw v1

    .line 5610
    .end local v9    # "oomAdj":I
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return-object v8
.end method

.method public getProcessPss([I)[J
    .locals 13
    .param p1, "pids"    # [I

    .prologue
    const/4 v12, 0x0

    .line 5615
    const-string/jumbo v1, "getProcessPss"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5616
    array-length v1, p1

    new-array v10, v1, [J

    .line 5617
    .local v10, "pss":[J
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 5620
    monitor-enter p0

    .line 5621
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5622
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 5623
    .local v9, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v9, :cond_2

    iget v8, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v8, "oomAdj":I
    :goto_1
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 5626
    const/4 v1, 0x1

    new-array v11, v1, [J

    .line 5627
    .local v11, "tmpUss":[J
    aget v1, p1, v0

    invoke-static {v1, v11, v12}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v2

    aput-wide v2, v10, v0

    .line 5628
    if-eqz v9, :cond_1

    .line 5629
    monitor-enter p0

    .line 5630
    :try_start_3
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v8, :cond_0

    .line 5632
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-wide v2, v10, v0

    const/4 v4, 0x0

    aget-wide v4, v11, v4

    iget-object v7, v9, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    const/4 v6, 0x0

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :cond_0
    monitor-exit p0

    .line 5617
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 5623
    .end local v8    # "oomAdj":I
    .end local v11    # "tmpUss":[J
    :cond_2
    const/4 v8, 0x0

    .restart local v8    # "oomAdj":I
    goto :goto_1

    .line 5621
    .end local v8    # "oomAdj":I
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2

    throw v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5620
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1

    .line 5629
    .restart local v8    # "oomAdj":I
    .restart local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v11    # "tmpUss":[J
    :catchall_2
    move-exception v1

    monitor-exit p0

    throw v1

    .line 5637
    .end local v8    # "oomAdj":I
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v11    # "tmpUss":[J
    :cond_3
    return-object v10
.end method

.method final getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "keepIfLarge"    # Z

    .prologue
    const/4 v6, 0x0

    .line 3130
    const/16 v5, 0x3e8

    if-ne p2, v5, :cond_2

    .line 3134
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 3135
    .local v4, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v4, :cond_0

    return-object v6

    .line 3136
    :cond_0
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 3137
    .local v2, "procCount":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-ge v0, v2, :cond_2

    .line 3138
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 3139
    .local v3, "procUid":I
    invoke-static {v3}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v5

    if-nez v5, :cond_1

    invoke-static {v3, p2}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 3143
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    return-object v5

    .line 3137
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 3146
    .end local v0    # "i":I
    .end local v2    # "procCount":I
    .end local v3    # "procUid":I
    .end local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5, p1, p2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 3155
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_3

    if-eqz p3, :cond_4

    .line 3166
    :cond_3
    :goto_1
    return-object v1

    .line 3156
    :cond_4
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v5, :cond_3

    .line 3157
    iget v5, v1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v6, 0x10

    if-lt v5, v6, :cond_3

    .line 3159
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-ltz v5, :cond_3

    .line 3160
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v5, :cond_5

    .line 3161
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    iget-wide v8, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-virtual {v5, v6, v8, v9}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportCachedKill(Landroid/util/ArrayMap;J)V

    .line 3163
    :cond_5
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, "k from cached"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v1, v5, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_1
.end method

.method public getProcessStatesForPIDs([I[I)V
    .locals 5
    .param p1, "pids"    # [I
    .param p2, "states"    # [I

    .prologue
    .line 7195
    if-nez p1, :cond_0

    .line 7196
    new-instance v2, Ljava/lang/NullPointerException;

    const-string/jumbo v3, "pids"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7197
    :cond_0
    if-nez p2, :cond_1

    .line 7198
    new-instance v2, Ljava/lang/NullPointerException;

    const-string/jumbo v3, "states"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7199
    :cond_1
    array-length v2, p1

    array-length v3, p2

    if-eq v2, v3, :cond_2

    .line 7200
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "input and output arrays have different lengths!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7203
    :cond_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3

    .line 7204
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    :try_start_0
    array-length v2, p1

    if-ge v0, v2, :cond_4

    .line 7205
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v4, p1, v0

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7206
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_3

    const/4 v2, -0x1

    :goto_1
    aput v2, p2, v0

    .line 7204
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 7207
    :cond_3
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curProcState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_4
    monitor-exit v3

    .line 7194
    return-void

    .line 7203
    :catchall_0
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12942
    const-string/jumbo v7, "getProcessesInErrorState"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12944
    const/4 v2, 0x0

    .line 12946
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    const-string/jumbo v7, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 12947
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 12946
    invoke-static {v7, v8}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v7

    if-nez v7, :cond_0

    const/4 v0, 0x1

    .line 12948
    .local v0, "allUsers":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 12950
    .local v6, "userId":I
    monitor-enter p0

    .line 12953
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "i":I
    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .local v3, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_1
    if-ltz v4, :cond_7

    .line 12954
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 12955
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    iget v7, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v7, v6, :cond_1

    move-object v2, v3

    .line 12953
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_2
    add-int/lit8 v4, v4, -0x1

    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_1

    .line 12946
    .end local v0    # "allUsers":Z
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .end local v4    # "i":I
    .end local v6    # "userId":I
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_0
    const/4 v0, 0x0

    .restart local v0    # "allUsers":Z
    goto :goto_0

    .line 12958
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    .restart local v6    # "userId":I
    :cond_1
    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_4

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v7, :cond_2

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_9

    .line 12961
    :cond_2
    const/4 v5, 0x0

    .line 12962
    .local v5, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v7, :cond_5

    .line 12963
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12968
    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_3
    :goto_3
    if-eqz v5, :cond_6

    .line 12969
    if-nez v3, :cond_8

    .line 12970
    new-instance v2, Ljava/util/ArrayList;

    const/4 v7, 0x1

    invoke-direct {v2, v7}, Ljava/util/ArrayList;-><init>(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 12972
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v2, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_2

    .line 12950
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .end local v4    # "i":I
    :catchall_0
    move-exception v7

    :goto_5
    monitor-exit p0

    throw v7

    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    :cond_4
    move-object v2, v3

    .line 12958
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_2

    .line 12964
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_5
    :try_start_3
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_3

    .line 12965
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .local v5, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    goto :goto_3

    .line 12974
    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_6
    const-string/jumbo v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Missing app error report, app = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 12975
    const-string/jumbo v9, " crashing = "

    .line 12974
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 12975
    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 12974
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 12976
    const-string/jumbo v9, " notResponding = "

    .line 12974
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 12976
    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 12974
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_2

    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_7
    monitor-exit p0

    .line 12982
    return-object v3

    .line 12950
    :catchall_1
    move-exception v7

    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_5

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_8
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_4

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_9
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_2
.end method

.method public getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;
    .locals 12
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "userId"    # I

    .prologue
    const/4 v11, 0x0

    .line 10311
    const-string/jumbo v8, "getProviderMimeType"

    invoke-virtual {p0, v8}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10312
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v5

    .line 10313
    .local v5, "name":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 10314
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 10315
    .local v0, "callingPid":I
    const-wide/16 v6, 0x0

    .line 10316
    .local v6, "ident":J
    const/4 v2, 0x0

    .line 10317
    .local v2, "clearedIdentity":Z
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result p2

    .line 10318
    invoke-direct {p0, v0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->canClearIdentity(III)Z

    move-result v8

    if-eqz v8, :cond_0

    .line 10319
    const/4 v2, 0x1

    .line 10320
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 10322
    :cond_0
    const/4 v4, 0x0

    .line 10324
    .local v4, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v8, 0x0

    :try_start_0
    invoke-direct {p0, v5, v8, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v4

    .line 10325
    .local v4, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    if-eqz v4, :cond_3

    .line 10326
    iget-object v8, v4, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    invoke-interface {v8, p1}, Landroid/content/IContentProvider;->getType(Landroid/net/Uri;)Ljava/lang/String;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    move-result-object v8

    .line 10333
    if-nez v2, :cond_1

    .line 10334
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 10337
    :cond_1
    if-eqz v4, :cond_2

    .line 10338
    const/4 v9, 0x0

    :try_start_1
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10341
    :cond_2
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10326
    return-object v8

    .line 10340
    :catchall_0
    move-exception v8

    .line 10341
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10340
    throw v8

    .line 10333
    :cond_3
    if-nez v2, :cond_4

    .line 10334
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 10337
    :cond_4
    if-eqz v4, :cond_5

    .line 10338
    const/4 v8, 0x0

    :try_start_2
    invoke-direct {p0, v5, v8, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 10341
    :cond_5
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10345
    return-object v11

    .line 10340
    :catchall_1
    move-exception v8

    .line 10341
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10340
    throw v8

    .line 10328
    .end local v4    # "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    :catch_0
    move-exception v3

    .line 10329
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_3
    const-string/jumbo v8, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "Content provider dead retrieving "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 10333
    if-nez v2, :cond_6

    .line 10334
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 10337
    :cond_6
    if-eqz v4, :cond_7

    .line 10338
    const/4 v8, 0x0

    :try_start_4
    invoke-direct {p0, v5, v8, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 10341
    :cond_7
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10330
    return-object v11

    .line 10340
    :catchall_2
    move-exception v8

    .line 10341
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10340
    throw v8

    .line 10331
    .end local v3    # "e":Landroid/os/RemoteException;
    :catchall_3
    move-exception v8

    .line 10333
    if-nez v2, :cond_8

    .line 10334
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 10337
    :cond_8
    if-eqz v4, :cond_9

    .line 10338
    const/4 v9, 0x0

    :try_start_5
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    .line 10341
    :cond_9
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10331
    throw v8

    .line 10340
    :catchall_4
    move-exception v8

    .line 10341
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10340
    throw v8
.end method

.method public getRecentTasks(III)Ljava/util/List;
    .locals 20
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RecentTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8591
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 8592
    .local v4, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 8593
    const-string/jumbo v8, "getRecentTasks"

    const/4 v6, 0x0

    const/4 v7, 0x2

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p3

    .line 8592
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 8595
    and-int/lit8 v2, p2, 0x4

    if-eqz v2, :cond_1

    const/4 v13, 0x1

    .line 8596
    .local v13, "includeProfiles":Z
    :goto_0
    and-int/lit8 v2, p2, 0x1

    if-eqz v2, :cond_2

    const/16 v19, 0x1

    .line 8597
    .local v19, "withExcluded":Z
    :goto_1
    monitor-enter p0

    .line 8598
    :try_start_0
    const-string/jumbo v2, "getRecentTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v10

    .line 8601
    .local v10, "allowed":Z
    const-string/jumbo v2, "android.permission.GET_DETAILED_TASKS"

    .line 8600
    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_3

    const/4 v11, 0x1

    .line 8604
    .local v11, "detailed":Z
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v2}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v15

    .line 8606
    .local v15, "recentsCount":I
    new-instance v16, Ljava/util/ArrayList;

    move/from16 v0, p1

    if-ge v0, v15, :cond_4

    move/from16 v2, p1

    :goto_3
    move-object/from16 v0, v16

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 8609
    .local v16, "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    if-eqz v13, :cond_5

    .line 8610
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProfileIdsLocked(I)Ljava/util/Set;

    move-result-object v14

    .line 8614
    .local v14, "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    :goto_4
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v14, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 8616
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_5
    if-ge v12, v15, :cond_e

    if-lez p1, :cond_e

    .line 8617
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v2, v12}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/TaskRecord;

    .line 8619
    .local v18, "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->userId:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v14, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_6

    .line 8616
    :cond_0
    :goto_6
    add-int/lit8 v12, v12, 0x1

    goto :goto_5

    .line 8595
    .end local v10    # "allowed":Z
    .end local v11    # "detailed":Z
    .end local v12    # "i":I
    .end local v13    # "includeProfiles":Z
    .end local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v15    # "recentsCount":I
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    .end local v19    # "withExcluded":Z
    :cond_1
    const/4 v13, 0x0

    .restart local v13    # "includeProfiles":Z
    goto :goto_0

    .line 8596
    :cond_2
    const/16 v19, 0x0

    .restart local v19    # "withExcluded":Z
    goto :goto_1

    .line 8600
    .restart local v10    # "allowed":Z
    :cond_3
    const/4 v11, 0x0

    .restart local v11    # "detailed":Z
    goto :goto_2

    .restart local v15    # "recentsCount":I
    :cond_4
    move v2, v15

    .line 8606
    goto :goto_3

    .line 8612
    .restart local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :cond_5
    new-instance v14, Ljava/util/HashSet;

    invoke-direct {v14}, Ljava/util/HashSet;-><init>()V

    .restart local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    goto :goto_4

    .line 8630
    .restart local v12    # "i":I
    .restart local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_6
    if-eqz v12, :cond_7

    if-nez v19, :cond_7

    .line 8632
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-nez v2, :cond_d

    .line 8635
    :cond_7
    :goto_7
    if-nez v10, :cond_8

    .line 8638
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->isHomeTask()Z

    move-result v2

    if-nez v2, :cond_8

    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-ne v2, v4, :cond_0

    .line 8643
    :cond_8
    and-int/lit8 v2, p2, 0x8

    if-eqz v2, :cond_9

    .line 8644
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v2, :cond_9

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v2

    if-nez v2, :cond_0

    .line 8650
    :cond_9
    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->autoRemoveRecents:Z

    if-eqz v2, :cond_a

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 8656
    :cond_a
    and-int/lit8 v2, p2, 0x2

    if-eqz v2, :cond_b

    .line 8657
    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    if-eqz v2, :cond_0

    .line 8663
    :cond_b
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v17

    .line 8664
    .local v17, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    if-nez v11, :cond_c

    .line 8665
    move-object/from16 v0, v17

    iget-object v3, v0, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    const/4 v2, 0x0

    check-cast v2, Landroid/os/Bundle;

    invoke-virtual {v3, v2}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 8668
    :cond_c
    invoke-virtual/range {v16 .. v17}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8669
    add-int/lit8 p1, p1, -0x1

    goto :goto_6

    .line 8633
    .end local v17    # "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    :cond_d
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    const/high16 v3, 0x800000

    and-int/2addr v2, v3

    if-nez v2, :cond_0

    goto :goto_7

    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_e
    monitor-exit p0

    .line 8672
    return-object v16

    .line 8597
    .end local v10    # "allowed":Z
    .end local v11    # "detailed":Z
    .end local v12    # "i":I
    .end local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v15    # "recentsCount":I
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method final getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 2
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    const/4 v1, 0x0

    .line 4741
    if-nez p1, :cond_0

    .line 4742
    return-object v1

    .line 4745
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I

    move-result v0

    .line 4746
    .local v0, "appIndex":I
    if-ltz v0, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    :cond_1
    return-object v1
.end method

.method public getRequestedOrientation(Landroid/os/IBinder;)I
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4392
    monitor-enter p0

    .line 4393
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 4394
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 4395
    const/4 v1, -0x1

    monitor-exit p0

    return v1

    .line 4397
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->getAppOrientation(Landroid/view/IApplicationToken;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 4392
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13018
    const-string/jumbo v10, "getRunningAppProcesses"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13020
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 13023
    .local v3, "callingUid":I
    const/4 v7, 0x0

    .line 13024
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    const-string/jumbo v10, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v10, v3}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v10

    if-nez v10, :cond_1

    const/4 v1, 0x1

    .line 13026
    .local v1, "allUsers":Z
    :goto_0
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    .line 13028
    .local v9, "userId":I
    const-string/jumbo v10, "getRunningAppProcesses"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 13027
    invoke-direct {p0, v10, v11, v3}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v0

    .line 13030
    .local v0, "allUids":Z
    monitor-enter p0

    .line 13032
    :try_start_0
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v10

    add-int/lit8 v5, v10, -0x1

    .local v5, "i":I
    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .local v8, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_1
    if-ltz v5, :cond_a

    .line 13033
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 13034
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_2

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v10, v9, :cond_2

    :cond_0
    move-object v7, v8

    .line 13032
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_2
    add-int/lit8 v5, v5, -0x1

    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_1

    .line 13024
    .end local v0    # "allUids":Z
    .end local v1    # "allUsers":Z
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "i":I
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .end local v9    # "userId":I
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_1
    const/4 v1, 0x0

    .restart local v1    # "allUsers":Z
    goto :goto_0

    .line 13035
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v0    # "allUids":Z
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v9    # "userId":I
    :cond_2
    if-nez v0, :cond_3

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v10, v3, :cond_0

    .line 13038
    :cond_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-string/jumbo v11, "system"

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_4

    move-object v7, v8

    .line 13039
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_2

    .line 13041
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_4
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v10, :cond_5

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v10, :cond_5

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v10, :cond_6

    :cond_5
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_2

    .line 13044
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_6
    new-instance v4, Landroid/app/ActivityManager$RunningAppProcessInfo;

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 13045
    iget v11, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v12

    .line 13044
    invoke-direct {v4, v10, v11, v12}, Landroid/app/ActivityManager$RunningAppProcessInfo;-><init>(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 13046
    .local v4, "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    invoke-direct {p0, v2, v4}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V

    .line 13047
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_9

    .line 13048
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    .line 13051
    iget v10, v2, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 13050
    invoke-static {v10}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v10

    .line 13049
    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonImportance:I

    .line 13056
    :cond_7
    :goto_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v10, v10, Landroid/content/ComponentName;

    if-eqz v10, :cond_8

    .line 13057
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v10, Landroid/content/ComponentName;

    iput-object v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonComponent:Landroid/content/ComponentName;

    .line 13061
    :cond_8
    if-nez v8, :cond_b

    .line 13062
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13064
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v7, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_2

    .line 13030
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v5    # "i":I
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :catchall_0
    move-exception v10

    :goto_5
    monitor-exit p0

    throw v10

    .line 13052
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_9
    :try_start_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ActivityRecord;

    if-eqz v10, :cond_7

    .line 13053
    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    .line 13054
    .local v6, "r":Lcom/android/server/am/ActivityRecord;
    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_7

    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_3

    .line 13030
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v6    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_1
    move-exception v10

    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_5

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_a
    monitor-exit p0

    .line 13068
    return-object v8

    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :cond_b
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_4
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ApplicationInfo;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v11, 0x0

    .line 13072
    const-string/jumbo v10, "getRunningExternalApplications"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13073
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v9

    .line 13074
    .local v9, "runningApps":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    .line 13075
    .local v8, "retList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    if-eqz v9, :cond_3

    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v10

    if-lez v10, :cond_3

    .line 13076
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 13077
    .local v3, "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v9}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "app$iterator":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 13078
    .local v0, "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    iget-object v10, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v10, :cond_0

    .line 13079
    iget-object v12, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    array-length v13, v12

    move v10, v11

    :goto_0
    if-ge v10, v13, :cond_0

    aget-object v5, v12, v10

    .line 13080
    .local v5, "pkg":Ljava/lang/String;
    invoke-interface {v3, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 13079
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 13084
    .end local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v5    # "pkg":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    .line 13085
    .local v7, "pm":Landroid/content/pm/IPackageManager;
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .local v6, "pkg$iterator":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_3

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 13087
    .restart local v5    # "pkg":Ljava/lang/String;
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v10

    const/4 v11, 0x0

    invoke-interface {v7, v5, v11, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 13088
    .local v4, "info":Landroid/content/pm/ApplicationInfo;
    iget v10, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v11, 0x40000

    and-int/2addr v10, v11

    if-eqz v10, :cond_2

    .line 13089
    invoke-interface {v8, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 13091
    .end local v4    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_1

    .line 13095
    .end local v1    # "app$iterator":Ljava/util/Iterator;
    .end local v2    # "e":Landroid/os/RemoteException;
    .end local v3    # "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v5    # "pkg":Ljava/lang/String;
    .end local v6    # "pkg$iterator":Ljava/util/Iterator;
    .end local v7    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    return-object v8
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 1
    .param p1, "name"    # Landroid/content/ComponentName;

    .prologue
    .line 15968
    const-string/jumbo v0, "getRunningServiceControlPanel"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15969
    monitor-enter p0

    .line 15970
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 15969
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getRunningUserIds()[I
    .locals 3

    .prologue
    .line 20819
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 20821
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20822
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 20821
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20823
    const-string/jumbo v2, ", uid="

    .line 20821
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20823
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 20821
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20824
    const-string/jumbo v2, " requires "

    .line 20821
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20824
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS"

    .line 20821
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20825
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20826
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20828
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 20829
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return-object v1

    .line 20828
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getServices(II)Ljava/util/List;
    .locals 1
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningServiceInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 15960
    const-string/jumbo v0, "getServices"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15961
    monitor-enter p0

    .line 15962
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(II)Ljava/util/List;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 15961
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getStackInfo(I)Landroid/app/ActivityManager$StackInfo;
    .locals 4
    .param p1, "stackId"    # I

    .prologue
    .line 9183
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9184
    const-string/jumbo v3, "getStackInfo()"

    .line 9183
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9185
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9187
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9188
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStackInfoLocked(I)Landroid/app/ActivityManager$StackInfo;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9191
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9188
    return-object v2

    .line 9187
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9190
    :catchall_1
    move-exception v2

    .line 9191
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9190
    throw v2
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    .line 7049
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 7050
    return-object v4

    .line 7053
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 7054
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7055
    :try_start_1
    invoke-virtual {p0, v2, p2}, Lcom/android/server/am/ActivityManagerService;->getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v3

    :try_start_2
    monitor-exit p0

    return-object v3

    .line 7054
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
    :try_end_2
    .catch Ljava/lang/ClassCastException; {:try_start_2 .. :try_end_2} :catch_0

    .line 7057
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 7059
    .local v1, "e":Ljava/lang/ClassCastException;
    return-object v4
.end method

.method getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    .locals 4
    .param p1, "res"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    const/4 v3, 0x0

    .line 7063
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 7064
    .local v0, "intent":Landroid/content/Intent;
    if-eqz v0, :cond_5

    .line 7065
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v2, :cond_1

    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v2, p2, :cond_1

    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-eqz v2, :cond_0

    .line 7066
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    invoke-virtual {v2, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 7065
    if-eqz v2, :cond_1

    .line 7067
    :cond_0
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object v2

    .line 7069
    :cond_1
    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 7070
    new-instance v1, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 7071
    .local v1, "sb":Ljava/lang/StringBuilder;
    if-eqz p2, :cond_2

    .line 7072
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7074
    :cond_2
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_3

    .line 7075
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7081
    :goto_0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object v2

    .line 7076
    :cond_3
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 7077
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_0

    .line 7079
    :cond_4
    const-string/jumbo v2, "?"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_0

    .line 7083
    .end local v1    # "sb":Ljava/lang/StringBuilder;
    :cond_5
    return-object v3
.end method

.method public getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;
    .locals 3
    .param p1, "filename"    # Ljava/lang/String;

    .prologue
    .line 8828
    invoke-static {p1}, Landroid/os/FileUtils;->isValidExtFilename(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8829
    const-string/jumbo v0, "_activity_icon_"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 8832
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1}, Lcom/android/server/am/TaskPersister;->getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0

    .line 8830
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Bad filename: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "onlyRoot"    # Z

    .prologue
    .line 9212
    monitor-enter p0

    .line 9213
    :try_start_0
    invoke-static {p1, p2}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 9212
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getTaskThumbnail(I)Landroid/app/ActivityManager$TaskThumbnail;
    .locals 4
    .param p1, "id"    # I

    .prologue
    const/4 v3, 0x0

    .line 8678
    monitor-enter p0

    .line 8679
    :try_start_0
    const-string/jumbo v1, "android.permission.READ_FRAME_BUFFER"

    .line 8680
    const-string/jumbo v2, "getTaskThumbnail()"

    .line 8679
    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8681
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 8682
    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_0

    .line 8683
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->getTaskThumbnailLocked()Landroid/app/ActivityManager$TaskThumbnail;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    monitor-exit p0

    return-object v1

    :cond_0
    monitor-exit p0

    .line 8686
    return-object v3

    .line 8678
    .end local v0    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getTasks(II)Ljava/util/List;
    .locals 5
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8500
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8501
    .local v1, "callingUid":I
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 8503
    .local v2, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    monitor-enter p0

    .line 8507
    :try_start_0
    const-string/jumbo v3, "getTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-direct {p0, v3, v4, v1}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v0

    .line 8511
    .local v0, "allowed":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1, v2, v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getTasksLocked(ILjava/util/List;IZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 8514
    return-object v2

    .line 8503
    .end local v0    # "allowed":Z
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public getUidForIntentSender(Landroid/content/IIntentSender;)I
    .locals 4
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 6986
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v3, :cond_0

    .line 6988
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 6989
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    iget v3, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    return v3

    .line 6990
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 6993
    :cond_0
    const/4 v3, -0x1

    return v3
.end method

.method getUserManagerLocked()Lcom/android/server/pm/UserManagerService;
    .locals 2

    .prologue
    .line 20881
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    if-nez v1, :cond_0

    .line 20882
    const-string/jumbo v1, "user"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 20883
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IUserManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IUserManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/UserManagerService;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    .line 20885
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    return-object v1
.end method

.method getUsersLocked()[I
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 20876
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v0

    .line 20877
    .local v0, "ums":Lcom/android/server/pm/UserManagerService;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/pm/UserManagerService;->getUserIds()[I

    move-result-object v1

    :goto_0
    return-object v1

    :cond_0
    const/4 v1, 0x1

    new-array v1, v1, [I

    aput v2, v1, v2

    goto :goto_0
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 8
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 7859
    const-string/jumbo v0, "grantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7860
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 7861
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    monitor-enter p0

    .line 7862
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 7863
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v7, :cond_0

    .line 7864
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Unable to find app for caller "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 7866
    const-string/jumbo v2, " when granting permission to uri "

    .line 7864
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7861
    .end local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    .line 7868
    .restart local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    .line 7869
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7871
    :cond_1
    if-nez v3, :cond_2

    .line 7872
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7875
    :cond_2
    const/16 v0, 0xc3

    invoke-static {p4, v0}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 7880
    iget v1, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 7881
    iget v0, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 7880
    const/4 v5, 0x0

    move-object v0, p0

    move-object v2, p2

    move v4, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 7858
    return-void
.end method

.method grantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;I)V
    .locals 8
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p5, "targetUserId"    # I

    .prologue
    const/4 v5, 0x0

    .line 7844
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I

    move-result v4

    :goto_0
    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move-object v3, p3

    move v6, p5

    .line 7843
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v7

    .line 7845
    .local v7, "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-nez v7, :cond_1

    .line 7846
    return-void

    .line 7844
    .end local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 7849
    .restart local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_1
    invoke-virtual {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V

    .line 7842
    return-void
.end method

.method public grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "fromUid"    # I
    .param p3, "targetPkg"    # Ljava/lang/String;
    .param p4, "uri"    # Landroid/net/Uri;
    .param p5, "modeFlags"    # I
    .param p6, "sourceUserId"    # I
    .param p7, "targetUserId"    # I

    .prologue
    const/4 v4, 0x0

    const/4 v7, 0x0

    .line 8088
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 8089
    const-string/jumbo v6, "grantUriPermissionFromOwner"

    const/4 v5, 0x2

    move-object v0, p0

    move v3, p7

    .line 8088
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 8090
    monitor-enter p0

    .line 8091
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v5

    .line 8092
    .local v5, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v5, :cond_0

    .line 8093
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Unknown owner: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8090
    .end local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    .line 8095
    .restart local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-eq p2, v0, :cond_1

    .line 8096
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-eq v0, v1, :cond_1

    .line 8099
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "nice try"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8102
    :cond_1
    if-nez p3, :cond_2

    .line 8103
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8105
    :cond_2
    if-nez p4, :cond_3

    .line 8106
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8109
    :cond_3
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p6, p4, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object v0, p0

    move v1, p2

    move-object v2, p3

    move v4, p5

    move v6, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 8087
    return-void
.end method

.method grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    .locals 13
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p6, "targetUserId"    # I

    .prologue
    .line 7709
    if-nez p2, :cond_0

    .line 7710
    new-instance v1, Ljava/lang/NullPointerException;

    const-string/jumbo v2, "targetPkg"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 7713
    :cond_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v12

    .line 7715
    .local v12, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    move/from16 v0, p6

    invoke-interface {v12, p2, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v6

    .local v6, "targetUid":I
    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    .line 7720
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v6

    .line 7722
    if-gez v6, :cond_1

    .line 7723
    return-void

    .line 7716
    .end local v6    # "targetUid":I
    :catch_0
    move-exception v11

    .line 7717
    .local v11, "ex":Landroid/os/RemoteException;
    return-void

    .end local v11    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "targetUid":I
    :cond_1
    move-object v5, p0

    move-object v7, p2

    move-object/from16 v8, p3

    move/from16 v9, p4

    move-object/from16 v10, p5

    .line 7726
    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 7708
    return-void
.end method

.method grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V
    .locals 7
    .param p1, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p2, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 7832
    if-eqz p1, :cond_0

    .line 7833
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->size()I

    move-result v0

    if-ge v6, v0, :cond_0

    .line 7834
    invoke-virtual {p1, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 7835
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v1, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetPkg:Ljava/lang/String;

    .line 7836
    iget v4, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->flags:I

    move-object v0, p0

    move-object v5, p2

    .line 7835
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 7833
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 7831
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v6    # "i":I
    :cond_0
    return-void
.end method

.method grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V
    .locals 6
    .param p1, "targetUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 7681
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v3

    if-nez v3, :cond_0

    .line 7682
    return-void

    .line 7692
    :cond_0
    iget-object v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 7693
    .local v0, "authority":Ljava/lang/String;
    iget v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v2

    .line 7694
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v2, :cond_1

    .line 7695
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "No content provider found for grant: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7696
    return-void

    .line 7699
    :cond_1
    and-int/lit16 v3, p4, 0x80

    if-eqz v3, :cond_2

    .line 7700
    const/4 v3, 0x1

    iput-boolean v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    .line 7703
    :cond_2
    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    .line 7702
    invoke-direct {p0, v3, p2, p1, p3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 7704
    .local v1, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, p5}, Lcom/android/server/am/UriPermission;->grantModes(ILcom/android/server/am/UriPermissionOwner;)V

    .line 7680
    return-void
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 3
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 12341
    const-string/jumbo v2, "Crash"

    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 12342
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p1, :cond_0

    const-string/jumbo v0, "system_server"

    .line 12345
    .local v0, "processName":Ljava/lang/String;
    :goto_0
    const-string/jumbo v2, "crash"

    invoke-virtual {p0, v2, v1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 12340
    return-void

    .line 12343
    .end local v0    # "processName":Ljava/lang/String;
    :cond_0
    if-nez v1, :cond_1

    const-string/jumbo v0, "unknown"

    .restart local v0    # "processName":Ljava/lang/String;
    goto :goto_0

    .end local v0    # "processName":Ljava/lang/String;
    :cond_1
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .restart local v0    # "processName":Ljava/lang/String;
    goto :goto_0
.end method

.method handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 10
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 12353
    const/16 v0, 0x8

    new-array v1, v0, [Ljava/lang/Object;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v2, 0x0

    aput-object v0, v1, v2

    .line 12354
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v2, 0x1

    aput-object v0, v1, v2

    const/4 v0, 0x2

    aput-object p3, v1, v0

    .line 12355
    if-nez p2, :cond_0

    const/4 v0, -0x1

    :goto_0
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v2, 0x3

    aput-object v0, v1, v2

    .line 12356
    iget-object v0, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    const/4 v2, 0x4

    aput-object v0, v1, v2

    .line 12357
    iget-object v0, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    const/4 v2, 0x5

    aput-object v0, v1, v2

    .line 12358
    iget-object v0, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    const/4 v2, 0x6

    aput-object v0, v1, v2

    .line 12359
    iget v0, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v2, 0x7

    aput-object v0, v1, v2

    .line 12353
    const/16 v0, 0x7557

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p4

    .line 12361
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 12363
    invoke-direct {p0, p2, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 12352
    return-void

    .line 12355
    :cond_0
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_0
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 12
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "violationMask"    # I
    .param p3, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 12370
    const-string/jumbo v9, "StrictMode"

    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 12371
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_0

    .line 12372
    return-void

    .line 12375
    :cond_0
    const/high16 v9, 0x200000

    and-int/2addr v9, p2

    if-eqz v9, :cond_1

    .line 12376
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v9

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    .line 12377
    .local v8, "stackFingerprint":Ljava/lang/Integer;
    const/4 v1, 0x1

    .line 12378
    .local v1, "logIt":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v10

    .line 12379
    :try_start_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v9

    if-eqz v9, :cond_3

    .line 12380
    const/4 v1, 0x0

    :goto_0
    monitor-exit v10

    .line 12394
    if-eqz v1, :cond_1

    .line 12395
    invoke-direct {p0, v3, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    .line 12399
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_1
    const/high16 v9, 0x20000

    and-int/2addr v9, p2

    if-eqz v9, :cond_2

    .line 12400
    new-instance v7, Lcom/android/server/am/AppErrorResult;

    invoke-direct {v7}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 12401
    .local v7, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 12402
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 12404
    .local v4, "origId":J
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    .line 12405
    .local v2, "msg":Landroid/os/Message;
    const/16 v9, 0x1a

    iput v9, v2, Landroid/os/Message;->what:I

    .line 12406
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 12407
    .local v0, "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const-string/jumbo v9, "result"

    invoke-virtual {v0, v9, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12408
    const-string/jumbo v9, "app"

    invoke-virtual {v0, v9, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12409
    const-string/jumbo v9, "violationMask"

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    invoke-virtual {v0, v9, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12410
    const-string/jumbo v9, "info"

    invoke-virtual {v0, v9, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12411
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 12412
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 12414
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    .line 12416
    invoke-virtual {v7}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v6

    .line 12417
    .local v6, "res":I
    const-string/jumbo v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "handleApplicationStrictModeViolation; res="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12369
    .end local v0    # "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v2    # "msg":Landroid/os/Message;
    .end local v4    # "origId":J
    .end local v6    # "res":I
    .end local v7    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_2
    return-void

    .line 12388
    .restart local v1    # "logIt":Z
    .restart local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_3
    :try_start_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->size()I

    move-result v9

    const/16 v11, 0x1388

    if-lt v9, v11, :cond_4

    .line 12389
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V

    .line 12391
    :cond_4
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 12378
    :catchall_0
    move-exception v9

    monitor-exit v10

    throw v9

    .line 12401
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    .restart local v7    # "result":Lcom/android/server/am/AppErrorResult;
    :catchall_1
    move-exception v9

    monitor-exit p0

    throw v9
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$CrashInfo;)Z
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "system"    # Z
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v9, 0x0

    .line 12553
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 12554
    .local v2, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 12556
    .local v3, "callingPid":I
    if-eqz p3, :cond_0

    .line 12560
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$18;

    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    invoke-virtual {v8, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 12565
    return v9

    :cond_0
    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    .line 12568
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 12571
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_1

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-eq v0, v1, :cond_1

    .line 12572
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 12573
    const-string/jumbo v1, "wtf_is_fatal"

    .line 12572
    invoke-static {v0, v1, v9}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1

    .line 12574
    invoke-direct {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 12575
    const/4 v0, 0x1

    return v0

    .line 12577
    :cond_1
    return v9
.end method

.method handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "callingUid"    # I
    .param p2, "callingPid"    # I
    .param p3, "app"    # Landroid/os/IBinder;
    .param p4, "tag"    # Ljava/lang/String;
    .param p5, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 12583
    const-string/jumbo v0, "WTF"

    invoke-direct {p0, p3, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 12584
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p3, :cond_0

    const-string/jumbo v3, "system_server"

    .line 12587
    .local v3, "processName":Ljava/lang/String;
    :goto_0
    const/4 v0, 0x6

    new-array v1, v0, [Ljava/lang/Object;

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v5, 0x0

    aput-object v0, v1, v5

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v5, 0x1

    aput-object v0, v1, v5

    .line 12588
    const/4 v0, 0x2

    aput-object v3, v1, v0

    if-nez v2, :cond_2

    const/4 v0, -0x1

    :goto_1
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    const/4 v5, 0x3

    aput-object v0, v1, v5

    const/4 v0, 0x4

    aput-object p4, v1, v0

    iget-object v0, p5, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    const/4 v5, 0x5

    aput-object v0, v1, v5

    .line 12587
    const/16 v0, 0x7558

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 12590
    const-string/jumbo v1, "wtf"

    move-object v0, p0

    move-object v5, v4

    move-object v6, p4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p5

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 12592
    return-object v2

    .line 12585
    .end local v3    # "processName":Ljava/lang/String;
    :cond_0
    if-nez v2, :cond_1

    const-string/jumbo v3, "unknown"

    .restart local v3    # "processName":Ljava/lang/String;
    goto :goto_0

    .end local v3    # "processName":Ljava/lang/String;
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .restart local v3    # "processName":Ljava/lang/String;
    goto :goto_0

    .line 12588
    :cond_2
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_1
.end method

.method handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    .locals 14
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "allowMode"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 16077
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    .line 16078
    .local v10, "callingUserId":I
    move/from16 v0, p3

    if-ne v10, v0, :cond_0

    .line 16079
    return p3

    .line 16088
    :cond_0
    move/from16 v0, p3

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v13

    .line 16090
    .local v13, "targetUserId":I
    if-eqz p2, :cond_1

    const/16 v1, 0x3e8

    move/from16 v0, p2

    if-eq v0, v1, :cond_1

    .line 16092
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 16093
    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    .line 16092
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_2

    .line 16095
    const/4 v7, 0x1

    .line 16120
    .local v7, "allow":Z
    :goto_0
    if-nez v7, :cond_1

    .line 16121
    const/4 v1, -0x3

    move/from16 v0, p3

    if-ne v0, v1, :cond_9

    .line 16124
    move v13, v10

    .line 16149
    .end local v7    # "allow":Z
    :cond_1
    if-nez p4, :cond_c

    if-gez v13, :cond_c

    .line 16150
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 16151
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Call does not support special user #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 16150
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 16096
    :cond_2
    const/4 v1, 0x2

    move/from16 v0, p5

    if-ne v0, v1, :cond_3

    .line 16098
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_0

    .line 16099
    .end local v7    # "allow":Z
    :cond_3
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS"

    .line 16100
    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    .line 16099
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-eqz v1, :cond_4

    .line 16102
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_0

    .line 16103
    .end local v7    # "allow":Z
    :cond_4
    if-nez p5, :cond_5

    .line 16105
    const/4 v7, 0x1

    .restart local v7    # "allow":Z
    goto :goto_0

    .line 16106
    .end local v7    # "allow":Z
    :cond_5
    const/4 v1, 0x1

    move/from16 v0, p5

    if-ne v0, v1, :cond_8

    .line 16109
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v2

    .line 16110
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    .line 16111
    const/4 v3, -0x1

    .line 16110
    invoke-virtual {v1, v10, v3}, Landroid/util/SparseIntArray;->get(II)I

    move-result v9

    .line 16112
    .local v9, "callingProfile":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    .line 16113
    const/4 v3, -0x1

    .line 16112
    invoke-virtual {v1, v13, v3}, Landroid/util/SparseIntArray;->get(II)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v12

    .line 16114
    .local v12, "targetProfile":I
    const/4 v1, -0x1

    if-eq v9, v1, :cond_7

    .line 16115
    if-ne v9, v12, :cond_6

    const/4 v7, 0x1

    .restart local v7    # "allow":Z
    :goto_1
    monitor-exit v2

    goto :goto_0

    .end local v7    # "allow":Z
    :cond_6
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 16114
    .end local v7    # "allow":Z
    :cond_7
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 16109
    .end local v7    # "allow":Z
    .end local v9    # "callingProfile":I
    .end local v12    # "targetProfile":I
    :catchall_0
    move-exception v1

    monitor-exit v2

    throw v1

    .line 16118
    :cond_8
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Unknown mode: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 16126
    .restart local v7    # "allow":Z
    :cond_9
    new-instance v8, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v8, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 16127
    .local v8, "builder":Ljava/lang/StringBuilder;
    const-string/jumbo v1, "Permission Denial: "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16128
    move-object/from16 v0, p6

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16129
    if-eqz p7, :cond_a

    .line 16130
    const-string/jumbo v1, " from "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16131
    move-object/from16 v0, p7

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16133
    :cond_a
    const-string/jumbo v1, " asks to run as user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16134
    move/from16 v0, p3

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 16135
    const-string/jumbo v1, " but is calling from user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16136
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 16137
    const-string/jumbo v1, "; this requires "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16138
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16139
    const/4 v1, 0x2

    move/from16 v0, p5

    if-eq v0, v1, :cond_b

    .line 16140
    const-string/jumbo v1, " or "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16141
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16143
    :cond_b
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    .line 16144
    .local v11, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16145
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 16154
    .end local v7    # "allow":Z
    .end local v8    # "builder":Ljava/lang/StringBuilder;
    .end local v11    # "msg":Ljava/lang/String;
    :cond_c
    const/16 v1, 0x7d0

    move/from16 v0, p2

    if-ne v0, v1, :cond_d

    if-ltz v13, :cond_d

    .line 16155
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const-string/jumbo v2, "no_debugging_features"

    invoke-virtual {v1, v2, v13}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_d

    .line 16157
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Shell does not have permission to access user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 16158
    const-string/jumbo v3, "\n "

    .line 16157
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 16158
    const/4 v3, 0x3

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    .line 16157
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 16161
    :cond_d
    return v13
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 8
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "requireFull"    # Z
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 16067
    if-eqz p5, :cond_0

    const/4 v5, 0x2

    :goto_0
    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p6

    move-object v7, p7

    .line 16066
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    return v0

    .line 16067
    :cond_0
    const/4 v5, 0x0

    goto :goto_0
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 6
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "allowRestart"    # Z

    .prologue
    .line 11546
    const-string/jumbo v3, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_0

    .line 11548
    new-instance v3, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 11552
    :cond_0
    new-instance v0, Lcom/android/server/am/ActivityManagerService$12;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 11562
    .local v0, "death":Landroid/os/IBinder$DeathRecipient;
    const/4 v3, 0x0

    :try_start_0
    invoke-interface {p1, v0, v3}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 11568
    monitor-enter p0

    .line 11569
    :try_start_1
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v3

    invoke-virtual {v3, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 11570
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Hanging system process at request of pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11571
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11572
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v3

    if-eqz v3, :cond_1

    .line 11574
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 11575
    :catch_0
    move-exception v2

    .local v2, "e":Ljava/lang/InterruptedException;
    goto :goto_0

    .line 11563
    .end local v2    # "e":Ljava/lang/InterruptedException;
    :catch_1
    move-exception v1

    .line 11564
    .local v1, "e":Landroid/os/RemoteException;
    const-string/jumbo v3, "ActivityManager"

    const-string/jumbo v4, "hang: given caller IBinder is already dead."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11565
    return-void

    .end local v1    # "e":Landroid/os/RemoteException;
    :cond_1
    :try_start_4
    monitor-exit v0

    .line 11579
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v3

    const/4 v4, 0x1

    invoke-virtual {v3, v4}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 11545
    return-void

    .line 11571
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v0

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11568
    :catchall_1
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v0, 0x0

    const/4 v1, 0x1

    .line 9573
    if-eqz p1, :cond_4

    .line 9574
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_2

    .line 9575
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 9576
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    if-ne v0, p2, :cond_1

    .line 9582
    if-eqz p4, :cond_0

    .line 9583
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9584
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 9589
    :goto_1
    return-object v6

    .line 9586
    :cond_0
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 9587
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_1

    .line 9574
    :cond_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 9592
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_2
    new-instance v6, Lcom/android/server/am/ContentProviderConnection;

    invoke-direct {v6, p2, p1}, Lcom/android/server/am/ContentProviderConnection;-><init>(Lcom/android/server/am/ContentProviderRecord;Lcom/android/server/am/ProcessRecord;)V

    .line 9593
    .restart local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    if-eqz p4, :cond_3

    .line 9594
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9595
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 9600
    :goto_2
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9601
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9602
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v5, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;

    .line 9603
    return-object v6

    .line 9597
    :cond_3
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 9598
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_2

    .line 9605
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v7    # "i":I
    :cond_4
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->addExternalProcessHandleLocked(Landroid/os/IBinder;)V

    .line 9606
    return-object v0
.end method

.method public initPowerManagement()V
    .locals 3

    .prologue
    .line 2540
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->initPowerManagement()V

    .line 2541
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 2542
    const-class v1, Landroid/os/PowerManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManagerInternal;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    .line 2543
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "power"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManager;

    .line 2544
    .local v0, "pm":Landroid/os/PowerManager;
    const-string/jumbo v1, "*voice*"

    const/4 v2, 0x1

    invoke-virtual {v0, v2, v1}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 2545
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 2539
    return-void
.end method

.method public inputDispatchingTimedOut(IZLjava/lang/String;)J
    .locals 8
    .param p1, "pid"    # I
    .param p2, "aboveSystem"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 10894
    const-string/jumbo v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 10896
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10901
    :cond_0
    monitor-enter p0

    .line 10902
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10903
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_2
    monitor-exit v3

    .line 10905
    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result-wide v6

    .local v6, "timeout":J
    monitor-exit p0

    move-object v0, p0

    move-object v3, v2

    move v4, p2

    move-object v5, p3

    .line 10908
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 10909
    const-wide/16 v2, -0x1

    return-wide v2

    .line 10902
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v6    # "timeout":J
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v3

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10901
    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0

    .line 10912
    .restart local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v6    # "timeout":J
    :cond_1
    return-wide v6
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z
    .locals 10
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "reason"    # Ljava/lang/String;

    .prologue
    .line 10922
    const-string/jumbo v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 10924
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10929
    :cond_0
    if-nez p5, :cond_1

    .line 10930
    const-string/jumbo v7, "Input dispatching timed out"

    .line 10935
    .local v7, "annotation":Ljava/lang/String;
    :goto_0
    if-eqz p1, :cond_5

    .line 10936
    monitor-enter p0

    .line 10937
    :try_start_0
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->debugging:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_2

    .line 10938
    const/4 v0, 0x0

    monitor-exit p0

    return v0

    .line 10932
    .end local v7    # "annotation":Ljava/lang/String;
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "Input dispatching timed out ("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string/jumbo v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .restart local v7    # "annotation":Ljava/lang/String;
    goto :goto_0

    .line 10941
    :cond_2
    :try_start_1
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z

    if-eqz v0, :cond_3

    .line 10943
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10944
    const/4 v0, 0x0

    monitor-exit p0

    return v0

    .line 10947
    :cond_3
    :try_start_2
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v0, :cond_4

    .line 10948
    new-instance v8, Landroid/os/Bundle;

    invoke-direct {v8}, Landroid/os/Bundle;-><init>()V

    .line 10949
    .local v8, "info":Landroid/os/Bundle;
    const-string/jumbo v0, "shortMsg"

    const-string/jumbo v1, "keyDispatchingTimedOut"

    invoke-virtual {v8, v0, v1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10950
    const-string/jumbo v0, "longMsg"

    invoke-virtual {v8, v0, v7}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10951
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, v8}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10952
    const/4 v0, 0x1

    monitor-exit p0

    return v0

    .end local v8    # "info":Landroid/os/Bundle;
    :cond_4
    monitor-exit p0

    .line 10955
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 10956
    .local v2, "anrPid":I
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$11;

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, p4

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 10969
    .end local v2    # "anrPid":I
    :cond_5
    const/4 v0, 0x1

    return v0

    .line 10936
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public final installSystemProviders()V
    .locals 7

    .prologue
    .line 10276
    monitor-enter p0

    .line 10277
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    const-string/jumbo v5, "system"

    const/16 v6, 0x3e8

    invoke-virtual {v4, v5, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 10278
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v3

    .line 10279
    .local v3, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v3, :cond_1

    .line 10280
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v1, v4, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    .line 10281
    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 10282
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-nez v4, :cond_0

    .line 10283
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Not installing system proc provider "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 10284
    const-string/jumbo v6, ": not system .apk"

    .line 10283
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10285
    invoke-interface {v3, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10280
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .end local v1    # "i":I
    .end local v2    # "pi":Landroid/content/pm/ProviderInfo;
    :cond_1
    monitor-exit p0

    .line 10290
    if-eqz v3, :cond_2

    .line 10291
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v4, v3}, Landroid/app/ActivityThread;->installSystemProviders(Ljava/util/List;)V

    .line 10294
    :cond_2
    new-instance v4, Lcom/android/server/am/CoreSettingsObserver;

    invoke-direct {v4, p0}, Lcom/android/server/am/CoreSettingsObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 10274
    return-void

    .line 10276
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 2
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    const/4 v0, 0x0

    .line 3343
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x8

    if-eqz v1, :cond_0

    const/4 v0, 0x1

    :cond_0
    return v0
.end method

.method public isAssistDataAllowedOnCurrentActivity()Z
    .locals 8

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v7, 0x0

    .line 10997
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 10998
    .local v2, "userId":I
    monitor-enter p0

    .line 10999
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 11000
    .local v0, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 11001
    return v4

    .line 11003
    :cond_0
    :try_start_1
    iget v2, v0, Lcom/android/server/am/ActivityRecord;->userId:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 11005
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 11006
    const-string/jumbo v6, "device_policy"

    .line 11005
    invoke-virtual {v5, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/admin/DevicePolicyManager;

    .line 11007
    .local v1, "dpm":Landroid/app/admin/DevicePolicyManager;
    if-eqz v1, :cond_1

    invoke-virtual {v1, v7, v2}, Landroid/app/admin/DevicePolicyManager;->getScreenCaptureDisabled(Landroid/content/ComponentName;I)Z

    move-result v5

    if-eqz v5, :cond_1

    move v3, v4

    :cond_1
    return v3

    .line 10998
    .end local v0    # "activity":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "dpm":Landroid/app/admin/DevicePolicyManager;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public isBackgroundVisibleBehind(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 11288
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11290
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11291
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    .line 11292
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v2, :cond_0

    const/4 v3, 0x0

    :goto_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11298
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11295
    return v3

    .line 11292
    :cond_0
    :try_start_3
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->hasVisibleBehindActivity()Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v3

    .local v3, "visible":Z
    goto :goto_0

    .line 11290
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v3    # "visible":Z
    :catchall_0
    move-exception v4

    :try_start_4
    monitor-exit p0

    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11297
    :catchall_1
    move-exception v4

    .line 11298
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11297
    throw v4
.end method

.method public isImmersive(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 11339
    monitor-enter p0

    .line 11340
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 11341
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 11342
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11339
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 11344
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    return v1
.end method

.method public isInHomeStack(I)Z
    .locals 6
    .param p1, "taskId"    # I

    .prologue
    const/4 v3, 0x0

    .line 9197
    const-string/jumbo v4, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9198
    const-string/jumbo v5, "getStackInfo()"

    .line 9197
    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9199
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9201
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9202
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 9203
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v4, :cond_0

    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v3

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9206
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9203
    return v3

    .line 9201
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9205
    :catchall_1
    move-exception v3

    .line 9206
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9205
    throw v3
.end method

.method public isInLockTaskMode()Z
    .locals 2

    .prologue
    const/4 v0, 0x0

    .line 9376
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getLockTaskModeState()I

    move-result v1

    if-eqz v1, :cond_0

    const/4 v0, 0x1

    :cond_0
    return v0
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v5, 0x0

    .line 7020
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 7021
    return v5

    .line 7024
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 7025
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v4, 0x2

    if-ne v3, v4, :cond_1

    .line 7026
    const/4 v3, 0x1

    return v3

    .line 7028
    :cond_1
    return v5

    .line 7029
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 7031
    .local v1, "e":Ljava/lang/ClassCastException;
    return v5
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 7
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v6, 0x0

    .line 6998
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 6999
    return v6

    .line 7002
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v4, v0

    .line 7003
    .local v4, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, v4, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-nez v5, :cond_1

    .line 7004
    return v6

    .line 7006
    :cond_1
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget-object v5, v4, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v5, v5

    if-ge v2, v5, :cond_3

    .line 7007
    iget-object v5, v4, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    aget-object v3, v5, v2

    .line 7008
    .local v3, "intent":Landroid/content/Intent;
    invoke-virtual {v3}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_2

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    if-eqz v5, :cond_2

    .line 7009
    return v6

    .line 7006
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 7012
    .end local v3    # "intent":Landroid/content/Intent;
    :cond_3
    const/4 v5, 0x1

    return v5

    .line 7013
    .end local v2    # "i":I
    .end local v4    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v1

    .line 7015
    .local v1, "e":Ljava/lang/ClassCastException;
    return v6
.end method

.method isNextTransitionForward()Z
    .locals 3

    .prologue
    const/4 v1, 0x1

    .line 3180
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->getPendingAppTransition()I

    move-result v0

    .line 3181
    .local v0, "transit":I
    const/4 v2, 0x6

    if-eq v0, v2, :cond_0

    .line 3182
    const/16 v2, 0x8

    if-ne v0, v2, :cond_1

    .line 3181
    :cond_0
    :goto_0
    return v1

    .line 3183
    :cond_1
    const/16 v2, 0xa

    if-eq v0, v2, :cond_0

    const/4 v1, 0x0

    goto :goto_0
.end method

.method isPendingBroadcastProcessLocked(I)Z
    .locals 1
    .param p1, "pid"    # I

    .prologue
    .line 16426
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 16427
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    .line 16426
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x1

    goto :goto_0
.end method

.method public isRootVoiceInteraction(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6792
    monitor-enter p0

    .line 6793
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 6794
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6795
    const/4 v1, 0x0

    monitor-exit p0

    return v1

    .line 6797
    :cond_0
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->rootVoiceInteraction:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    return v1

    .line 6792
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 6
    .param p1, "componentProcessName"    # Ljava/lang/String;
    .param p2, "aInfo"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "className"    # Ljava/lang/String;
    .param p4, "flags"    # I

    .prologue
    const/high16 v5, 0x40000000    # 2.0f

    .line 16166
    const/4 v2, 0x0

    .line 16168
    .local v2, "result":Z
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x2710

    if-lt v3, v4, :cond_2

    .line 16169
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 16171
    const-string/jumbo v3, "android.permission.INTERACT_ACROSS_USERS"

    .line 16172
    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16170
    invoke-static {v3, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_0

    .line 16173
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {v0, v3, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16174
    .local v0, "comp":Landroid/content/ComponentName;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Permission Denial: Component "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v0}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 16175
    const-string/jumbo v4, " requests FLAG_SINGLE_USER, but app does not hold "

    .line 16174
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 16176
    const-string/jumbo v4, "android.permission.INTERACT_ACROSS_USERS"

    .line 16174
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 16177
    .local v1, "msg":Ljava/lang/String;
    const-string/jumbo v3, "ActivityManager"

    invoke-static {v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16178
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 16181
    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v2, 0x1

    .line 16193
    :cond_1
    :goto_0
    return v2

    .line 16183
    :cond_2
    const-string/jumbo v3, "system"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 16184
    const/4 v2, 0x1

    goto :goto_0

    .line 16185
    :cond_3
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 16187
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v4, 0x3e9

    invoke-static {v3, v4}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v3

    if-nez v3, :cond_4

    .line 16188
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x8

    if-eqz v3, :cond_5

    const/4 v2, 0x1

    goto :goto_0

    .line 16187
    :cond_4
    const/4 v2, 0x1

    goto :goto_0

    .line 16188
    :cond_5
    const/4 v2, 0x0

    goto :goto_0
.end method

.method public isSleeping()Z
    .locals 1

    .prologue
    .line 10504
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method public isSleepingOrShuttingDown()Z
    .locals 1

    .prologue
    .line 10500
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v0

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x1

    goto :goto_0
.end method

.method public isTopActivityImmersive()Z
    .locals 3

    .prologue
    .line 11349
    const-string/jumbo v1, "startActivity"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11350
    monitor-enter p0

    .line 11351
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 11352
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 11350
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 11358
    monitor-enter p0

    .line 11359
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 11360
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 11361
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11358
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 11363
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v1

    if-ne v1, v0, :cond_1

    const/4 v1, 0x1

    :goto_0
    monitor-exit p0

    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public isUserAMonkey()Z
    .locals 2

    .prologue
    const/4 v0, 0x1

    .line 10869
    monitor-enter p0

    .line 10871
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v1, :cond_1

    :cond_0
    :goto_0
    monitor-exit p0

    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 10869
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public isUserRunning(IZ)Z
    .locals 3
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    .line 20791
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 20793
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20794
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 20793
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20795
    const-string/jumbo v2, ", uid="

    .line 20793
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20795
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 20793
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20796
    const-string/jumbo v2, " requires "

    .line 20793
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20796
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS"

    .line 20793
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20797
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20798
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20800
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 20801
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 20800
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method isUserRunningLocked(IZ)Z
    .locals 5
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 20806
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UserState;

    .line 20807
    .local v0, "state":Lcom/android/server/am/UserState;
    if-nez v0, :cond_0

    .line 20808
    return v2

    .line 20810
    :cond_0
    if-eqz p2, :cond_1

    .line 20811
    return v1

    .line 20813
    :cond_1
    iget v3, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v4, 0x2

    if-eq v3, v4, :cond_3

    .line 20814
    iget v3, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v4, 0x3

    if-eq v3, v4, :cond_2

    .line 20813
    :goto_0
    return v1

    :cond_2
    move v1, v2

    .line 20814
    goto :goto_0

    :cond_3
    move v1, v2

    .line 20813
    goto :goto_0
.end method

.method isValidSingletonCall(II)Z
    .locals 4
    .param p1, "callingUid"    # I
    .param p2, "componentUid"    # I

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 16203
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 16204
    .local v0, "componentAppId":I
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v3

    if-nez v3, :cond_0

    .line 16205
    const/16 v3, 0x3e8

    if-ne v0, v3, :cond_1

    .line 16204
    :cond_0
    :goto_0
    return v1

    .line 16206
    :cond_1
    const/16 v3, 0x3e9

    if-eq v0, v3, :cond_0

    .line 16207
    const-string/jumbo v3, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v3, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_0

    move v1, v2

    goto :goto_0
.end method

.method public keyguardGoingAway(ZZZ)V
    .locals 4
    .param p1, "disableWindowAnimations"    # Z
    .param p2, "keyguardGoingToNotificationShade"    # Z
    .param p3, "keyguardShowingMedia"    # Z

    .prologue
    .line 6477
    const-string/jumbo v2, "keyguardGoingAway"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6478
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6480
    .local v0, "token":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6482
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->keyguardGoingAway(ZZZ)V

    .line 6485
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 6486
    const/4 v2, 0x0

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 6487
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6491
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6476
    return-void

    .line 6480
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6490
    :catchall_1
    move-exception v2

    .line 6491
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6490
    throw v2
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 4

    .prologue
    .line 6457
    const-string/jumbo v2, "keyguardWaitingForActivityDrawn"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6458
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6460
    .local v0, "token":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6462
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->keyguardWaitingForActivityDrawn()V

    .line 6463
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 6464
    const/4 v2, 0x1

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 6465
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6469
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6456
    return-void

    .line 6460
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6468
    :catchall_1
    move-exception v2

    .line 6469
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6468
    throw v2
.end method

.method public killAllBackgroundProcesses()V
    .locals 22

    .prologue
    .line 5395
    const-string/jumbo v18, "android.permission.KILL_BACKGROUND_PROCESSES"

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v18

    if-eqz v18, :cond_0

    .line 5397
    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v19, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    .line 5398
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v19

    .line 5397
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    .line 5399
    const-string/jumbo v19, ", uid="

    .line 5397
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    .line 5399
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    .line 5397
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    .line 5400
    const-string/jumbo v19, " requires "

    .line 5397
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    .line 5400
    const-string/jumbo v19, "android.permission.KILL_BACKGROUND_PROCESSES"

    .line 5397
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    .line 5401
    .local v16, "msg":Ljava/lang/String;
    const-string/jumbo v18, "ActivityManager"

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5402
    new-instance v18, Ljava/lang/SecurityException;

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v18

    .line 5405
    .end local v16    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 5407
    .local v12, "callingId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5408
    :try_start_1
    new-instance v17, Ljava/util/ArrayList;

    invoke-direct/range {v17 .. v17}, Ljava/util/ArrayList;-><init>()V

    .line 5409
    .local v17, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Landroid/util/ArrayMap;->size()I

    move-result v8

    .line 5410
    .local v8, "NP":I
    const/4 v15, 0x0

    .local v15, "ip":I
    :goto_0
    if-ge v15, v8, :cond_5

    .line 5411
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v18

    move-object/from16 v0, v18

    invoke-virtual {v0, v15}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 5412
    .local v10, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 5413
    .local v7, "NA":I
    const/4 v14, 0x0

    .local v14, "ia":I
    :goto_1
    if-ge v14, v7, :cond_4

    .line 5414
    invoke-virtual {v10, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 5415
    .local v9, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v18, v0

    if-eqz v18, :cond_2

    .line 5413
    :cond_1
    :goto_2
    add-int/lit8 v14, v14, 0x1

    goto :goto_1

    .line 5419
    :cond_2
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    move/from16 v18, v0

    if-eqz v18, :cond_3

    .line 5420
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 5407
    .end local v7    # "NA":I
    .end local v8    # "NP":I
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "ia":I
    .end local v15    # "ip":I
    .end local v17    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v18

    :try_start_2
    monitor-exit p0

    throw v18
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5436
    :catchall_1
    move-exception v18

    .line 5437
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5436
    throw v18

    .line 5421
    .restart local v7    # "NA":I
    .restart local v8    # "NP":I
    .restart local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v14    # "ia":I
    .restart local v15    # "ip":I
    .restart local v17    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    :try_start_3
    iget v0, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v18, v0

    const/16 v19, 0x9

    move/from16 v0, v18

    move/from16 v1, v19

    if-lt v0, v1, :cond_1

    .line 5422
    const/16 v18, 0x1

    move/from16 v0, v18

    iput-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 5423
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5410
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_4
    add-int/lit8 v15, v15, 0x1

    goto :goto_0

    .line 5428
    .end local v7    # "NA":I
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "ia":I
    :cond_5
    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 5429
    .local v6, "N":I
    const/4 v11, 0x0

    .local v11, "i":I
    :goto_3
    if-ge v11, v6, :cond_6

    .line 5430
    move-object/from16 v0, v17

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v19, "kill all background"

    const/16 v20, 0x0

    const/16 v21, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    move/from16 v2, v20

    move/from16 v3, v21

    move-object/from16 v4, v19

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 5429
    add-int/lit8 v11, v11, 0x1

    goto :goto_3

    .line 5432
    :cond_6
    const/16 v18, 0x1

    move/from16 v0, v18

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 5433
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 5434
    const/16 v18, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5437
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5394
    return-void
.end method

.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "fromDialog"    # Landroid/app/Dialog;

    .prologue
    .line 12185
    monitor-enter p0

    .line 12186
    const/4 v0, 0x0

    :try_start_0
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 12187
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12188
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 12189
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12190
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_0

    .line 12191
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 12193
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_1

    .line 12194
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 12196
    :cond_1
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_2

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v0, v1, :cond_2

    .line 12197
    const-string/jumbo v2, "user-terminated"

    .line 12198
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    .line 12197
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 12199
    const-string/jumbo v0, "user request after error"

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_2
    monitor-exit p0

    .line 12184
    return-void

    .line 12185
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 6
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    .line 5642
    if-nez p1, :cond_0

    .line 5643
    return-void

    .line 5646
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5648
    .local v1, "callerUid":I
    const/16 v3, 0x3e8

    if-ne v1, v3, :cond_2

    .line 5649
    monitor-enter p0

    .line 5650
    const/4 v3, 0x1

    :try_start_0
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 5651
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v3, :cond_1

    .line 5653
    :try_start_1
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_0
    monitor-exit p0

    .line 5641
    return-void

    .line 5658
    :cond_1
    :try_start_2
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Process/uid not found attempting kill of "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 5659
    const-string/jumbo v5, " / "

    .line 5658
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 5649
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3

    .line 5663
    :cond_2
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " cannot kill app process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 5654
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public killApplicationWithAppId(Ljava/lang/String;ILjava/lang/String;)V
    .locals 6
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "appid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v5, 0x0

    .line 5514
    if-nez p1, :cond_0

    .line 5515
    return-void

    .line 5518
    :cond_0
    if-gez p2, :cond_1

    .line 5519
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Invalid appid specified for pkg : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5520
    return-void

    .line 5522
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5524
    .local v1, "callerUid":I
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x3e8

    if-ne v3, v4, :cond_2

    .line 5526
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x16

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 5527
    .local v2, "msg":Landroid/os/Message;
    iput p2, v2, Landroid/os/Message;->arg1:I

    .line 5528
    iput v5, v2, Landroid/os/Message;->arg2:I

    .line 5529
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 5530
    .local v0, "bundle":Landroid/os/Bundle;
    const-string/jumbo v3, "pkg"

    invoke-virtual {v0, v3, p1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 5531
    const-string/jumbo v3, "reason"

    invoke-virtual {v0, v3, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 5532
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5533
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5513
    return-void

    .line 5535
    .end local v0    # "bundle":Landroid/os/Bundle;
    .end local v2    # "msg":Landroid/os/Message;
    :cond_2
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " cannot kill pkg: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 17
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 5358
    const-string/jumbo v2, "android.permission.KILL_BACKGROUND_PROCESSES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 5360
    const-string/jumbo v2, "android.permission.RESTART_PACKAGES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 5362
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5363
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 5362
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5364
    const-string/jumbo v3, ", uid="

    .line 5362
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5364
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 5362
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5365
    const-string/jumbo v3, " requires "

    .line 5362
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5365
    const-string/jumbo v3, "android.permission.KILL_BACKGROUND_PROCESSES"

    .line 5362
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    .line 5366
    .local v15, "msg":Ljava/lang/String;
    const-string/jumbo v2, "ActivityManager"

    invoke-static {v2, v15}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5367
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v15}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5370
    .end local v15    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 5371
    const-string/jumbo v8, "killBackgroundProcesses"

    const/4 v6, 0x1

    const/4 v7, 0x2

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p2

    .line 5370
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 5372
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 5374
    .local v12, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v16

    .line 5375
    .local v16, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5376
    const/4 v4, -0x1

    .line 5378
    .local v4, "appId":I
    const/4 v2, 0x0

    :try_start_1
    move-object/from16 v0, v16

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v4

    .line 5381
    :goto_0
    const/4 v2, -0x1

    if-ne v4, v2, :cond_1

    .line 5382
    :try_start_2
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Invalid packageName: "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 5389
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5383
    return-void

    .line 5386
    :cond_1
    :try_start_4
    const-string/jumbo v11, "kill background"

    const/4 v6, 0x5

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move/from16 v5, p2

    .line 5385
    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 5389
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5357
    return-void

    .line 5375
    :catchall_0
    move-exception v2

    :try_start_6
    monitor-exit p0

    throw v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 5388
    .end local v4    # "appId":I
    .end local v16    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v2

    .line 5389
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5388
    throw v2

    .line 5379
    .restart local v4    # "appId":I
    .restart local v16    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v14

    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 12
    .param p1, "pids"    # [I
    .param p2, "pReason"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 11446
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    const/16 v9, 0x3e8

    if-eq v8, v9, :cond_0

    .line 11447
    new-instance v8, Ljava/lang/SecurityException;

    const-string/jumbo v9, "killPids only available to the system"

    invoke-direct {v8, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v8

    .line 11449
    :cond_0
    if-nez p2, :cond_2

    const-string/jumbo v4, "Unknown"

    .line 11453
    .local v4, "reason":Ljava/lang/String;
    :goto_0
    const/4 v2, 0x0

    .line 11454
    .local v2, "killed":Z
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v9

    .line 11455
    :try_start_0
    array-length v8, p1

    new-array v6, v8, [I

    .line 11456
    .local v6, "types":[I
    const/4 v7, 0x0

    .line 11457
    .local v7, "worstType":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    array-length v8, p1

    if-ge v1, v8, :cond_3

    .line 11458
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 11459
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_1

    .line 11460
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 11461
    .local v5, "type":I
    aput v5, v6, v1

    .line 11462
    if-le v5, v7, :cond_1

    .line 11463
    move v7, v5

    .line 11457
    .end local v5    # "type":I
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 11449
    .end local v1    # "i":I
    .end local v2    # "killed":Z
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "reason":Ljava/lang/String;
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :cond_2
    move-object v4, p2

    .restart local v4    # "reason":Ljava/lang/String;
    goto :goto_0

    .line 11470
    .restart local v1    # "i":I
    .restart local v2    # "killed":Z
    .restart local v6    # "types":[I
    .restart local v7    # "worstType":I
    :cond_3
    const/16 v8, 0xf

    if-ge v7, v8, :cond_4

    .line 11471
    const/16 v8, 0x9

    if-le v7, v8, :cond_4

    .line 11472
    const/16 v7, 0x9

    .line 11477
    :cond_4
    if-nez p3, :cond_5

    const/4 v8, 0x5

    if-ge v7, v8, :cond_5

    .line 11478
    const/4 v7, 0x5

    .line 11481
    :cond_5
    const-string/jumbo v8, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Killing processes "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v11, " at adjustment "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11482
    const/4 v1, 0x0

    :goto_2
    array-length v8, p1

    if-ge v1, v8, :cond_8

    .line 11483
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 11484
    .restart local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_7

    .line 11482
    :cond_6
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 11487
    :cond_7
    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 11488
    .local v0, "adj":I
    if-lt v0, v7, :cond_6

    iget-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v8, :cond_6

    .line 11489
    const/4 v8, 0x1

    invoke-virtual {v3, v4, v8}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11490
    const/4 v2, 0x1

    goto :goto_3

    .end local v0    # "adj":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_8
    monitor-exit v9

    .line 11494
    return v2

    .line 11454
    .end local v1    # "i":I
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :catchall_0
    move-exception v8

    monitor-exit v9

    throw v8
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 11514
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 11515
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "killProcessesBelowForeground() only available to system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11518
    :cond_0
    const/4 v0, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public killUid(IILjava/lang/String;)V
    .locals 12
    .param p1, "appId"    # I
    .param p2, "userId"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 11499
    const-string/jumbo v0, "android.permission.KILL_UID"

    const-string/jumbo v1, "killUid"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11500
    monitor-enter p0

    .line 11501
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v10

    .line 11505
    .local v10, "identity":J
    if-eqz p3, :cond_0

    move-object v9, p3

    .line 11503
    :goto_0
    const/4 v1, 0x0

    .line 11504
    const/16 v4, -0xc

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x1

    move-object v0, p0

    move v2, p1

    move v3, p2

    .line 11503
    :try_start_1
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11507
    :try_start_2
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 11498
    return-void

    .line 11505
    :cond_0
    :try_start_3
    const-string/jumbo v9, "kill uid"
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 11506
    :catchall_0
    move-exception v0

    .line 11507
    :try_start_4
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11506
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11500
    .end local v10    # "identity":J
    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public launchAssistIntent(Landroid/content/Intent;ILjava/lang/String;ILandroid/os/Bundle;)Z
    .locals 10
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "requestType"    # I
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "userHandle"    # I
    .param p5, "args"    # Landroid/os/Bundle;

    .prologue
    const/4 v4, 0x0

    .line 11176
    const-wide/16 v8, 0x1f4

    move-object v0, p0

    move v1, p2

    move-object v2, p1

    move-object v3, p3

    move-object v5, v4

    move v6, p4

    move-object v7, p5

    .line 11175
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method final logAppTooSlow(Lcom/android/server/am/ProcessRecord;JLjava/lang/String;)V
    .locals 0
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "startTime"    # J
    .param p4, "msg"    # Ljava/lang/String;

    .prologue
    .line 5002
    return-void
.end method

.method logLockScreen(Ljava/lang/String;)V
    .locals 0
    .param p1, "msg"    # Ljava/lang/String;

    .prologue
    .line 10647
    return-void
.end method

.method matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;

    .prologue
    .line 9558
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v4

    .line 9559
    .local v4, "uriAuth":Ljava/lang/String;
    iget-object v0, p2, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    .line 9560
    .local v0, "cpiAuth":Ljava/lang/String;
    const/16 v5, 0x3b

    invoke-virtual {v0, v5}, Ljava/lang/String;->indexOf(I)I

    move-result v5

    const/4 v6, -0x1

    if-ne v5, v6, :cond_0

    .line 9561
    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    return v5

    .line 9563
    :cond_0
    const-string/jumbo v5, ";"

    invoke-virtual {v0, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 9564
    .local v1, "cpiAuths":[Ljava/lang/String;
    array-length v3, v1

    .line 9565
    .local v3, "length":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v3, :cond_2

    .line 9566
    aget-object v5, v1, v2

    invoke-virtual {v5, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    const/4 v5, 0x1

    return v5

    .line 9565
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 9568
    :cond_2
    const/4 v5, 0x0

    return v5
.end method

.method public monitor()V
    .locals 0

    .prologue
    .line 20071
    monitor-enter p0

    monitor-exit p0

    .line 20070
    return-void
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "nonRoot"    # Z

    .prologue
    const/4 v5, 0x0

    .line 9039
    const-string/jumbo v4, "moveActivityTaskToBack"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9040
    monitor-enter p0

    .line 9041
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 9043
    .local v0, "origId":J
    if-eqz p2, :cond_0

    move v4, v5

    :goto_0
    :try_start_1
    invoke-static {p1, v4}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result v3

    .line 9044
    .local v3, "taskId":I
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 9045
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v2, :cond_2

    .line 9046
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStackSupervisor;->isLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 9047
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9053
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 9048
    return v5

    .line 9043
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    .end local v3    # "taskId":I
    :cond_0
    const/4 v4, 0x1

    goto :goto_0

    .line 9050
    .restart local v2    # "task":Lcom/android/server/am/TaskRecord;
    .restart local v3    # "taskId":I
    :cond_1
    :try_start_3
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(I)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v4

    .line 9053
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 9050
    return v4

    .line 9053
    :cond_2
    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    monitor-exit p0

    .line 9056
    return v5

    .line 9052
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    .end local v3    # "taskId":I
    :catchall_0
    move-exception v4

    .line 9053
    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9052
    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 9040
    .end local v0    # "origId":J
    :catchall_1
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public moveTaskBackwards(I)V
    .locals 8
    .param p1, "task"    # I

    .prologue
    .line 9061
    const-string/jumbo v0, "android.permission.REORDER_TASKS"

    .line 9062
    const-string/jumbo v1, "moveTaskBackwards()"

    .line 9061
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9064
    monitor-enter p0

    .line 9065
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 9066
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string/jumbo v5, "Task backwards"

    const/4 v3, -0x1

    const/4 v4, -0x1

    move-object v0, p0

    .line 9065
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    if-nez v0, :cond_0

    monitor-exit p0

    .line 9067
    return-void

    .line 9069
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9070
    .local v6, "origId":J
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->moveTaskBackwardsLocked(I)V

    .line 9071
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 9060
    return-void

    .line 9064
    .end local v6    # "origId":J
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public moveTaskToFront(IILandroid/os/Bundle;)V
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    .line 8991
    const-string/jumbo v0, "android.permission.REORDER_TASKS"

    const-string/jumbo v1, "moveTaskToFront()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8994
    monitor-enter p0

    .line 8995
    :try_start_0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 8990
    return-void

    .line 8994
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method moveTaskToFrontLocked(IILandroid/os/Bundle;)V
    .locals 10
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    const/4 v3, -0x1

    .line 9000
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 9001
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string/jumbo v5, "Task to front"

    move-object v0, p0

    move v4, v3

    .line 9000
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 9002
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 9003
    return-void

    .line 9005
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9007
    .local v6, "origId":J
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v9

    .line 9008
    .local v9, "task":Lcom/android/server/am/TaskRecord;
    if-nez v9, :cond_1

    .line 9009
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Could not find task for id: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9023
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9010
    return-void

    .line 9012
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityStackSupervisor;->isLockTaskModeViolation(Lcom/android/server/am/TaskRecord;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 9013
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 9014
    const-string/jumbo v0, "ActivityManager"

    const-string/jumbo v1, "moveTaskToFront: Attempt to violate Lock Task Mode"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9023
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9015
    return-void

    .line 9017
    :cond_2
    :try_start_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v8

    .line 9018
    .local v8, "prev":Lcom/android/server/am/ActivityRecord;
    if-eqz v8, :cond_3

    invoke-virtual {v8}, Lcom/android/server/am/ActivityRecord;->isRecentsActivity()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 9019
    const/4 v0, 0x2

    invoke-virtual {v9, v0}, Lcom/android/server/am/TaskRecord;->setTaskToReturnTo(I)V

    .line 9021
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v1, "moveTaskToFront"

    invoke-virtual {v0, v9, p2, p3, v1}, Lcom/android/server/am/ActivityStackSupervisor;->findTaskToMoveToFrontLocked(Lcom/android/server/am/TaskRecord;ILandroid/os/Bundle;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9023
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9025
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 8999
    return-void

    .line 9022
    .end local v8    # "prev":Lcom/android/server/am/ActivityRecord;
    .end local v9    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    .line 9023
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9022
    throw v0
.end method

.method public moveTaskToStack(IIZ)V
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 9135
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9136
    const-string/jumbo v3, "moveTaskToStack()"

    .line 9135
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9137
    if-nez p2, :cond_0

    .line 9138
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "moveTaskToStack: Attempt to move task "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " to home stack"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 9139
    new-instance v4, Ljava/lang/RuntimeException;

    const-string/jumbo v5, "here"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v4

    .line 9138
    invoke-static {v2, v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9141
    :cond_0
    monitor-enter p0

    .line 9142
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 9146
    .local v0, "ident":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->moveTaskToStackLocked(IIZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9148
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 9134
    return-void

    .line 9147
    :catchall_0
    move-exception v2

    .line 9148
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9147
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9141
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method moveUserToForeground(Lcom/android/server/am/UserState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 20460
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->switchUserLocked(ILcom/android/server/am/UserState;)Z

    move-result v0

    .line 20461
    .local v0, "homeInFront":Z
    if-eqz v0, :cond_0

    .line 20462
    const-string/jumbo v1, "moveUserToFroreground"

    invoke-virtual {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 20466
    :goto_0
    invoke-static {p3}, Lcom/android/server/am/EventLogTags;->writeAmSwitchUser(I)V

    .line 20467
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v1

    invoke-virtual {v1, p3}, Lcom/android/server/pm/UserManagerService;->onUserForeground(I)V

    .line 20468
    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V

    .line 20459
    return-void

    .line 20464
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    goto :goto_0
.end method

.method public navigateUpTo(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destIntent"    # Landroid/content/Intent;
    .param p3, "resultCode"    # I
    .param p4, "resultData"    # Landroid/content/Intent;

    .prologue
    .line 17770
    monitor-enter p0

    .line 17771
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 17772
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 17773
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->navigateUpToLocked(Lcom/android/server/am/ActivityRecord;Landroid/content/Intent;ILandroid/content/Intent;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 17775
    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    return v1

    .line 17770
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method final newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "isolatedUid"    # I

    .prologue
    const/4 v9, 0x0

    const v8, 0x182b8

    .line 10367
    if-eqz p2, :cond_5

    move-object v0, p2

    .line 10368
    .local v0, "proc":Ljava/lang/String;
    :goto_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 10369
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    iget v6, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 10370
    .local v5, "userId":I
    iget v4, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 10371
    .local v4, "uid":I
    if-eqz p3, :cond_3

    .line 10372
    if-nez p4, :cond_7

    .line 10373
    const/16 v3, 0x3e8

    .line 10375
    .local v3, "stepsLeft":I
    :cond_0
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    if-lt v6, v8, :cond_1

    .line 10376
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    const v7, 0x1869f

    if-le v6, v7, :cond_2

    .line 10377
    :cond_1
    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 10379
    :cond_2
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    invoke-static {v5, v6}, Landroid/os/UserHandle;->getUid(II)I

    move-result v4

    .line 10380
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    add-int/lit8 v6, v6, 0x1

    iput v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 10381
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_6

    .line 10396
    .end local v3    # "stepsLeft":I
    :cond_3
    :goto_1
    new-instance v1, Lcom/android/server/am/ProcessRecord;

    invoke-direct {v1, v2, p1, v0, v4}, Lcom/android/server/am/ProcessRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)V

    .line 10397
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-boolean v6, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-nez v6, :cond_4

    iget-boolean v6, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    if-eqz v6, :cond_8

    .line 10402
    :cond_4
    :goto_2
    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 10403
    return-object v1

    .line 10367
    .end local v0    # "proc":Ljava/lang/String;
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v4    # "uid":I
    .end local v5    # "userId":I
    :cond_5
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .restart local v0    # "proc":Ljava/lang/String;
    goto :goto_0

    .line 10385
    .restart local v2    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v3    # "stepsLeft":I
    .restart local v4    # "uid":I
    .restart local v5    # "userId":I
    :cond_6
    add-int/lit8 v3, v3, -0x1

    .line 10386
    if-gtz v3, :cond_0

    .line 10387
    return-object v9

    .line 10393
    .end local v3    # "stepsLeft":I
    :cond_7
    move v4, p4

    goto :goto_1

    .line 10398
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_8
    if-nez v5, :cond_4

    .line 10399
    iget v6, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v6, v6, 0x9

    const/16 v7, 0x9

    if-ne v6, v7, :cond_4

    .line 10400
    const/4 v6, 0x1

    iput-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    goto :goto_2
.end method

.method public newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "name"    # Ljava/lang/String;

    .prologue
    .line 8073
    const-string/jumbo v1, "newUriPermissionOwner"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8074
    monitor-enter p0

    .line 8075
    :try_start_0
    new-instance v0, Lcom/android/server/am/UriPermissionOwner;

    invoke-direct {v0, p0, p1}, Lcom/android/server/am/UriPermissionOwner;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Object;)V

    .line 8076
    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    invoke-virtual {v0}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    monitor-exit p0

    return-object v1

    .line 8074
    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public noteAlarmFinish(Landroid/content/IIntentSender;ILjava/lang/String;)V
    .locals 5
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "tag"    # Ljava/lang/String;

    .prologue
    .line 11432
    instance-of v4, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v4, :cond_0

    .line 11433
    return-void

    :cond_0
    move-object v1, p1

    .line 11435
    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    .line 11436
    .local v1, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 11437
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v2

    .line 11438
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 11439
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11440
    .local v0, "MY_UID":I
    iget v4, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v4, v0, :cond_1

    const/16 v3, 0x3e8

    .line 11441
    .local v3, "uid":I
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-ltz p2, :cond_2

    .end local p2    # "sourceUid":I
    :goto_1
    invoke-virtual {v4, p3, p2}, Lcom/android/server/am/BatteryStatsService;->noteAlarmFinish(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v2

    .line 11431
    return-void

    .line 11440
    .end local v3    # "uid":I
    .restart local p2    # "sourceUid":I
    :cond_1
    :try_start_1
    iget v3, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .restart local v3    # "uid":I
    goto :goto_0

    :cond_2
    move p2, v3

    .line 11441
    goto :goto_1

    .line 11437
    .end local v0    # "MY_UID":I
    .end local v3    # "uid":I
    .end local p2    # "sourceUid":I
    :catchall_0
    move-exception v4

    monitor-exit v2

    throw v4
.end method

.method public noteAlarmStart(Landroid/content/IIntentSender;ILjava/lang/String;)V
    .locals 5
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "tag"    # Ljava/lang/String;

    .prologue
    .line 11418
    instance-of v4, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v4, :cond_0

    .line 11419
    return-void

    :cond_0
    move-object v1, p1

    .line 11421
    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    .line 11422
    .local v1, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 11423
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v2

    .line 11424
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 11425
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11426
    .local v0, "MY_UID":I
    iget v4, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v4, v0, :cond_1

    const/16 v3, 0x3e8

    .line 11427
    .local v3, "uid":I
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-ltz p2, :cond_2

    .end local p2    # "sourceUid":I
    :goto_1
    invoke-virtual {v4, p3, p2}, Lcom/android/server/am/BatteryStatsService;->noteAlarmStart(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v2

    .line 11417
    return-void

    .line 11426
    .end local v3    # "uid":I
    .restart local p2    # "sourceUid":I
    :cond_1
    :try_start_1
    iget v3, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .restart local v3    # "uid":I
    goto :goto_0

    :cond_2
    move p2, v3

    .line 11427
    goto :goto_1

    .line 11423
    .end local v0    # "MY_UID":I
    .end local v3    # "uid":I
    .end local p2    # "sourceUid":I
    :catchall_0
    move-exception v4

    monitor-exit v2

    throw v4
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;ILjava/lang/String;Ljava/lang/String;)V
    .locals 6
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "sourcePkg"    # Ljava/lang/String;
    .param p4, "tag"    # Ljava/lang/String;

    .prologue
    .line 11399
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 11400
    return-void

    :cond_0
    move-object v2, p1

    .line 11402
    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 11403
    .local v2, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v3

    .line 11404
    .local v3, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v3

    .line 11405
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->isOnBattery()Z

    move-result v5

    if-eqz v5, :cond_1

    .line 11406
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 11407
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11408
    .local v0, "MY_UID":I
    iget v5, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v5, v0, :cond_2

    const/16 v4, 0x3e8

    .line 11410
    .local v4, "uid":I
    :goto_0
    if-ltz p2, :cond_3

    .line 11411
    .end local p2    # "sourceUid":I
    :goto_1
    if-eqz p3, :cond_4

    .line 11410
    .end local p3    # "sourcePkg":Ljava/lang/String;
    :goto_2
    invoke-virtual {v3, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    .line 11412
    .local v1, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v1, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v0    # "MY_UID":I
    .end local v1    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v4    # "uid":I
    :cond_1
    monitor-exit v3

    .line 11398
    return-void

    .line 11408
    .restart local v0    # "MY_UID":I
    .restart local p2    # "sourceUid":I
    .restart local p3    # "sourcePkg":Ljava/lang/String;
    :cond_2
    :try_start_1
    iget v4, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    .restart local v4    # "uid":I
    goto :goto_0

    :cond_3
    move p2, v4

    .line 11410
    goto :goto_1

    .line 11411
    .end local p2    # "sourceUid":I
    :cond_4
    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p3, v5, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 11404
    .end local v0    # "MY_UID":I
    .end local v4    # "uid":I
    .end local p3    # "sourcePkg":Ljava/lang/String;
    :catchall_0
    move-exception v5

    monitor-exit v3

    throw v5
.end method

.method public notifyActivityDrawn(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 2848
    monitor-enter p0

    .line 2849
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 2850
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 2851
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStack;->notifyActivityDrawnLocked(Lcom/android/server/am/ActivityRecord;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 2846
    return-void

    .line 2848
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public notifyCleartextNetwork(I[B)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "firstPacket"    # [B

    .prologue
    .line 10591
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x32

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, v2, p2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 10590
    return-void
.end method

.method public final notifyEnterAnimationComplete(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6729
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x2c

    invoke-virtual {v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6728
    return-void
.end method

.method public final notifyLaunchTaskBehindComplete(Landroid/os/IBinder;)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6724
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleLaunchTaskBehindComplete(Landroid/os/IBinder;)V

    .line 6723
    return-void
.end method

.method notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 1
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;
    .param p2, "flush"    # Z

    .prologue
    .line 10575
    if-eqz p1, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v0, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 10577
    return-void

    .line 10579
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/TaskPersister;->wakeup(Lcom/android/server/am/TaskRecord;Z)V

    .line 10574
    return-void
.end method

.method notifyTaskStackChangedLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x31

    .line 10584
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 10585
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 10586
    .local v0, "nmsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x3e8

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 10583
    return-void
.end method

.method onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 4
    .param p1, "settings"    # Landroid/os/Bundle;

    .prologue
    .line 20075
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 20076
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 20078
    .local v1, "processRecord":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    .line 20079
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p1}, Landroid/app/IApplicationThread;->setCoreSettings(Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 20075
    :cond_0
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 20074
    .end local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :cond_1
    return-void

    .line 20081
    .restart local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    .local v2, "re":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 17
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 2551
    const v13, 0x5f535052

    move/from16 v0, p1

    if-ne v0, v13, :cond_3

    .line 2553
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 2554
    .local v12, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    monitor-enter p0

    .line 2555
    :try_start_0
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 2556
    .local v3, "NP":I
    const/4 v11, 0x0

    .local v11, "ip":I
    :goto_0
    if-ge v11, v3, :cond_2

    .line 2557
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 2558
    .local v5, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 2559
    .local v2, "NA":I
    const/4 v10, 0x0

    .local v10, "ia":I
    :goto_1
    if-ge v10, v2, :cond_1

    .line 2560
    invoke-virtual {v5, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 2561
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v13, :cond_0

    .line 2562
    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v13}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2559
    :cond_0
    add-int/lit8 v10, v10, 0x1

    goto :goto_1

    .line 2556
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v11, v11, 0x1

    goto :goto_0

    .end local v2    # "NA":I
    .end local v5    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v10    # "ia":I
    :cond_2
    monitor-exit p0

    .line 2568
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 2569
    .local v1, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_2
    if-ge v9, v1, :cond_3

    .line 2570
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    .line 2572
    .local v6, "data2":Landroid/os/Parcel;
    :try_start_1
    invoke-virtual {v12, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/os/IBinder;

    const v14, 0x5f535052

    const/4 v15, 0x0

    const/16 v16, 0x0

    move/from16 v0, v16

    invoke-interface {v13, v14, v6, v15, v0}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 2575
    :goto_3
    invoke-virtual {v6}, Landroid/os/Parcel;->recycle()V

    .line 2569
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 2554
    .end local v1    # "N":I
    .end local v3    # "NP":I
    .end local v6    # "data2":Landroid/os/Parcel;
    .end local v9    # "i":I
    .end local v11    # "ip":I
    :catchall_0
    move-exception v13

    monitor-exit p0

    throw v13

    .line 2579
    .end local v12    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :cond_3
    :try_start_2
    invoke-super/range {p0 .. p4}, Landroid/app/ActivityManagerNative;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_2
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v13

    return v13

    .line 2580
    :catch_0
    move-exception v8

    .line 2583
    .local v8, "e":Ljava/lang/RuntimeException;
    instance-of v13, v8, Ljava/lang/SecurityException;

    if-nez v13, :cond_4

    .line 2584
    const-string/jumbo v13, "ActivityManager"

    const-string/jumbo v14, "Activity Manager Crash"

    invoke-static {v13, v14, v8}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2586
    :cond_4
    throw v8

    .line 2573
    .end local v8    # "e":Ljava/lang/RuntimeException;
    .restart local v1    # "N":I
    .restart local v3    # "NP":I
    .restart local v6    # "data2":Landroid/os/Parcel;
    .restart local v9    # "i":I
    .restart local v11    # "ip":I
    .restart local v12    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :catch_1
    move-exception v7

    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_3
.end method

.method onUserInitialized(Lcom/android/server/am/UserState;ZII)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "foreground"    # Z
    .param p3, "oldUserId"    # I
    .param p4, "newUserId"    # I

    .prologue
    .line 20450
    monitor-enter p0

    .line 20451
    if-eqz p2, :cond_0

    .line 20452
    :try_start_0
    invoke-virtual {p0, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserState;II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 20456
    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-virtual {p0, p1, p4, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V

    .line 20449
    return-void

    .line 20450
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method onWakefulnessChanged(I)V
    .locals 1
    .param p1, "wakefulness"    # I

    .prologue
    .line 10508
    monitor-enter p0

    .line 10509
    :try_start_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 10510
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 10507
    return-void

    .line 10508
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public openContentUri(Landroid/net/Uri;)Landroid/os/ParcelFileDescriptor;
    .locals 12
    .param p1, "uri"    # Landroid/net/Uri;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v11, 0x0

    .line 10465
    const-string/jumbo v0, "openContentUri"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10466
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v10

    .line 10467
    .local v10, "userId":I
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v8

    .line 10468
    .local v8, "name":Ljava/lang/String;
    invoke-direct {p0, v8, v11, v10}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v6

    .line 10469
    .local v6, "cph":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v9, 0x0

    .line 10470
    .local v9, "pfd":Landroid/os/ParcelFileDescriptor;
    if-eqz v6, :cond_0

    .line 10478
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    .line 10479
    .local v5, "token":Landroid/os/Binder;
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 10480
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 10479
    invoke-direct {v1, p0, v5, v2, v3}, Lcom/android/server/am/ActivityManagerService$Identity;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/IBinder;II)V

    invoke-virtual {v0, v1}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V

    .line 10482
    :try_start_0
    iget-object v0, v6, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const-string/jumbo v3, "r"

    const/4 v1, 0x0

    const/4 v4, 0x0

    move-object v2, p1

    invoke-interface/range {v0 .. v5}, Landroid/content/IContentProvider;->openFile(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;Landroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v9

    .line 10487
    .local v9, "pfd":Landroid/os/ParcelFileDescriptor;
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    .line 10489
    invoke-direct {p0, v8, v11, v10}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 10494
    .end local v5    # "token":Landroid/os/Binder;
    .end local v9    # "pfd":Landroid/os/ParcelFileDescriptor;
    :goto_0
    return-object v9

    .line 10483
    .restart local v5    # "token":Landroid/os/Binder;
    .local v9, "pfd":Landroid/os/ParcelFileDescriptor;
    :catch_0
    move-exception v7

    .line 10487
    .local v7, "e":Ljava/io/FileNotFoundException;
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    .line 10489
    invoke-direct {p0, v8, v11, v10}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    goto :goto_0

    .line 10485
    .end local v7    # "e":Ljava/io/FileNotFoundException;
    :catchall_0
    move-exception v0

    .line 10487
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v1}, Ljava/lang/ThreadLocal;->remove()V

    .line 10489
    invoke-direct {p0, v8, v11, v10}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 10485
    throw v0

    .line 10492
    .end local v5    # "token":Landroid/os/Binder;
    :cond_0
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Failed to get provider for authority \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "\'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method public overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "enterAnim"    # I
    .param p4, "exitAnim"    # I

    .prologue
    .line 4666
    monitor-enter p0

    .line 4667
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v2

    .line 4668
    .local v2, "self":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    monitor-exit p0

    .line 4669
    return-void

    .line 4672
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4674
    .local v0, "origId":J
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v4, :cond_1

    .line 4675
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v4, :cond_2

    .line 4676
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 4677
    const/4 v4, 0x0

    .line 4676
    invoke-virtual {v3, p2, p3, p4, v4}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V

    .line 4680
    :cond_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 4665
    return-void

    .line 4666
    .end local v0    # "origId":J
    .end local v2    # "self":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "service"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingPackage"    # Ljava/lang/String;

    .prologue
    .line 16031
    const-string/jumbo v0, "peekService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16033
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16034
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16037
    :cond_0
    if-nez p3, :cond_1

    .line 16038
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16041
    :cond_1
    monitor-enter p0

    .line 16042
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 16041
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method pendingAssistExtrasTimedOut(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;)V
    .locals 5
    .param p1, "pae"    # Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .prologue
    .line 11089
    monitor-enter p0

    .line 11090
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11091
    iget-object v1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .local v1, "receiver":Lcom/android/internal/os/IResultReceiver;
    monitor-exit p0

    .line 11093
    if-eqz v1, :cond_0

    .line 11096
    :try_start_1
    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-interface {v2, v3, v4}, Lcom/android/internal/os/IResultReceiver;->send(ILandroid/os/Bundle;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 11087
    :cond_0
    :goto_0
    return-void

    .line 11089
    .end local v1    # "receiver":Lcom/android/internal/os/IResultReceiver;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 11097
    .restart local v1    # "receiver":Lcom/android/internal/os/IResultReceiver;
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method final performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 18714
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 18715
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    .line 18716
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v1, :cond_1

    .line 18717
    const/4 v1, 0x0

    iput-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 18718
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1}, Landroid/app/IApplicationThread;->scheduleLowMemory()V

    .line 18712
    :cond_0
    :goto_0
    return-void

    .line 18720
    :cond_1
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1}, Landroid/app/IApplicationThread;->processInBackground()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 18723
    :catch_0
    move-exception v0

    .local v0, "e":Ljava/lang/Exception;
    goto :goto_0
.end method

.method final performAppGcsIfAppropriateLocked()V
    .locals 1

    .prologue
    .line 18779
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 18780
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->performAppGcsLocked()V

    .line 18781
    return-void

    .line 18784
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 18778
    return-void
.end method

.method final performAppGcsLocked()V
    .locals 6

    .prologue
    const/4 v4, 0x0

    .line 18747
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 18748
    .local v0, "N":I
    if-gtz v0, :cond_0

    .line 18749
    return-void

    .line 18751
    :cond_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v2

    if-eqz v2, :cond_5

    .line 18752
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_4

    .line 18753
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 18754
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v3, 0x2

    if-gt v2, v3, :cond_2

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v2, :cond_1

    .line 18755
    :cond_2
    iget-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    .line 18756
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 18755
    cmp-long v2, v2, v4

    if-gtz v2, :cond_3

    .line 18759
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 18760
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 18761
    return-void

    .line 18765
    :cond_3
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 18771
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 18746
    :cond_5
    return-void
.end method

.method public performIdleMaintenance()V
    .locals 18

    .prologue
    .line 11621
    const-string/jumbo v2, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 11623
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 11627
    :cond_0
    monitor-enter p0

    .line 11628
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 11629
    .local v6, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v14, v6, v2

    .line 11630
    .local v14, "timeSinceLastIdle":J
    move-object/from16 v0, p0

    invoke-direct {v0, v6, v7}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v10

    .line 11631
    .local v10, "lowRamSinceLastIdle":J
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 11632
    const-wide/16 v2, 0x0

    move-object/from16 v0, p0

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 11633
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_1

    .line 11634
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 11637
    :cond_1
    new-instance v13, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11638
    .local v13, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v2, "Idle maintenance over "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11639
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 11640
    const-string/jumbo v2, " low RAM for "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11641
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 11642
    const-string/jumbo v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11646
    const-wide/16 v2, 0x3

    div-long v2, v14, v2

    cmp-long v2, v10, v2

    if-lez v2, :cond_3

    const/4 v8, 0x1

    .line 11648
    .local v8, "doKilling":Z
    :goto_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v9, v2, -0x1

    .local v9, "i":I
    :goto_1
    if-ltz v9, :cond_5

    .line 11649
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 11650
    .local v12, "proc":Lcom/android/server/am/ProcessRecord;
    iget-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    if-eqz v2, :cond_4

    .line 11651
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x5

    if-eq v2, v3, :cond_2

    .line 11652
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x4

    if-lt v2, v3, :cond_2

    .line 11653
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xa

    if-gt v2, v3, :cond_2

    .line 11654
    if-eqz v8, :cond_2

    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_2

    .line 11655
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v16, 0x3

    mul-long v4, v4, v16

    const-wide/16 v16, 0x2

    div-long v4, v4, v16

    cmp-long v2, v2, v4

    if-lez v2, :cond_2

    .line 11656
    new-instance v13, Ljava/lang/StringBuilder;

    .end local v13    # "sb":Ljava/lang/StringBuilder;
    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11657
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v2, "Kill"

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11658
    iget-object v2, v12, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11659
    const-string/jumbo v2, " in idle maint: pss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11660
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 11661
    const-string/jumbo v2, ", initialPss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11662
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 11663
    const-string/jumbo v2, ", period="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11664
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 11665
    const-string/jumbo v2, ", lowRamPeriod="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11666
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 11667
    const-string/jumbo v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 11668
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "idle maint (pss "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 11669
    const-string/jumbo v3, " from "

    .line 11668
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 11669
    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 11668
    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 11669
    const-string/jumbo v3, ")"

    .line 11668
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 11669
    const/4 v3, 0x1

    .line 11668
    invoke-virtual {v12, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 11648
    :cond_2
    :goto_2
    add-int/lit8 v9, v9, -0x1

    goto/16 :goto_1

    .line 11646
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    const/4 v8, 0x0

    .restart local v8    # "doKilling":Z
    goto/16 :goto_0

    .line 11672
    .restart local v9    # "i":I
    .restart local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xc

    if-ge v2, v3, :cond_2

    .line 11673
    const/4 v2, 0x1

    iput-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 11674
    const-wide/16 v2, 0x0

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 11675
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 11676
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v5

    .line 11675
    const/4 v3, 0x1

    invoke-static/range {v2 .. v7}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->nextPssTime:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_2

    .line 11627
    .end local v6    # "now":J
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v10    # "lowRamSinceLastIdle":J
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "sb":Ljava/lang/StringBuilder;
    .end local v14    # "timeSinceLastIdle":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 11680
    .restart local v6    # "now":J
    .restart local v8    # "doKilling":Z
    .restart local v9    # "i":I
    .restart local v10    # "lowRamSinceLastIdle":J
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    .restart local v14    # "timeSinceLastIdle":J
    :cond_5
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x27

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 11681
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v4, 0x1d4c0

    const/16 v3, 0x27

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 11620
    return-void
.end method

.method postFinishBooting(ZZ)V
    .locals 5
    .param p1, "finishBooting"    # Z
    .param p2, "enableScreen"    # Z

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 6432
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 6433
    if-eqz p1, :cond_0

    move v2, v0

    :goto_0
    if-eqz p2, :cond_1

    .line 6432
    :goto_1
    const/16 v1, 0x2d

    invoke-virtual {v4, v1, v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6431
    return-void

    :cond_0
    move v2, v1

    .line 6433
    goto :goto_0

    :cond_1
    move v0, v1

    goto :goto_1
.end method

.method printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "adj"    # I

    .prologue
    const/16 v1, 0x20

    .line 14019
    const-string/jumbo v0, "    "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14020
    if-ltz p3, :cond_1

    .line 14021
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14022
    const/16 v0, 0xa

    if-ge p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 14026
    :cond_0
    :goto_0
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->print(I)V

    .line 14027
    const-string/jumbo v0, ": "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14028
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14029
    const-string/jumbo v0, " ("

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14030
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    const-wide/16 v2, 0x400

    div-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 14031
    const-string/jumbo v0, " kB)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14018
    return-void

    .line 14024
    :cond_1
    const/16 v0, -0xa

    if-le p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    goto :goto_0
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 7
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "start"    # Z
    .param p4, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p5, "profileType"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 19874
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 19877
    :try_start_1
    const-string/jumbo v4, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_1

    .line 19879
    new-instance v4, Ljava/lang/SecurityException;

    const-string/jumbo v5, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19874
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit p0

    throw v4
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 19923
    :catch_0
    move-exception v0

    .line 19924
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v4, Ljava/lang/IllegalStateException;

    const-string/jumbo v5, "Process disappeared"

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 19925
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v4

    .line 19926
    if-eqz p4, :cond_0

    iget-object v5, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v5, :cond_0

    .line 19928
    :try_start_4
    iget-object v5, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    .line 19925
    :cond_0
    :goto_0
    throw v4

    .line 19883
    :cond_1
    if-eqz p3, :cond_3

    if-eqz p4, :cond_2

    :try_start_5
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-nez v4, :cond_3

    .line 19884
    :cond_2
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v5, "null profile info or fd"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 19887
    :cond_3
    const/4 v3, 0x0

    .line 19888
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_4

    .line 19889
    const-string/jumbo v4, "profileControl"

    invoke-direct {p0, p1, p2, v4}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 19892
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    if-eqz p3, :cond_6

    if-eqz v3, :cond_5

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v4, :cond_6

    .line 19893
    :cond_5
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Unknown process: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 19896
    :cond_6
    if-eqz p3, :cond_9

    .line 19897
    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 19898
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, v4, v5, p4}, Lcom/android/server/am/ActivityManagerService;->setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 19899
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 19900
    iput p5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 19901
    iget-object v2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 19903
    .local v2, "fd":Landroid/os/ParcelFileDescriptor;
    :try_start_6
    invoke-virtual {v2}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    move-result-object v2

    .line 19907
    .end local v2    # "fd":Landroid/os/ParcelFileDescriptor;
    :goto_1
    :try_start_7
    iput-object v2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 19908
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v4, p3, p4, p5}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V

    .line 19909
    const/4 v2, 0x0

    .line 19910
    .local v2, "fd":Landroid/os/ParcelFileDescriptor;
    const/4 v4, 0x0

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .end local v2    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_7
    :goto_2
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_0
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 19921
    const/4 v4, 0x1

    .line 19926
    if-eqz p4, :cond_8

    iget-object v5, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v5, :cond_8

    .line 19928
    :try_start_9
    iget-object v5, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_4

    .line 19921
    :cond_8
    :goto_3
    return v4

    .line 19904
    .local v2, "fd":Landroid/os/ParcelFileDescriptor;
    :catch_1
    move-exception v1

    .line 19905
    .local v1, "e":Ljava/io/IOException;
    const/4 v2, 0x0

    .local v2, "fd":Landroid/os/ParcelFileDescriptor;
    goto :goto_1

    .line 19912
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_9
    :try_start_a
    invoke-direct {p0, v3, p5}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 19913
    if-eqz p4, :cond_7

    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    if-eqz v4, :cond_7

    .line 19915
    :try_start_b
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_b
    .catch Ljava/io/IOException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    goto :goto_2

    .line 19916
    :catch_2
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_2

    .line 19929
    .end local v1    # "e":Ljava/io/IOException;
    :catch_3
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto/16 :goto_0

    .end local v1    # "e":Ljava/io/IOException;
    :catch_4
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_3
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 17
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/app/IApplicationThread;",
            "Ljava/util/List",
            "<",
            "Landroid/app/IActivityManager$ContentProviderHolder;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 10085
    .local p2, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/app/IActivityManager$ContentProviderHolder;>;"
    if-nez p2, :cond_0

    .line 10086
    return-void

    .line 10089
    :cond_0
    const-string/jumbo v14, "publishContentProviders"

    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10090
    monitor-enter p0

    .line 10091
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v9

    .line 10093
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v9, :cond_1

    .line 10094
    new-instance v14, Ljava/lang/SecurityException;

    .line 10095
    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "Unable to find app for caller "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v15

    .line 10096
    const-string/jumbo v16, " (pid="

    .line 10095
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    .line 10096
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v16

    .line 10095
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    .line 10097
    const-string/jumbo v16, ") when publishing content providers"

    .line 10095
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    .line 10094
    invoke-direct {v14, v15}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10090
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v14

    monitor-exit p0

    throw v14

    .line 10100
    .restart local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 10102
    .local v10, "origId":J
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v2

    .line 10103
    .local v2, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v2, :cond_8

    .line 10104
    move-object/from16 v0, p2

    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/app/IActivityManager$ContentProviderHolder;

    .line 10105
    .local v12, "src":Landroid/app/IActivityManager$ContentProviderHolder;
    if-eqz v12, :cond_2

    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-nez v14, :cond_3

    .line 10103
    :cond_2
    :goto_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 10105
    :cond_3
    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    if-eqz v14, :cond_2

    .line 10108
    iget-object v14, v9, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v15, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v14, v15}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ContentProviderRecord;

    .line 10110
    .local v4, "dst":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v4, :cond_2

    .line 10111
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v15, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 10112
    .local v3, "comp":Landroid/content/ComponentName;
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v14, v3, v4}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 10113
    iget-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string/jumbo v15, ";"

    invoke-virtual {v14, v15}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v8

    .line 10114
    .local v8, "names":[Ljava/lang/String;
    const/4 v6, 0x0

    .local v6, "j":I
    :goto_2
    array-length v14, v8

    if-ge v6, v14, :cond_4

    .line 10115
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v15, v8, v6

    invoke-virtual {v14, v15, v4}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 10114
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 10118
    :cond_4
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 10120
    .local v7, "launchingCount":I
    const/4 v13, 0x0

    .line 10121
    .local v13, "wasInLaunchingProviders":Z
    const/4 v6, 0x0

    :goto_3
    if-ge v6, v7, :cond_6

    .line 10122
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    if-ne v14, v4, :cond_5

    .line 10123
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14, v6}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 10124
    const/4 v13, 0x1

    .line 10125
    add-int/lit8 v6, v6, -0x1

    .line 10126
    add-int/lit8 v7, v7, -0x1

    .line 10121
    :cond_5
    add-int/lit8 v6, v6, 0x1

    goto :goto_3

    .line 10129
    :cond_6
    if-eqz v13, :cond_7

    .line 10130
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v15, 0x3b

    invoke-virtual {v14, v15, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 10132
    :cond_7
    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10133
    :try_start_2
    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    iput-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 10134
    iput-object v9, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 10135
    invoke-virtual {v4}, Lcom/android/server/am/ContentProviderRecord;->notifyAll()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    monitor-exit v4

    .line 10137
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 10138
    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    .line 10139
    iget-object v15, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    .line 10138
    move-object/from16 v0, p0

    invoke-direct {v0, v9, v14, v15}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    goto/16 :goto_1

    .line 10132
    :catchall_1
    move-exception v14

    monitor-exit v4

    throw v14

    .line 10143
    .end local v3    # "comp":Landroid/content/ComponentName;
    .end local v4    # "dst":Lcom/android/server/am/ContentProviderRecord;
    .end local v6    # "j":I
    .end local v7    # "launchingCount":I
    .end local v8    # "names":[Ljava/lang/String;
    .end local v12    # "src":Landroid/app/IActivityManager$ContentProviderHolder;
    .end local v13    # "wasInLaunchingProviders":Z
    :cond_8
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 10084
    return-void
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "service"    # Landroid/os/IBinder;

    .prologue
    .line 16239
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16240
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16243
    :cond_0
    monitor-enter p0

    .line 16244
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_1

    .line 16245
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16243
    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    .line 16247
    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 16237
    return-void
.end method

.method recordPssSampleLocked(Lcom/android/server/am/ProcessRecord;IJJJ)V
    .locals 17
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I
    .param p3, "pss"    # J
    .param p5, "uss"    # J
    .param p7, "now"    # J

    .prologue
    .line 18563
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide/16 v8, 0x400

    mul-long v8, v8, p3

    const-wide/16 v10, 0x400

    mul-long v10, v10, p5

    invoke-static/range {v5 .. v11}, Lcom/android/server/am/EventLogTags;->writeAmPss(IILjava/lang/String;JJ)V

    .line 18564
    move-wide/from16 v0, p7

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    .line 18565
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    const/4 v10, 0x1

    move-wide/from16 v6, p3

    move-wide/from16 v8, p5

    invoke-virtual/range {v5 .. v11}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 18569
    move-object/from16 v0, p1

    iget-wide v6, v0, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v8, 0x0

    cmp-long v5, v6, v8

    if-nez v5, :cond_0

    .line 18570
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 18572
    :cond_0
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastPss:J

    .line 18573
    const/16 v5, 0xc

    move/from16 v0, p2

    if-lt v0, v5, :cond_1

    .line 18574
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    .line 18578
    :cond_1
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Landroid/util/SparseArray;

    .line 18579
    .local v16, "watchUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    const/4 v4, 0x0

    .line 18580
    .local v4, "check":Ljava/lang/Long;
    if-eqz v16, :cond_3

    .line 18581
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v16

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/util/Pair;

    .line 18582
    .local v15, "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    if-nez v15, :cond_2

    .line 18583
    const/4 v5, 0x0

    move-object/from16 v0, v16

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    check-cast v15, Landroid/util/Pair;

    .line 18585
    .restart local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    :cond_2
    if-eqz v15, :cond_3

    .line 18586
    iget-object v4, v15, Landroid/util/Pair;->first:Ljava/lang/Object;

    .end local v4    # "check":Ljava/lang/Long;
    check-cast v4, Ljava/lang/Long;

    .line 18589
    .end local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    :cond_3
    if-eqz v4, :cond_5

    .line 18590
    const-wide/16 v6, 0x400

    mul-long v6, v6, p3

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-ltz v5, :cond_5

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_5

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    if-nez v5, :cond_5

    .line 18591
    const-string/jumbo v5, "1"

    const-string/jumbo v6, "ro.debuggable"

    const-string/jumbo v7, "0"

    invoke-static {v6, v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    .line 18592
    .local v13, "isDebuggable":Z
    if-nez v13, :cond_4

    .line 18593
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_4

    .line 18594
    const/4 v13, 0x1

    .line 18597
    .end local v13    # "isDebuggable":Z
    :cond_4
    if-eqz v13, :cond_6

    .line 18598
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " exceeded pss limit "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "; reporting"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18599
    move-object/from16 v14, p1

    .line 18600
    .local v14, "myProc":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Lcom/android/server/am/DumpHeapProvider;->getJavaFile()Ljava/io/File;

    move-result-object v12

    .line 18601
    .local v12, "heapdumpFile":Ljava/io/File;
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    .line 18602
    invoke-virtual {v12}, Ljava/io/File;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    .line 18603
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    .line 18604
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    .line 18605
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v5

    new-instance v6, Lcom/android/server/am/ActivityManagerService$23;

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v12, v14}, Lcom/android/server/am/ActivityManagerService$23;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v5, v6}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 18562
    .end local v12    # "heapdumpFile":Ljava/io/File;
    .end local v14    # "myProc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    :goto_0
    return-void

    .line 18645
    :cond_6
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " exceeded pss limit "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 18646
    const-string/jumbo v7, ", but debugging not enabled"

    .line 18645
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 7
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # I
    .param p3, "unstable"    # I

    .prologue
    const/4 v4, 0x0

    .line 10150
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v1, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10157
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v1, :cond_0

    .line 10158
    new-instance v4, Ljava/lang/NullPointerException;

    const-string/jumbo v5, "connection is null"

    invoke-direct {v4, v5}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 10151
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v2

    .line 10152
    .local v2, "e":Ljava/lang/ClassCastException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "refContentProvider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 10153
    const-string/jumbo v5, " not a ContentProviderConnection"

    .line 10152
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 10154
    .local v3, "msg":Ljava/lang/String;
    const-string/jumbo v4, "ActivityManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10155
    new-instance v4, Ljava/lang/IllegalArgumentException;

    invoke-direct {v4, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 10161
    .end local v2    # "e":Ljava/lang/ClassCastException;
    .end local v3    # "msg":Ljava/lang/String;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    .line 10162
    if-lez p2, :cond_1

    .line 10163
    :try_start_1
    iget v5, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/2addr v5, p2

    iput v5, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 10165
    :cond_1
    iget v5, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/2addr p2, v5

    .line 10166
    if-gez p2, :cond_2

    .line 10167
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "stableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10161
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .line 10170
    :cond_2
    if-lez p3, :cond_3

    .line 10171
    :try_start_2
    iget v5, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/2addr v5, p3

    iput v5, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 10173
    :cond_3
    iget v5, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr p3, v5

    .line 10174
    if-gez p3, :cond_4

    .line 10175
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "unstableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 10178
    :cond_4
    add-int v5, p2, p3

    if-gtz v5, :cond_5

    .line 10179
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "ref counts can\'t go to zero here: stable="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 10180
    const-string/jumbo v6, " unstable="

    .line 10179
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 10182
    :cond_5
    iput p2, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 10183
    iput p3, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 10184
    iget-boolean v5, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v5, :cond_6

    :goto_0
    monitor-exit p0

    return v4

    :cond_6
    const/4 v4, 0x1

    goto :goto_0
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 7
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    .line 11180
    const-string/jumbo v4, "android.permission.SET_ACTIVITY_WATCHER"

    .line 11181
    const-string/jumbo v5, "registerProcessObserver()"

    .line 11180
    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11182
    monitor-enter p0

    .line 11183
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    invoke-interface {v4}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "key$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Integer;

    .line 11184
    .local v1, "key":Ljava/lang/Integer;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundActivitiesList:Ljava/util/Map;

    invoke-interface {v4, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, [Ljava/lang/Object;

    .line 11185
    .local v3, "o":[Ljava/lang/Object;
    array-length v4, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v5, 0x3

    if-ne v4, v5, :cond_0

    .line 11187
    const/4 v4, 0x0

    :try_start_1
    aget-object v4, v3, v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v5

    .line 11188
    const/4 v4, 0x1

    aget-object v4, v3, v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v6

    const/4 v4, 0x2

    aget-object v4, v3, v4

    check-cast v4, Ljava/lang/Boolean;

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    .line 11187
    invoke-interface {p1, v5, v6, v4}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 11189
    :catch_0
    move-exception v0

    .line 11191
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_2
    invoke-virtual {v0}, Landroid/os/RemoteException;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    .line 11182
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "key":Ljava/lang/Integer;
    .end local v2    # "key$iterator":Ljava/util/Iterator;
    .end local v3    # "o":[Ljava/lang/Object;
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .line 11195
    .restart local v2    # "key$iterator":Ljava/util/Iterator;
    :cond_1
    :try_start_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v4, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 11179
    return-void
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;I)Landroid/content/Intent;
    .locals 44
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "receiver"    # Landroid/content/IIntentReceiver;
    .param p4, "filter"    # Landroid/content/IntentFilter;
    .param p5, "permission"    # Ljava/lang/String;
    .param p6, "userId"    # I

    .prologue
    .line 16448
    const-string/jumbo v2, "registerReceiver"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16449
    const/16 v41, 0x0

    .line 16450
    .local v41, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    const/16 v31, 0x0

    .line 16453
    .local v31, "callerApp":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 16454
    if-eqz p1, :cond_4

    .line 16455
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v31

    .line 16456
    .local v31, "callerApp":Lcom/android/server/am/ProcessRecord;
    if-nez v31, :cond_0

    .line 16457
    new-instance v2, Ljava/lang/SecurityException;

    .line 16458
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Unable to find app for caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16459
    const-string/jumbo v11, " (pid="

    .line 16458
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16459
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 16458
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16460
    const-string/jumbo v11, ") when registering receiver "

    .line 16458
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p3

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 16457
    invoke-direct {v2, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16453
    .end local v31    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local p2    # "callerPackage":Ljava/lang/String;
    :catchall_0
    move-exception v2

    :goto_0
    monitor-exit p0

    throw v2

    .line 16462
    .restart local v31    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .restart local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local p2    # "callerPackage":Ljava/lang/String;
    :cond_0
    :try_start_1
    move-object/from16 v0, v31

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v10, 0x3e8

    if-eq v2, v10, :cond_1

    .line 16463
    move-object/from16 v0, v31

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p2

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 16468
    :cond_1
    move-object/from16 v0, v31

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16469
    .local v4, "callingUid":I
    move-object/from16 v0, v31

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 16477
    .end local v31    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local p2    # "callerPackage":Ljava/lang/String;
    .local v3, "callingPid":I
    :goto_1
    const-string/jumbo v8, "registerReceiver"

    const/4 v6, 0x1

    const/4 v7, 0x2

    move-object/from16 v2, p0

    move/from16 v5, p6

    move-object/from16 v9, p2

    .line 16476
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p6

    .line 16479
    invoke-virtual/range {p4 .. p4}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v29

    .line 16480
    .local v29, "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    if-nez v29, :cond_2

    .line 16481
    new-instance v36, Ljava/util/ArrayList;

    const/4 v2, 0x1

    move-object/from16 v0, v36

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 16482
    .local v36, "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    const/4 v2, 0x0

    move-object/from16 v0, v36

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16483
    invoke-virtual/range {v36 .. v36}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v29

    .line 16487
    .end local v36    # "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    :cond_2
    const/4 v2, 0x2

    new-array v0, v2, [I

    move-object/from16 v43, v0

    const/4 v2, -0x1

    const/4 v10, 0x0

    aput v2, v43, v10

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const/4 v10, 0x1

    aput v2, v43, v10

    .line 16488
    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v43, "userIds":[I
    :goto_2
    invoke-interface/range {v29 .. v29}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_6

    .line 16489
    invoke-interface/range {v29 .. v29}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Ljava/lang/String;

    .line 16490
    .local v28, "action":Ljava/lang/String;
    const/4 v2, 0x0

    move-object/from16 v0, v43

    array-length v10, v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object/from16 v42, v41

    .local v42, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_3
    if-ge v2, v10, :cond_5

    :try_start_2
    aget v34, v43, v2

    .line 16491
    .local v34, "id":I
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v34

    invoke-virtual {v11, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Landroid/util/ArrayMap;

    .line 16492
    .local v38, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v38, :cond_16

    .line 16493
    move-object/from16 v0, v38

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Ljava/util/ArrayList;

    .line 16494
    .local v35, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v35, :cond_16

    .line 16495
    if-nez v42, :cond_15

    .line 16496
    new-instance v41, Ljava/util/ArrayList;

    invoke-direct/range {v41 .. v41}, Ljava/util/ArrayList;-><init>()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 16498
    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v41, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_4
    :try_start_3
    move-object/from16 v0, v41

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 16490
    .end local v35    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_5
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v42, v41

    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto :goto_3

    .line 16464
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v28    # "action":Ljava/lang/String;
    .end local v29    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .end local v34    # "id":I
    .end local v38    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v43    # "userIds":[I
    .restart local v31    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .local v41, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local p2    # "callerPackage":Ljava/lang/String;
    :cond_3
    const-string/jumbo v2, "android"

    move-object/from16 v0, p2

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 16465
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Given caller package "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16466
    const-string/jumbo v11, " is not running in process "

    .line 16465
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v31

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16471
    .local v31, "callerApp":Lcom/android/server/am/ProcessRecord;
    :cond_4
    const/16 p2, 0x0

    .line 16472
    .local p2, "callerPackage":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 16473
    .restart local v4    # "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v3

    .restart local v3    # "callingPid":I
    goto/16 :goto_1

    .end local v31    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local p2    # "callerPackage":Ljava/lang/String;
    .restart local v28    # "action":Ljava/lang/String;
    .restart local v29    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .restart local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v43    # "userIds":[I
    :cond_5
    move-object/from16 v41, v42

    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v41, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_2

    .end local v28    # "action":Ljava/lang/String;
    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_6
    monitor-exit p0

    .line 16505
    const/16 v30, 0x0

    .line 16506
    .local v30, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v41, :cond_9

    .line 16507
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v37

    .line 16509
    .local v37, "resolver":Landroid/content/ContentResolver;
    const/16 v33, 0x0

    .local v33, "i":I
    invoke-virtual/range {v41 .. v41}, Ljava/util/ArrayList;->size()I

    move-result v27

    .end local v30    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v27, "N":I
    :goto_6
    move/from16 v0, v33

    move/from16 v1, v27

    if-ge v0, v1, :cond_9

    .line 16510
    move-object/from16 v0, v41

    move/from16 v1, v33

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/Intent;

    .line 16515
    .local v9, "intent":Landroid/content/Intent;
    const-string/jumbo v2, "ActivityManager"

    const/4 v10, 0x1

    move-object/from16 v0, p4

    move-object/from16 v1, v37

    invoke-virtual {v0, v1, v9, v10, v2}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v2

    if-ltz v2, :cond_8

    .line 16516
    if-nez v30, :cond_7

    .line 16517
    new-instance v30, Ljava/util/ArrayList;

    invoke-direct/range {v30 .. v30}, Ljava/util/ArrayList;-><init>()V

    .line 16519
    :cond_7
    move-object/from16 v0, v30

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16509
    :cond_8
    add-int/lit8 v33, v33, 0x1

    goto :goto_6

    .line 16525
    .end local v9    # "intent":Landroid/content/Intent;
    .end local v27    # "N":I
    .end local v33    # "i":I
    .end local v37    # "resolver":Landroid/content/ContentResolver;
    :cond_9
    if-eqz v30, :cond_a

    const/4 v2, 0x0

    move-object/from16 v0, v30

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Landroid/content/Intent;

    .line 16527
    :goto_7
    if-nez p3, :cond_b

    .line 16528
    return-object v39

    .line 16525
    :cond_a
    const/16 v39, 0x0

    .local v39, "sticky":Landroid/content/Intent;
    goto :goto_7

    .line 16531
    .end local v39    # "sticky":Landroid/content/Intent;
    :cond_b
    monitor-enter p0

    .line 16532
    if-eqz v31, :cond_d

    :try_start_4
    move-object/from16 v0, v31

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_c

    .line 16533
    move-object/from16 v0, v31

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-result-object v10

    if-eq v2, v10, :cond_d

    .line 16535
    :cond_c
    const/4 v2, 0x0

    monitor-exit p0

    return-object v2

    .line 16537
    :cond_d
    :try_start_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v2, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ReceiverList;

    .line 16538
    .local v5, "rl":Lcom/android/server/am/ReceiverList;
    if-nez v5, :cond_11

    .line 16539
    new-instance v5, Lcom/android/server/am/ReceiverList;

    .end local v5    # "rl":Lcom/android/server/am/ReceiverList;
    move-object/from16 v6, p0

    move-object/from16 v7, v31

    move v8, v3

    move v9, v4

    move/from16 v10, p6

    move-object/from16 v11, p3

    invoke-direct/range {v5 .. v11}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    .line 16541
    .restart local v5    # "rl":Lcom/android/server/am/ReceiverList;
    iget-object v2, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_10

    .line 16542
    iget-object v2, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v2, v5}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 16551
    :goto_8
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v2, v10, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 16565
    :cond_e
    new-instance v6, Lcom/android/server/am/BroadcastFilter;

    move-object/from16 v7, p4

    move-object v8, v5

    move-object/from16 v9, p2

    move-object/from16 v10, p5

    move v11, v4

    move/from16 v12, p6

    invoke-direct/range {v6 .. v12}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;II)V

    .line 16567
    .local v6, "bf":Lcom/android/server/am/BroadcastFilter;
    invoke-virtual {v5, v6}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z

    .line 16568
    invoke-virtual {v6}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z

    move-result v2

    if-nez v2, :cond_f

    .line 16569
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v10, "==> For Dynamic broadcast"

    invoke-static {v2, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16571
    :cond_f
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v2, v6}, Lcom/android/server/IntentResolver;->addFilter(Landroid/content/IntentFilter;)V

    .line 16575
    if-eqz v30, :cond_14

    .line 16576
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    .line 16577
    .local v18, "receivers":Ljava/util/ArrayList;
    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16579
    invoke-virtual/range {v30 .. v30}, Ljava/util/ArrayList;->size()I

    move-result v40

    .line 16580
    .local v40, "stickyCount":I
    const/16 v33, 0x0

    .restart local v33    # "i":I
    :goto_9
    move/from16 v0, v33

    move/from16 v1, v40

    if-ge v0, v1, :cond_14

    .line 16581
    move-object/from16 v0, v30

    move/from16 v1, v33

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/Intent;

    .line 16582
    .restart local v9    # "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v8

    .line 16583
    .local v8, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v7, Lcom/android/server/am/BroadcastRecord;

    const/4 v10, 0x0

    .line 16584
    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x0

    .line 16585
    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x1

    const/16 v25, 0x1

    const/16 v26, -0x1

    .line 16583
    invoke-direct/range {v7 .. v26}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 16586
    .local v7, "r":Lcom/android/server/am/BroadcastRecord;
    invoke-virtual {v8, v7}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 16587
    invoke-virtual {v8}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 16580
    add-int/lit8 v33, v33, 0x1

    goto :goto_9

    .line 16545
    .end local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v7    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v8    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v9    # "intent":Landroid/content/Intent;
    .end local v18    # "receivers":Ljava/util/ArrayList;
    .end local v33    # "i":I
    .end local v40    # "stickyCount":I
    :cond_10
    :try_start_6
    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v10, 0x0

    invoke-interface {v2, v5, v10}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 16549
    const/4 v2, 0x1

    :try_start_7
    iput-boolean v2, v5, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto/16 :goto_8

    .line 16531
    .end local v5    # "rl":Lcom/android/server/am/ReceiverList;
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2

    .line 16546
    .restart local v5    # "rl":Lcom/android/server/am/ReceiverList;
    :catch_0
    move-exception v32

    .local v32, "e":Landroid/os/RemoteException;
    monitor-exit p0

    .line 16547
    return-object v39

    .line 16552
    .end local v32    # "e":Landroid/os/RemoteException;
    :cond_11
    :try_start_8
    iget v2, v5, Lcom/android/server/am/ReceiverList;->uid:I

    if-eq v2, v4, :cond_12

    .line 16553
    new-instance v2, Ljava/lang/IllegalArgumentException;

    .line 16554
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Receiver requested to register for uid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16555
    const-string/jumbo v11, " was previously registered for uid "

    .line 16554
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16555
    iget v11, v5, Lcom/android/server/am/ReceiverList;->uid:I

    .line 16554
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 16553
    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16556
    :cond_12
    iget v2, v5, Lcom/android/server/am/ReceiverList;->pid:I

    if-eq v2, v3, :cond_13

    .line 16557
    new-instance v2, Ljava/lang/IllegalArgumentException;

    .line 16558
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Receiver requested to register for pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16559
    const-string/jumbo v11, " was previously registered for pid "

    .line 16558
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16559
    iget v11, v5, Lcom/android/server/am/ReceiverList;->pid:I

    .line 16558
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 16557
    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16560
    :cond_13
    iget v2, v5, Lcom/android/server/am/ReceiverList;->userId:I

    move/from16 v0, p6

    if-eq v2, v0, :cond_e

    .line 16561
    new-instance v2, Ljava/lang/IllegalArgumentException;

    .line 16562
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Receiver requested to register for user "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p6

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16563
    const-string/jumbo v11, " was previously registered for user "

    .line 16562
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 16563
    iget v11, v5, Lcom/android/server/am/ReceiverList;->userId:I

    .line 16562
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 16561
    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .restart local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    :cond_14
    monitor-exit p0

    .line 16591
    return-object v39

    .line 16453
    .end local v5    # "rl":Lcom/android/server/am/ReceiverList;
    .end local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    .restart local v28    # "action":Ljava/lang/String;
    .restart local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :catchall_2
    move-exception v2

    move-object/from16 v41, v42

    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_0

    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v34    # "id":I
    .restart local v35    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v38    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .restart local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_15
    move-object/from16 v41, v42

    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_4

    .end local v35    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_16
    move-object/from16 v41, v42

    .end local v42    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v41    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_5
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/app/ITaskStackListener;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 2838
    monitor-enter p0

    .line 2839
    if-eqz p1, :cond_0

    .line 2840
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 2837
    return-void

    .line 2838
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public registerUidObserver(Landroid/app/IUidObserver;)V
    .locals 2
    .param p1, "observer"    # Landroid/app/IUidObserver;

    .prologue
    .line 11207
    const-string/jumbo v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 11208
    const-string/jumbo v1, "registerUidObserver()"

    .line 11207
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11209
    monitor-enter p0

    .line 11210
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 11206
    return-void

    .line 11209
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 3
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    .line 20857
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 20859
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: registerUserSwitchObserver() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20860
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 20859
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20861
    const-string/jumbo v2, ", uid="

    .line 20859
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20861
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 20859
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20862
    const-string/jumbo v2, " requires "

    .line 20859
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20862
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 20859
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20863
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20864
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20867
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 20856
    return-void
.end method

.method public releaseActivityInstance(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4625
    monitor-enter p0

    .line 4626
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 4628
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v2

    .line 4629
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 4634
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4630
    const/4 v3, 0x0

    monitor-exit p0

    return v3

    .line 4632
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const-string/jumbo v4, "app-req"

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ActivityStack;->safelyDestroyActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v3

    .line 4634
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 4632
    return v3

    .line 4633
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    .line 4634
    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4633
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 4625
    .end local v0    # "origId":J
    :catchall_1
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public releasePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 8310
    const-string/jumbo v4, "releasePersistableUriPermission"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8313
    const/4 v4, 0x3

    .line 8312
    invoke-static {p2, v4}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 8315
    monitor-enter p0

    .line 8316
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8317
    .local v0, "callingUid":I
    const/4 v2, 0x0

    .line 8320
    .local v2, "persistChanged":Z
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x0

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8319
    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 8322
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x1

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8321
    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v3

    .line 8323
    .local v3, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-nez v1, :cond_0

    if-nez v3, :cond_0

    .line 8324
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "No permission grants found for UID "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 8325
    const-string/jumbo v6, " and Uri "

    .line 8324
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 8325
    invoke-virtual {p1}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v6

    .line 8324
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8315
    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "persistChanged":Z
    .end local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .line 8328
    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v2    # "persistChanged":Z
    .restart local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_0
    if-eqz v1, :cond_1

    .line 8329
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v2

    .line 8330
    .local v2, "persistChanged":Z
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 8332
    .end local v2    # "persistChanged":Z
    :cond_1
    if-eqz v3, :cond_2

    .line 8333
    invoke-virtual {v3, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v4

    or-int/2addr v2, v4

    .line 8334
    .restart local v2    # "persistChanged":Z
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 8337
    .end local v2    # "persistChanged":Z
    :cond_2
    if-eqz v2, :cond_3

    .line 8338
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_3
    monitor-exit p0

    .line 8309
    return-void
.end method

.method public releaseSomeActivities(Landroid/app/IApplicationThread;)V
    .locals 5
    .param p1, "appInt"    # Landroid/app/IApplicationThread;

    .prologue
    .line 4641
    monitor-enter p0

    .line 4642
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v2

    .line 4644
    .local v2, "origId":J
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 4645
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v4, "low-mem"

    invoke-virtual {v1, v0, v4}, Lcom/android/server/am/ActivityStackSupervisor;->releaseSomeActivitiesLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4647
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 4640
    return-void

    .line 4646
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    .line 4647
    :try_start_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4646
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 4641
    .end local v2    # "origId":J
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 9
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # Z

    .prologue
    .line 10019
    const-string/jumbo v7, "removeContentProvider"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10020
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 10022
    .local v4, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10025
    :try_start_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10032
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    .line 10033
    :try_start_2
    new-instance v7, Ljava/lang/NullPointerException;

    const-string/jumbo v8, "connection is null"

    invoke-direct {v7, v8}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10022
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catchall_0
    move-exception v7

    :try_start_3
    monitor-exit p0

    throw v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10039
    :catchall_1
    move-exception v7

    .line 10040
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10039
    throw v7

    .line 10026
    :catch_0
    move-exception v3

    .line 10027
    .local v3, "e":Ljava/lang/ClassCastException;
    :try_start_4
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "removeContentProvider: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    .line 10028
    const-string/jumbo v8, " not a ContentProviderConnection"

    .line 10027
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10029
    .local v6, "msg":Ljava/lang/String;
    const-string/jumbo v7, "ActivityManager"

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10030
    new-instance v7, Ljava/lang/IllegalArgumentException;

    invoke-direct {v7, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 10035
    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {p0, v2, v7, v8, p2}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 10036
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :cond_1
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 10040
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10018
    return-void
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10045
    const-string/jumbo v3, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    .line 10046
    const-string/jumbo v4, "Do not have permission in call removeContentProviderExternal()"

    .line 10045
    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10047
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 10048
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10050
    .local v0, "ident":J
    :try_start_0
    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10052
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10044
    return-void

    .line 10051
    :catchall_0
    move-exception v3

    .line 10052
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10051
    throw v3
.end method

.method final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 2917
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 2918
    .local v0, "lrui":I
    if-ltz v0, :cond_3

    .line 2919
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v1, :cond_0

    .line 2920
    const-string/jumbo v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Removing process that hasn\'t been killed: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 2921
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 2922
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 2924
    :cond_0
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-gt v0, v1, :cond_1

    .line 2925
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 2927
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-gt v0, v1, :cond_2

    .line 2928
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 2930
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 2916
    :cond_3
    return-void
.end method

.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 3
    .param p1, "rl"    # Lcom/android/server/am/ReceiverList;

    .prologue
    .line 16640
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v2, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v2}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 16641
    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I

    move-result v1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 16642
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BroadcastFilter;

    invoke-virtual {v2, v1}, Lcom/android/server/IntentResolver;->removeFilter(Landroid/content/IntentFilter;)V

    .line 16641
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 16639
    :cond_0
    return-void
.end method

.method public removeTask(I)Z
    .locals 4
    .param p1, "taskId"    # I

    .prologue
    .line 8974
    monitor-enter p0

    .line 8975
    :try_start_0
    const-string/jumbo v2, "android.permission.REMOVE_TASKS"

    .line 8976
    const-string/jumbo v3, "removeTask()"

    .line 8975
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8977
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 8979
    .local v0, "ident":J
    const/4 v2, 0x1

    :try_start_1
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    .line 8981
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 8979
    return v2

    .line 8980
    :catchall_0
    move-exception v2

    .line 8981
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8980
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8974
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V
    .locals 3
    .param p1, "perm"    # Lcom/android/server/am/UriPermission;

    .prologue
    .line 7886
    iget v1, p1, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_0

    .line 7887
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 7888
    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    .line 7887
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 7889
    .local v0, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    .line 7893
    iget-object v1, p1, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7894
    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 7895
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 7885
    .end local v0    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_0
    return-void
.end method

.method public reportActivityFullyDrawn(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4356
    monitor-enter p0

    .line 4357
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 4358
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 4359
    return-void

    .line 4361
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->reportFullyDrawnLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 4355
    return-void

    .line 4356
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V
    .locals 15
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "extras"    # Landroid/os/Bundle;
    .param p3, "structure"    # Landroid/app/assist/AssistStructure;
    .param p4, "content"    # Landroid/app/assist/AssistContent;
    .param p5, "referrer"    # Landroid/net/Uri;

    .prologue
    move-object/from16 v5, p1

    .line 11113
    check-cast v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .line 11114
    .local v5, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    monitor-enter v5

    .line 11115
    :try_start_0
    move-object/from16 v0, p2

    iput-object v0, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    .line 11116
    move-object/from16 v0, p3

    iput-object v0, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    .line 11117
    move-object/from16 v0, p4

    iput-object v0, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    .line 11118
    if-eqz p5, :cond_0

    .line 11119
    iget-object v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string/jumbo v12, "android.intent.extra.REFERRER"

    move-object/from16 v0, p5

    invoke-virtual {v11, v12, v0}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 11121
    :cond_0
    const/4 v11, 0x1

    iput-boolean v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z

    .line 11122
    invoke-virtual {v5}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->notifyAll()V

    .line 11123
    iget-object v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    if-nez v11, :cond_1

    iget-object v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v11, :cond_1

    monitor-exit v5

    .line 11125
    return-void

    :cond_1
    monitor-exit v5

    .line 11130
    const/4 v10, 0x0

    .line 11131
    .local v10, "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    const/4 v8, 0x0

    .line 11132
    .local v8, "sendBundle":Landroid/os/Bundle;
    monitor-enter p0

    .line 11133
    :try_start_1
    move-object/from16 v0, p2

    invoke-direct {p0, v5, v0}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 11134
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v11, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v4

    .line 11135
    .local v4, "exists":Z
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v11, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeCallbacks(Ljava/lang/Runnable;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11136
    if-nez v4, :cond_2

    monitor-exit p0

    .line 11138
    return-void

    .line 11114
    .end local v4    # "exists":Z
    .end local v8    # "sendBundle":Landroid/os/Bundle;
    .end local v10    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    :catchall_0
    move-exception v11

    monitor-exit v5

    throw v11

    .line 11140
    .restart local v4    # "exists":Z
    .restart local v8    # "sendBundle":Landroid/os/Bundle;
    .restart local v10    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    :cond_2
    :try_start_2
    iget-object v10, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    .local v10, "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    if-eqz v10, :cond_3

    .line 11142
    new-instance v9, Landroid/os/Bundle;

    invoke-direct {v9}, Landroid/os/Bundle;-><init>()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11143
    .local v9, "sendBundle":Landroid/os/Bundle;
    :try_start_3
    const-string/jumbo v11, "data"

    .end local v8    # "sendBundle":Landroid/os/Bundle;
    iget-object v12, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {v9, v11, v12}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 11144
    const-string/jumbo v11, "structure"

    iget-object v12, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    invoke-virtual {v9, v11, v12}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 11145
    const-string/jumbo v11, "content"

    iget-object v12, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    invoke-virtual {v9, v11, v12}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    move-object v8, v9

    .end local v9    # "sendBundle":Landroid/os/Bundle;
    :cond_3
    monitor-exit p0

    .line 11148
    if-eqz v10, :cond_4

    .line 11150
    const/4 v11, 0x0

    :try_start_4
    invoke-interface {v10, v11, v8}, Lcom/android/internal/os/IResultReceiver;->send(ILandroid/os/Bundle;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 11153
    :goto_0
    return-void

    .line 11132
    .end local v4    # "exists":Z
    .end local v10    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    .restart local v8    # "sendBundle":Landroid/os/Bundle;
    :catchall_1
    move-exception v11

    .end local v8    # "sendBundle":Landroid/os/Bundle;
    :goto_1
    monitor-exit p0

    throw v11

    .line 11151
    .restart local v4    # "exists":Z
    .restart local v10    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    :catch_0
    move-exception v3

    .local v3, "e":Landroid/os/RemoteException;
    goto :goto_0

    .line 11156
    .end local v3    # "e":Landroid/os/RemoteException;
    :cond_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 11158
    .local v6, "ident":J
    :try_start_5
    iget-object v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    iget-object v12, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {v11, v12}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 11159
    iget-object v11, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    const/high16 v12, 0x34000000

    invoke-virtual {v11, v12}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 11162
    const-string/jumbo v11, "assist"

    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 11164
    :try_start_6
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v12, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    new-instance v13, Landroid/os/UserHandle;

    iget v14, v5, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->userHandle:I

    invoke-direct {v13, v14}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v11, v12, v13}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_6
    .catch Landroid/content/ActivityNotFoundException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 11169
    :goto_2
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11112
    return-void

    .line 11165
    :catch_1
    move-exception v2

    .line 11166
    .local v2, "e":Landroid/content/ActivityNotFoundException;
    :try_start_7
    const-string/jumbo v11, "ActivityManager"

    const-string/jumbo v12, "No activity to handle assist action."

    invoke-static {v11, v12, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    goto :goto_2

    .line 11168
    .end local v2    # "e":Landroid/content/ActivityNotFoundException;
    :catchall_2
    move-exception v11

    .line 11169
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11168
    throw v11

    .line 11132
    .end local v6    # "ident":J
    .restart local v9    # "sendBundle":Landroid/os/Bundle;
    :catchall_3
    move-exception v11

    move-object v8, v9

    .end local v9    # "sendBundle":Landroid/os/Bundle;
    .local v8, "sendBundle":Landroid/os/Bundle;
    goto :goto_1
.end method

.method reportMemUsage(Ljava/util/ArrayList;)V
    .locals 56
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessMemInfo;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 15414
    .local p1, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    new-instance v37, Landroid/util/SparseArray;

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v5

    move-object/from16 v0, v37

    invoke-direct {v0, v5}, Landroid/util/SparseArray;-><init>(I)V

    .line 15415
    .local v37, "infoMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessMemInfo;>;"
    const/16 v36, 0x0

    .local v36, "i":I
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    .local v28, "N":I
    :goto_0
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_0

    .line 15416
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 15417
    .local v4, "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 15415
    add-int/lit8 v36, v36, 0x1

    goto :goto_0

    .line 15419
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 15420
    const/4 v5, 0x1

    new-array v0, v5, [J

    move-object/from16 v44, v0

    .line 15421
    .local v44, "memtrackTmp":[J
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v14

    .line 15422
    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v5}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v28

    .line 15423
    const/16 v36, 0x0

    :goto_1
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_2

    .line 15424
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v36

    invoke-virtual {v5, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v45

    .line 15425
    .local v45, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v45

    iget-wide v8, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v18, 0x0

    cmp-long v5, v8, v18

    if-lez v5, :cond_1

    .line 15426
    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v48

    .line 15427
    .local v48, "pss":J
    const-wide/16 v8, 0x0

    cmp-long v5, v48, v8

    if-lez v5, :cond_1

    .line 15428
    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v5

    if-gez v5, :cond_1

    .line 15429
    new-instance v4, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v45

    iget-object v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v0, v45

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    .line 15430
    const-string/jumbo v9, "native"

    const/16 v7, -0x11

    const/4 v8, -0x1

    const/4 v10, 0x0

    .line 15429
    invoke-direct/range {v4 .. v10}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    .line 15431
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    move-wide/from16 v0, v48

    iput-wide v0, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 15432
    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 15433
    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15423
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v48    # "pss":J
    :cond_1
    add-int/lit8 v36, v36, 0x1

    goto :goto_1

    .end local v45    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2
    monitor-exit v14

    .line 15440
    const-wide/16 v54, 0x0

    .line 15441
    .local v54, "totalPss":J
    const-wide/16 v52, 0x0

    .line 15442
    .local v52, "totalMemtrack":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_2
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_4

    .line 15443
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 15444
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_3

    .line 15445
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 15446
    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 15448
    :cond_3
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v54, v54, v8

    .line 15449
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long v52, v52, v8

    .line 15442
    add-int/lit8 v36, v36, 0x1

    goto :goto_2

    .line 15421
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v52    # "totalMemtrack":J
    .end local v54    # "totalPss":J
    :catchall_0
    move-exception v5

    monitor-exit v14

    throw v5

    .line 15451
    .restart local v52    # "totalMemtrack":J
    .restart local v54    # "totalPss":J
    :cond_4
    new-instance v5, Lcom/android/server/am/ActivityManagerService$22;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$22;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, p1

    invoke-static {v0, v5}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 15463
    new-instance v51, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v51

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15464
    .local v51, "tag":Ljava/lang/StringBuilder;
    new-instance v50, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v50

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15465
    .local v50, "stack":Ljava/lang/StringBuilder;
    const-string/jumbo v5, "Low on memory -- "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15466
    const-string/jumbo v5, "total"

    const/4 v6, 0x0

    move-object/from16 v0, v51

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 15467
    const-string/jumbo v5, "total"

    const/4 v6, 0x1

    move-object/from16 v0, v50

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 15469
    new-instance v35, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v35

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15470
    .local v35, "fullNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v7, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    invoke-direct {v7, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15471
    .local v7, "shortNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v34, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v34

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15473
    .local v34, "fullJavaBuilder":Ljava/lang/StringBuilder;
    const/16 v33, 0x1

    .line 15474
    .local v33, "firstLine":Z
    const/high16 v41, -0x80000000

    .line 15475
    .local v41, "lastOomAdj":I
    const-wide/16 v10, 0x0

    .line 15476
    .local v10, "extraNativeRam":J
    const-wide/16 v12, 0x0

    .line 15477
    .local v12, "extraNativeMemtrack":J
    const-wide/16 v30, 0x0

    .line 15478
    .local v30, "cachedPss":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_3
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_14

    .line 15479
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 15481
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, 0x9

    if-lt v5, v6, :cond_5

    .line 15482
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v30, v30, v8

    .line 15485
    :cond_5
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-eq v5, v6, :cond_d

    .line 15486
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x5

    if-lt v5, v6, :cond_6

    .line 15487
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x6

    if-ne v5, v6, :cond_c

    .line 15489
    :cond_6
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v0, v5, :cond_f

    .line 15490
    iget v0, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v41, v0

    .line 15491
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_7

    .line 15492
    const-string/jumbo v5, " / "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15494
    :cond_7
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_e

    .line 15495
    if-eqz v33, :cond_8

    .line 15496
    const-string/jumbo v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15497
    const/16 v33, 0x0

    .line 15499
    :cond_8
    const-string/jumbo v5, "\n\t at "

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15507
    :goto_4
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_9

    .line 15508
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x0

    move-object/from16 v0, v51

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 15510
    :cond_9
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x1

    move-object/from16 v0, v50

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 15511
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_d

    .line 15512
    add-int/lit8 v5, v36, 0x1

    move/from16 v0, v28

    if-ge v5, v0, :cond_a

    add-int/lit8 v5, v36, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessMemInfo;

    iget v5, v5, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v5, v0, :cond_d

    .line 15513
    :cond_a
    const-string/jumbo v5, "("

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15514
    const/16 v39, 0x0

    .local v39, "k":I
    :goto_5
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    array-length v5, v5

    move/from16 v0, v39

    if-ge v0, v5, :cond_10

    .line 15515
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    iget v6, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ne v5, v6, :cond_b

    .line 15516
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15517
    const-string/jumbo v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15518
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 15514
    :cond_b
    add-int/lit8 v39, v39, 0x1

    goto :goto_5

    .line 15488
    .end local v39    # "k":I
    :cond_c
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x7

    if-eq v5, v6, :cond_6

    .line 15525
    :cond_d
    :goto_6
    move-object/from16 v0, p0

    move-object/from16 v1, v35

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 15526
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-ne v5, v6, :cond_12

    .line 15528
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x200

    cmp-long v5, v8, v14

    if-ltz v5, :cond_11

    .line 15529
    move-object/from16 v0, p0

    invoke-direct {v0, v7, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 15478
    :goto_7
    add-int/lit8 v36, v36, 0x1

    goto/16 :goto_3

    .line 15501
    :cond_e
    const-string/jumbo v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto/16 :goto_4

    .line 15504
    :cond_f
    const-string/jumbo v5, " "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15505
    const-string/jumbo v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto/16 :goto_4

    .line 15521
    .restart local v39    # "k":I
    :cond_10
    const-string/jumbo v5, ")"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_6

    .line 15531
    .end local v39    # "k":I
    :cond_11
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long/2addr v10, v8

    .line 15532
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long/2addr v12, v8

    goto :goto_7

    .line 15537
    :cond_12
    const-wide/16 v8, 0x0

    cmp-long v5, v10, v8

    if-lez v5, :cond_13

    .line 15539
    const-string/jumbo v14, "(Other native)"

    .line 15538
    const/16 v8, -0x11

    .line 15539
    const/4 v9, -0x1

    move-object/from16 v6, p0

    .line 15538
    invoke-direct/range {v6 .. v14}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 15540
    const/16 v5, 0xa

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15541
    const-wide/16 v10, 0x0

    .line 15543
    :cond_13
    move-object/from16 v0, p0

    move-object/from16 v1, v34

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    goto :goto_7

    .line 15547
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_14
    const-string/jumbo v5, "           "

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15548
    move-object/from16 v0, v34

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 15549
    const-string/jumbo v5, " kB: TOTAL"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15550
    const-wide/16 v8, 0x0

    cmp-long v5, v52, v8

    if-lez v5, :cond_15

    .line 15551
    const-string/jumbo v5, " ("

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15552
    move-object/from16 v0, v34

    move-wide/from16 v1, v52

    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15553
    const-string/jumbo v5, " kB memtrack)"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15556
    :cond_15
    const-string/jumbo v5, "\n"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15558
    new-instance v42, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 15559
    .local v42, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 15560
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getRawInfo()[J

    move-result-object v38

    .line 15562
    .local v38, "infos":[J
    new-instance v43, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v43

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15563
    .local v43, "memInfoBuilder":Ljava/lang/StringBuilder;
    invoke-static/range {v38 .. v38}, Landroid/os/Debug;->getMemInfo([J)V

    .line 15564
    const-string/jumbo v5, "  MemInfo: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15565
    const/4 v5, 0x5

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB slab, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15566
    const/4 v5, 0x4

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB shmem, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15567
    const/16 v5, 0xa

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB vm alloc, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15568
    const/16 v5, 0xb

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB page tables "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15569
    const/16 v5, 0xc

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB kernel stack\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15570
    const-string/jumbo v5, "           "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15571
    const/4 v5, 0x2

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB buffers, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15572
    const/4 v5, 0x3

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB cached, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15573
    const/16 v5, 0x9

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB mapped, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15574
    const/4 v5, 0x1

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " kB free\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15575
    const/16 v5, 0x8

    aget-wide v8, v38, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_16

    .line 15576
    const-string/jumbo v5, "  ZRAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15577
    const/16 v5, 0x8

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15578
    const-string/jumbo v5, " kB RAM, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15579
    const/4 v5, 0x6

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15580
    const-string/jumbo v5, " kB swap total, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15581
    const/4 v5, 0x7

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15582
    const-string/jumbo v5, " kB swap free\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15584
    :cond_16
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v40

    .line 15585
    .local v40, "ksm":[J
    const/4 v5, 0x1

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_17

    const/4 v5, 0x0

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_1a

    .line 15587
    :cond_17
    :goto_8
    const-string/jumbo v5, "  KSM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x1

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15588
    const-string/jumbo v5, " kB saved from shared "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15589
    const/4 v5, 0x0

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15590
    const-string/jumbo v5, "       "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x2

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15591
    const-string/jumbo v5, " kB unshared; "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15592
    const/4 v5, 0x3

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v5, " kB volatile\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15594
    :cond_18
    const-string/jumbo v5, "  Free RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15595
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v8

    add-long v8, v8, v30

    .line 15596
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    .line 15595
    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15597
    const-string/jumbo v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15598
    const-string/jumbo v5, "  Used RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15599
    sub-long v8, v54, v30

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15600
    const-string/jumbo v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15601
    const-string/jumbo v5, "  Lost RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15602
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v8

    sub-long v8, v8, v54

    .line 15603
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    .line 15602
    sub-long/2addr v8, v14

    .line 15603
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v14

    .line 15602
    sub-long/2addr v8, v14

    .line 15604
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    .line 15602
    sub-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15605
    const-string/jumbo v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15606
    const-string/jumbo v5, "ActivityManager"

    const-string/jumbo v6, "Low on memory:"

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15607
    const-string/jumbo v5, "ActivityManager"

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15608
    const-string/jumbo v5, "ActivityManager"

    invoke-virtual/range {v34 .. v34}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15609
    const-string/jumbo v5, "ActivityManager"

    invoke-virtual/range {v43 .. v43}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15611
    new-instance v32, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v32

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15622
    .local v32, "dropBuilder":Ljava/lang/StringBuilder;
    const-string/jumbo v5, "Low on memory:"

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15623
    move-object/from16 v0, v32

    move-object/from16 v1, v50

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 15624
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15625
    move-object/from16 v0, v32

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 15626
    move-object/from16 v0, v32

    move-object/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 15627
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15628
    move-object/from16 v0, v32

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 15629
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15634
    new-instance v29, Ljava/io/StringWriter;

    invoke-direct/range {v29 .. v29}, Ljava/io/StringWriter;-><init>()V

    .line 15635
    .local v29, "catSw":Ljava/io/StringWriter;
    monitor-enter p0

    .line 15636
    :try_start_1
    new-instance v16, Lcom/android/internal/util/FastPrintWriter;

    const/4 v5, 0x0

    const/16 v6, 0x100

    move-object/from16 v0, v16

    move-object/from16 v1, v29

    invoke-direct {v0, v1, v5, v6}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 15637
    .local v16, "catPw":Ljava/io/PrintWriter;
    const/4 v5, 0x0

    new-array v0, v5, [Ljava/lang/String;

    move-object/from16 v17, v0

    .line 15638
    .local v17, "emptyArgs":[Ljava/lang/String;
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 15639
    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v20}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 15640
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 15641
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v15, 0x0

    const/16 v18, 0x0

    .line 15642
    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    .line 15641
    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 15643
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 15644
    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 15645
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->flush()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    .line 15647
    invoke-virtual/range {v29 .. v29}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15648
    const-string/jumbo v19, "lowmem"

    const-string/jumbo v21, "system_server"

    .line 15649
    invoke-virtual/range {v51 .. v51}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-virtual/range {v32 .. v32}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    .line 15648
    const/16 v20, 0x0

    const/16 v22, 0x0

    .line 15649
    const/16 v23, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    move-object/from16 v18, p0

    .line 15648
    invoke-virtual/range {v18 .. v27}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15652
    monitor-enter p0

    .line 15653
    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v46

    .line 15654
    .local v46, "now":J
    move-object/from16 v0, p0

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    cmp-long v5, v8, v46

    if-gez v5, :cond_19

    .line 15655
    move-wide/from16 v0, v46

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :cond_19
    monitor-exit p0

    .line 15413
    return-void

    .line 15585
    .end local v16    # "catPw":Ljava/io/PrintWriter;
    .end local v17    # "emptyArgs":[Ljava/lang/String;
    .end local v29    # "catSw":Ljava/io/StringWriter;
    .end local v32    # "dropBuilder":Ljava/lang/StringBuilder;
    .end local v46    # "now":J
    :cond_1a
    const/4 v5, 0x2

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_17

    .line 15586
    const/4 v5, 0x3

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_18

    goto/16 :goto_8

    .line 15635
    .restart local v29    # "catSw":Ljava/io/StringWriter;
    .restart local v32    # "dropBuilder":Ljava/lang/StringBuilder;
    :catchall_1
    move-exception v5

    monitor-exit p0

    throw v5

    .line 15652
    .restart local v16    # "catPw":Ljava/io/PrintWriter;
    .restart local v17    # "emptyArgs":[Ljava/lang/String;
    :catchall_2
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public requestAssistContextExtras(ILcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;)Z
    .locals 10
    .param p1, "requestType"    # I
    .param p2, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p3, "activityToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x0

    .line 11040
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    const-wide/16 v8, 0x7d0

    move-object v0, p0

    move v1, p1

    move-object v3, v2

    move-object v4, p2

    move-object v5, p3

    move-object v7, v2

    .line 11039
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public requestBugReport()V
    .locals 3

    .prologue
    .line 10876
    const-string/jumbo v0, "android.permission.DUMP"

    const-string/jumbo v1, "requestBugReport"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10877
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.BUGREPORT_STARTED"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 10878
    const-string/jumbo v0, "ctl.start"

    const-string/jumbo v1, "bugreport"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 10875
    return-void
.end method

.method requestPssAllProcsLocked(JZZ)V
    .locals 9
    .param p1, "now"    # J
    .param p3, "always"    # Z
    .param p4, "memLowered"    # Z

    .prologue
    const/4 v1, 0x1

    .line 18671
    if-nez p3, :cond_1

    .line 18672
    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 18673
    if-eqz p4, :cond_0

    const v0, 0x1d4c0

    :goto_0
    int-to-long v4, v0

    .line 18672
    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-gez v0, :cond_1

    .line 18674
    return-void

    .line 18673
    :cond_0
    const v0, 0x927c0

    goto :goto_0

    .line 18678
    :cond_1
    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 18679
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 18680
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->ensureCapacity(I)V

    .line 18681
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 18682
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v7, v0, -0x1

    .local v7, "i":I
    :goto_1
    if-ltz v7, :cond_5

    .line 18683
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 18684
    .local v6, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_2

    .line 18685
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v2, -0x1

    if-ne v0, v2, :cond_3

    .line 18682
    :cond_2
    :goto_2
    add-int/lit8 v7, v7, -0x1

    goto :goto_1

    .line 18688
    :cond_3
    if-nez p4, :cond_4

    iget-wide v2, v6, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    const-wide/32 v4, 0x927c0

    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-lez v0, :cond_2

    .line 18689
    :cond_4
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iput v0, v6, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 18690
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18691
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    move-wide v4, p1

    .line 18690
    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v6, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 18692
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 18695
    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_5
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 18670
    return-void
.end method

.method requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 2
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I

    .prologue
    .line 18656
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 18657
    return-void

    .line 18659
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-nez v0, :cond_1

    .line 18660
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 18663
    :cond_1
    iput p2, p1, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 18664
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18655
    return-void
.end method

.method public requestVisibleBehind(Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    .line 11272
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11274
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11275
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 11276
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 11277
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->requestVisibleBehindLocked(Lcom/android/server/am/ActivityRecord;Z)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11282
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11277
    return v3

    :cond_0
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11280
    const/4 v3, 0x0

    .line 11282
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11280
    return v3

    .line 11274
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit p0

    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11281
    :catchall_1
    move-exception v3

    .line 11282
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11281
    throw v3
.end method

.method public resizeStack(ILandroid/graphics/Rect;)V
    .locals 4
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 9155
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9156
    const-string/jumbo v3, "resizeStack()"

    .line 9155
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9157
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9159
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9160
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->resizeStackLocked(ILandroid/graphics/Rect;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9163
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9154
    return-void

    .line 9159
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9162
    :catchall_1
    move-exception v2

    .line 9163
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9162
    throw v2
.end method

.method public resizeTask(ILandroid/graphics/Rect;)V
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 8809
    const-string/jumbo v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 8810
    const-string/jumbo v4, "resizeTask()"

    .line 8809
    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8811
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8813
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8814
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 8815
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    if-nez v2, :cond_0

    .line 8816
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "resizeTask: taskId="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " not found"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8822
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8817
    return-void

    .line 8819
    :cond_0
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->resizeTaskLocked(Lcom/android/server/am/TaskRecord;Landroid/graphics/Rect;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8822
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8808
    return-void

    .line 8813
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit p0

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 8821
    :catchall_1
    move-exception v3

    .line 8822
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8821
    throw v3
.end method

.method public restart()V
    .locals 4

    .prologue
    .line 11585
    const-string/jumbo v2, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 11587
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 11591
    :cond_0
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Sending shutdown broadcast..."

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11593
    new-instance v0, Lcom/android/server/am/ActivityManagerService$13;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 11605
    .local v0, "br":Landroid/content/BroadcastReceiver;
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11606
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 11607
    const-string/jumbo v2, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v3, 0x1

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 11612
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v2, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    .line 11584
    return-void
.end method

.method public resumeAppSwitches()V
    .locals 2

    .prologue
    .line 10708
    const-string/jumbo v0, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 10710
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10714
    :cond_0
    monitor-enter p0

    .line 10718
    const-wide/16 v0, 0x0

    :try_start_0
    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 10707
    return-void

    .line 10714
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Landroid/net/Uri;II)V
    .locals 6
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "modeFlags"    # I
    .param p4, "userId"    # I

    .prologue
    .line 7986
    const-string/jumbo v3, "revokeUriPermission"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7987
    monitor-enter p0

    .line 7988
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 7989
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v2, :cond_0

    .line 7990
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Unable to find app for caller "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 7992
    const-string/jumbo v5, " when revoking permission to uri "

    .line 7990
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7987
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3

    .line 7994
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    .line 7995
    :try_start_1
    const-string/jumbo v3, "ActivityManager"

    const-string/jumbo v4, "revokeUriPermission: null uri"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 7996
    return-void

    .line 7999
    :cond_1
    :try_start_2
    invoke-static {p3}, Landroid/content/Intent;->isAccessUriMode(I)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v3

    if-nez v3, :cond_2

    monitor-exit p0

    .line 8000
    return-void

    .line 8003
    :cond_2
    :try_start_3
    invoke-virtual {p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 8004
    .local v0, "authority":Ljava/lang/String;
    invoke-direct {p0, v0, p4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v1

    .line 8005
    .local v1, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v1, :cond_3

    .line 8006
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 8007
    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    .line 8006
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 8008
    return-void

    .line 8011
    :cond_3
    :try_start_4
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x0

    invoke-direct {v4, p4, p2, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v3, v4, p3}, Lcom/android/server/am/ActivityManagerService;->revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    monitor-exit p0

    .line 7985
    return-void
.end method

.method public revokeUriPermissionFromOwner(Landroid/os/IBinder;Landroid/net/Uri;II)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "mode"    # I
    .param p4, "userId"    # I

    .prologue
    .line 8120
    monitor-enter p0

    .line 8121
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v0

    .line 8122
    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v0, :cond_0

    .line 8123
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Unknown owner: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8120
    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 8126
    .restart local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    if-nez p2, :cond_1

    .line 8127
    :try_start_1
    invoke-virtual {v0, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionsLocked(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_0
    monitor-exit p0

    .line 8119
    return-void

    .line 8129
    :cond_1
    :try_start_2
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v2, 0x0

    invoke-direct {v1, p4, p2, v2}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-virtual {v0, v1, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0
.end method

.method final scheduleAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 18833
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 18834
    .local v0, "now":J
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v0

    if-lez v2, :cond_0

    .line 18835
    return-void

    .line 18837
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 18838
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 18839
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 18832
    :cond_1
    return-void
.end method

.method final scheduleAppGcsLocked()V
    .locals 12

    .prologue
    const-wide/16 v10, 0x1388

    const/4 v8, 0x5

    const/4 v7, 0x0

    .line 18791
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 18793
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_1

    .line 18795
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 18796
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 18798
    .local v0, "msg":Landroid/os/Message;
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v8, 0xea60

    add-long v4, v6, v8

    .line 18799
    .local v4, "when":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 18800
    .local v2, "now":J
    add-long v6, v2, v10

    cmp-long v6, v4, v6

    if-gez v6, :cond_0

    .line 18801
    add-long v4, v2, v10

    .line 18803
    :cond_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 18790
    .end local v0    # "msg":Landroid/os/Message;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "now":J
    .end local v4    # "when":J
    :cond_1
    return-void
.end method

.method scheduleStartProfilesLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x28

    .line 20536
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 20537
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 20538
    const-wide/16 v2, 0x3e8

    .line 20537
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 20535
    :cond_0
    return-void
.end method

.method sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 20443
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;

    .line 20444
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 20445
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x23

    invoke-virtual {v1, v2, p2, p3, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20442
    return-void
.end method

.method sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 16439
    const/4 v0, 0x0

    .line 16440
    .local v0, "didSomething":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    array-length v4, v3

    .end local v0    # "didSomething":Z
    :goto_0
    if-ge v2, v4, :cond_0

    aget-object v1, v3, v2

    .line 16441
    .local v1, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v1, p1}, Lcom/android/server/am/BroadcastQueue;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    or-int/2addr v0, v5

    .line 16440
    .local v0, "didSomething":Z
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 16443
    .end local v0    # "didSomething":Z
    .end local v1    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return v0
.end method

.method sendUserSwitchBroadcastsLocked(II)V
    .locals 41
    .param p1, "oldUserId"    # I
    .param p2, "newUserId"    # I

    .prologue
    .line 20351
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v38

    .line 20354
    .local v38, "ident":J
    if-ltz p1, :cond_0

    .line 20356
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v40

    .line 20357
    .local v40, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v40 .. v40}, Ljava/util/List;->size()I

    move-result v36

    .line 20358
    .local v36, "count":I
    const/16 v37, 0x0

    .local v37, "i":I
    :goto_0
    move/from16 v0, v37

    move/from16 v1, v36

    if-ge v0, v1, :cond_0

    .line 20359
    move-object/from16 v0, v40

    move/from16 v1, v37

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v18, v0

    .line 20360
    .local v18, "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.USER_BACKGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20361
    .local v5, "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20363
    const-string/jumbo v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20366
    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20364
    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 20365
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    .line 20366
    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    .line 20364
    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 20358
    add-int/lit8 v37, v37, 0x1

    goto :goto_0

    .line 20369
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "profileUserId":I
    .end local v36    # "count":I
    .end local v37    # "i":I
    .end local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_0
    if-ltz p2, :cond_2

    .line 20371
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p2

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v40

    .line 20372
    .restart local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v40 .. v40}, Ljava/util/List;->size()I

    move-result v36

    .line 20373
    .restart local v36    # "count":I
    const/16 v37, 0x0

    .restart local v37    # "i":I
    :goto_1
    move/from16 v0, v37

    move/from16 v1, v36

    if-ge v0, v1, :cond_1

    .line 20374
    move-object/from16 v0, v40

    move/from16 v1, v37

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v18, v0

    .line 20375
    .restart local v18    # "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.USER_FOREGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20376
    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20378
    const-string/jumbo v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20381
    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20379
    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 20380
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    .line 20381
    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    .line 20379
    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 20373
    add-int/lit8 v37, v37, 0x1

    goto :goto_1

    .line 20383
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "profileUserId":I
    :cond_1
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.USER_SWITCHED"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20384
    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 20386
    const-string/jumbo v2, "android.intent.extra.user_handle"

    move/from16 v0, p2

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 20389
    const/4 v2, 0x1

    new-array v0, v2, [Ljava/lang/String;

    move-object/from16 v28, v0

    const-string/jumbo v2, "android.permission.MANAGE_USERS"

    const/4 v3, 0x0

    aput-object v2, v28, v3

    .line 20390
    sget v33, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 20387
    const/16 v20, 0x0

    const/16 v21, 0x0

    .line 20388
    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    .line 20390
    const/16 v29, -0x1

    const/16 v30, 0x0

    const/16 v31, 0x0

    const/16 v32, 0x0

    const/16 v34, 0x3e8

    .line 20391
    const/16 v35, -0x1

    move-object/from16 v19, p0

    move-object/from16 v22, v5

    .line 20387
    invoke-direct/range {v19 .. v35}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20394
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v36    # "count":I
    .end local v37    # "i":I
    .end local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_2
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20350
    return-void

    .line 20393
    :catchall_0
    move-exception v2

    .line 20394
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20393
    throw v2
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "startId"    # I
    .param p4, "res"    # I

    .prologue
    .line 16263
    monitor-enter p0

    .line 16264
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_0

    .line 16265
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16266
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16263
    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    .line 16268
    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;III)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 16262
    return-void
.end method

.method public setActivityController(Landroid/app/IActivityController;)V
    .locals 2
    .param p1, "controller"    # Landroid/app/IActivityController;

    .prologue
    .line 10841
    const-string/jumbo v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 10842
    const-string/jumbo v1, "setActivityController()"

    .line 10841
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10843
    monitor-enter p0

    .line 10844
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 10845
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 10840
    return-void

    .line 10843
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAlwaysFinish(Z)V
    .locals 3
    .param p1, "enabled"    # Z

    .prologue
    .line 10827
    const-string/jumbo v0, "android.permission.SET_ALWAYS_FINISH"

    .line 10828
    const-string/jumbo v1, "setAlwaysFinish()"

    .line 10827
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10831
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 10832
    const-string/jumbo v2, "always_finish_activities"

    if-eqz p1, :cond_0

    const/4 v0, 0x1

    .line 10830
    :goto_0
    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 10834
    monitor-enter p0

    .line 10835
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 10826
    return-void

    .line 10832
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 10834
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "waitForDebugger"    # Z
    .param p3, "persistent"    # Z

    .prologue
    .line 10752
    const-string/jumbo v0, "android.permission.SET_DEBUG_APP"

    .line 10753
    const-string/jumbo v1, "setDebugApp()"

    .line 10752
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10755
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 10760
    .local v10, "ident":J
    if-eqz p3, :cond_0

    .line 10761
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    .line 10763
    .local v12, "resolver":Landroid/content/ContentResolver;
    const-string/jumbo v0, "debug_app"

    .line 10762
    invoke-static {v12, v0, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 10766
    const-string/jumbo v1, "wait_for_debugger"

    .line 10767
    if-eqz p2, :cond_3

    const/4 v0, 0x1

    .line 10765
    :goto_0
    invoke-static {v12, v1, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 10770
    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10771
    if-nez p3, :cond_1

    .line 10772
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 10773
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 10775
    :cond_1
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 10776
    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 10777
    if-eqz p3, :cond_4

    const/4 v0, 0x0

    :goto_1
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 10778
    if-eqz p1, :cond_2

    .line 10780
    const-string/jumbo v9, "set debug app"

    .line 10779
    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    .line 10780
    const/4 v7, 0x0

    const/4 v8, -0x1

    move-object v0, p0

    move-object v1, p1

    .line 10779
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 10784
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10751
    return-void

    .line 10767
    .restart local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_3
    const/4 v0, 0x0

    goto :goto_0

    .line 10777
    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_4
    const/4 v0, 0x1

    goto :goto_1

    .line 10770
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10783
    :catchall_1
    move-exception v0

    .line 10784
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10783
    throw v0
.end method

.method public setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "maxMemSize"    # J
    .param p5, "reportPackage"    # Ljava/lang/String;

    .prologue
    .line 20016
    if-eqz p1, :cond_0

    .line 20017
    const-string/jumbo v1, "android.permission.SET_DEBUG_APP"

    .line 20018
    const-string/jumbo v2, "setDumpHeapDebugLimit()"

    .line 20017
    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 20038
    :goto_0
    monitor-enter p0

    .line 20039
    const-wide/16 v2, 0x0

    cmp-long v1, p3, v2

    if-lez v1, :cond_5

    .line 20040
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    new-instance v2, Landroid/util/Pair;

    invoke-static {p3, p4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-direct {v2, v3, p5}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v1, p1, p2, v2}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :goto_1
    monitor-exit p0

    .line 20015
    return-void

    .line 20020
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 20021
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 20022
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    .line 20023
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "No process found for calling pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 20024
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .line 20023
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20020
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit v2

    throw v1

    .line 20026
    .restart local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_2
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v1, :cond_2

    .line 20027
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_2

    .line 20028
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Not running a debuggable build"

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20030
    :cond_2
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 20031
    iget p2, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 20032
    if-eqz p5, :cond_3

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v1, p5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v1

    if-eqz v1, :cond_4

    :cond_3
    monitor-exit v2

    goto :goto_0

    .line 20033
    :cond_4
    :try_start_3
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " is not running in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 20042
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    if-eqz p2, :cond_6

    .line 20043
    :try_start_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    goto/16 :goto_1

    .line 20038
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1

    .line 20045
    :cond_6
    :try_start_5
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto/16 :goto_1
.end method

.method final setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
    .locals 9
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/16 v8, 0x35

    const/4 v7, 0x2

    const/4 v6, 0x0

    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 2750
    if-eqz p1, :cond_4

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-eq v1, p1, :cond_4

    .line 2752
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 2753
    .local v0, "last":Lcom/android/server/am/ActivityRecord;
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 2754
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget v1, v1, Lcom/android/server/am/TaskRecord;->taskType:I

    if-eq v1, v5, :cond_6

    .line 2755
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget v1, v1, Lcom/android/server/am/TaskRecord;->taskType:I

    if-eq v1, v7, :cond_6

    .line 2756
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eq v1, v2, :cond_5

    .line 2758
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_0

    .line 2759
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 2760
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2761
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 2760
    const/16 v3, 0x37

    invoke-virtual {v1, v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    .line 2762
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->clearOtherAppTimeTrackers(Lcom/android/server/am/AppTimeTracker;)V

    .line 2763
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 2765
    :cond_0
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_1

    .line 2766
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 2767
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    .line 2775
    :cond_1
    :goto_0
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v1, :cond_7

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->voiceInteractor:Lcom/android/internal/app/IVoiceInteractor;

    if-eqz v1, :cond_7

    .line 2776
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V

    .line 2787
    :cond_2
    :goto_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " setFocusedActivity"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->setFocusedStack(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 2788
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v1, v2, v5}, Lcom/android/server/wm/WindowManagerService;->setFocusedApp(Landroid/os/IBinder;Z)V

    .line 2790
    :cond_3
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 2791
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget v1, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    if-eq v1, v2, :cond_4

    .line 2792
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 2793
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2794
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget v3, v3, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 2793
    invoke-virtual {v2, v8, v3, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 2795
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget v1, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    .line 2798
    .end local v0    # "last":Lcom/android/server/am/ActivityRecord;
    :cond_4
    new-array v2, v7, [Ljava/lang/Object;

    .line 2799
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-nez v1, :cond_8

    const/4 v1, -0x1

    :goto_2
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    aput-object v1, v2, v6

    .line 2800
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-nez v1, :cond_9

    const-string/jumbo v1, "NULL"

    :goto_3
    aput-object v1, v2, v5

    .line 2798
    const/16 v1, 0x755b

    invoke-static {v1, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 2749
    return-void

    .line 2770
    .restart local v0    # "last":Lcom/android/server/am/ActivityRecord;
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    goto :goto_0

    .line 2773
    :cond_6
    iput-object v4, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    goto/16 :goto_0

    .line 2778
    :cond_7
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishRunningVoiceLocked()V

    .line 2779
    if-eqz v0, :cond_2

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_2

    .line 2784
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V

    goto :goto_1

    .line 2799
    .end local v0    # "last":Lcom/android/server/am/ActivityRecord;
    :cond_8
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget v1, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    goto :goto_2

    .line 2800
    :cond_9
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v1, v1, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    goto :goto_3
.end method

.method public setFocusedStack(I)V
    .locals 5
    .param p1, "stackId"    # I

    .prologue
    .line 2823
    monitor-enter p0

    .line 2824
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v1

    .line 2825
    .local v1, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v1, :cond_0

    .line 2826
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 2827
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 2828
    const-string/jumbo v2, "setFocusedStack"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V

    .line 2829
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {v2, v1, v3, v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked(Lcom/android/server/am/ActivityStack;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-exit p0

    .line 2821
    return-void

    .line 2823
    .end local v1    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setFrontActivityScreenCompatMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    .line 3738
    const-string/jumbo v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    .line 3739
    const-string/jumbo v1, "setFrontActivityScreenCompatMode"

    .line 3738
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3740
    monitor-enter p0

    .line 3741
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->setFrontActivityScreenCompatModeLocked(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3737
    return-void

    .line 3740
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setImmersive(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "immersive"    # Z

    .prologue
    .line 11322
    monitor-enter p0

    .line 11323
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 11324
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 11325
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11322
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 11327
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iput-boolean p2, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    .line 11330
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v0, v1, :cond_1

    .line 11332
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_1
    monitor-exit p0

    .line 11321
    return-void
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0
    .param p1, "installer"    # Lcom/android/server/pm/Installer;

    .prologue
    .line 2526
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    .line 2525
    return-void
.end method

.method public setLockScreenShown(Z)V
    .locals 4
    .param p1, "shown"    # Z

    .prologue
    const/4 v2, 0x0

    .line 10671
    const-string/jumbo v3, "android.permission.DEVICE_POWER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_0

    .line 10673
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires permission android.permission.DEVICE_POWER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10677
    :cond_0
    monitor-enter p0

    .line 10678
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 10681
    .local v0, "ident":J
    if-eqz p1, :cond_1

    const/4 v2, 0x2

    :cond_1
    :try_start_1
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 10682
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10684
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 10670
    return-void

    .line 10683
    :catchall_0
    move-exception v2

    .line 10684
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10683
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10677
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method setOpenGlTraceApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 4
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;

    .prologue
    .line 10789
    monitor-enter p0

    .line 10790
    :try_start_0
    const-string/jumbo v1, "1"

    const-string/jumbo v2, "ro.debuggable"

    const-string/jumbo v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 10791
    .local v0, "isDebuggable":Z
    if-nez v0, :cond_0

    .line 10792
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 10793
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Process not debuggable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10789
    .end local v0    # "isDebuggable":Z
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 10797
    .restart local v0    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 10788
    return-void
.end method

.method public setPackageAskScreenCompat(Ljava/lang/String;Z)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "ask"    # Z

    .prologue
    .line 3772
    const-string/jumbo v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    .line 3773
    const-string/jumbo v1, "setPackageAskScreenCompat"

    .line 3772
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3774
    monitor-enter p0

    .line 3775
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageAskCompatModeLocked(Ljava/lang/String;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3771
    return-void

    .line 3774
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "mode"    # I

    .prologue
    .line 3755
    const-string/jumbo v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    .line 3756
    const-string/jumbo v1, "setPackageScreenCompatMode"

    .line 3755
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3757
    monitor-enter p0

    .line 3758
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageScreenCompatModeLocked(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3754
    return-void

    .line 3757
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setProcessForeground(Landroid/os/IBinder;IZ)V
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pid"    # I
    .param p3, "isForeground"    # Z

    .prologue
    .line 7126
    const-string/jumbo v5, "android.permission.SET_PROCESS_LIMIT"

    .line 7127
    const-string/jumbo v6, "setProcessForeground()"

    .line 7126
    invoke-virtual {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 7128
    monitor-enter p0

    .line 7129
    const/4 v0, 0x0

    .line 7131
    .local v0, "changed":Z
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7132
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 7133
    .local v4, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v4, :cond_0

    if-eqz p3, :cond_0

    .line 7134
    const-string/jumbo v5, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setProcessForeground called on unknown pid: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 7135
    return-void

    .line 7137
    :cond_0
    :try_start_3
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v5, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .line 7138
    .local v3, "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eqz v3, :cond_2

    .line 7139
    iget-object v5, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    const/4 v7, 0x0

    invoke-interface {v5, v3, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 7140
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v5, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 7141
    if-eqz v4, :cond_1

    .line 7142
    const/4 v5, 0x0

    iput-object v5, v4, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 7144
    :cond_1
    const/4 v0, 0x1

    .line 7146
    :cond_2
    if-eqz p3, :cond_3

    if-eqz p1, :cond_3

    .line 7147
    new-instance v2, Lcom/android/server/am/ActivityManagerService$10;

    invoke-direct {v2, p0, p0}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityManagerService;)V

    .line 7153
    .local v2, "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    iput p2, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    .line 7154
    iput-object p1, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 7156
    const/4 v5, 0x0

    :try_start_4
    invoke-interface {p1, v2, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 7157
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v5, p2, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 7158
    iput-object p1, v4, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 7159
    const/4 v0, 0x1

    .end local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :cond_3
    :goto_0
    :try_start_5
    monitor-exit v6

    .line 7167
    if-eqz v0, :cond_4

    .line 7168
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :cond_4
    monitor-exit p0

    .line 7125
    return-void

    .line 7131
    .end local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v4    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v5

    :try_start_6
    monitor-exit v6

    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7128
    :catchall_1
    move-exception v5

    monitor-exit p0

    throw v5

    .line 7160
    .restart local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v4    # "pr":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public setProcessLimit(I)V
    .locals 2
    .param p1, "max"    # I

    .prologue
    .line 7088
    const-string/jumbo v0, "android.permission.SET_PROCESS_LIMIT"

    .line 7089
    const-string/jumbo v1, "setProcessLimit()"

    .line 7088
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 7090
    monitor-enter p0

    .line 7091
    if-gez p1, :cond_0

    :try_start_0
    sget v0, Lcom/android/server/am/ProcessList;->MAX_CACHED_APPS:I

    :goto_0
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    .line 7092
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 7094
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 7087
    return-void

    :cond_0
    move v0, p1

    .line 7091
    goto :goto_0

    .line 7090
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setProcessMemoryTrimLevel(Ljava/lang/String;II)Z
    .locals 5
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "level"    # I

    .prologue
    const/4 v4, 0x0

    .line 3825
    monitor-enter p0

    .line 3826
    :try_start_0
    const-string/jumbo v2, "setProcessMemoryTrimLevel"

    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 3827
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 3828
    return v4

    .line 3830
    :cond_0
    :try_start_1
    iget v2, v0, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v2, p3, :cond_2

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    .line 3831
    const/16 v2, 0x14

    if-lt p3, v2, :cond_1

    .line 3832
    iget v2, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    const/4 v3, 0x7

    if-lt v2, v3, :cond_2

    .line 3834
    :cond_1
    :try_start_2
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    .line 3835
    iput p3, v0, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 3836
    const/4 v2, 0x1

    monitor-exit p0

    return v2

    .line 3837
    :catch_0
    move-exception v1

    :cond_2
    monitor-exit p0

    .line 3842
    return v4

    .line 3825
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V
    .locals 5
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "profilerInfo"    # Landroid/app/ProfilerInfo;

    .prologue
    .line 10802
    monitor-enter p0

    .line 10803
    :try_start_0
    const-string/jumbo v2, "1"

    const-string/jumbo v3, "ro.debuggable"

    const-string/jumbo v4, "0"

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 10804
    .local v1, "isDebuggable":Z
    if-nez v1, :cond_0

    .line 10805
    iget v2, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_0

    .line 10806
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Process not debuggable: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10802
    .end local v1    # "isDebuggable":Z
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 10809
    .restart local v1    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 10810
    iget-object v2, p3, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    .line 10811
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v2, :cond_1

    .line 10813
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v2}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10816
    :goto_0
    const/4 v2, 0x0

    :try_start_3
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 10818
    :cond_1
    iget-object v2, p3, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 10819
    iget v2, p3, Landroid/app/ProfilerInfo;->samplingInterval:I

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 10820
    iget-boolean v2, p3, Landroid/app/ProfilerInfo;->autoStopProfiler:Z

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 10821
    const/4 v2, 0x0

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 10801
    return-void

    .line 10814
    :catch_0
    move-exception v0

    .local v0, "e":Ljava/io/IOException;
    goto :goto_0
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "requestedOrientation"    # I

    .prologue
    const/4 v4, 0x0

    .line 4367
    monitor-enter p0

    .line 4368
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    .line 4369
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    monitor-exit p0

    .line 4370
    return-void

    .line 4372
    :cond_0
    :try_start_1
    iget-object v5, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v5, :cond_1

    iget-object v5, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-boolean v5, v5, Lcom/android/server/am/TaskRecord;->mResizeable:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v5, :cond_1

    monitor-exit p0

    .line 4374
    return-void

    .line 4376
    :cond_1
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4377
    .local v2, "origId":J
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v5, v6, p2}, Lcom/android/server/wm/WindowManagerService;->setAppOrientation(Landroid/view/IApplicationToken;I)V

    .line 4378
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 4379
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget-object v7, v1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v1, v7}, Lcom/android/server/am/ActivityRecord;->mayFreezeScreenLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v7

    if-eqz v7, :cond_2

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    .line 4378
    :cond_2
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;

    move-result-object v0

    .line 4380
    .local v0, "config":Landroid/content/res/Configuration;
    if-eqz v0, :cond_3

    .line 4381
    const/4 v4, 0x1

    iput-boolean v4, v1, Lcom/android/server/am/ActivityRecord;->frozenBeforeDestroy:Z

    .line 4382
    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    move-result v4

    if-nez v4, :cond_3

    .line 4383
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 4386
    :cond_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 4366
    return-void

    .line 4367
    .end local v0    # "config":Landroid/content/res/Configuration;
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v2    # "origId":J
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
    .locals 6
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "id"    # I
    .param p4, "notification"    # Landroid/app/Notification;
    .param p5, "removeNotification"    # Z

    .prologue
    .line 16057
    monitor-enter p0

    .line 16058
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 16056
    return-void

    .line 16057
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setSystemProcess()V
    .locals 6

    .prologue
    .line 2270
    :try_start_0
    const-string/jumbo v3, "activity"

    const/4 v4, 0x1

    invoke-static {v3, p0, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;Z)V

    .line 2271
    const-string/jumbo v3, "procstats"

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2272
    const-string/jumbo v3, "meminfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2273
    const-string/jumbo v3, "gfxinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2274
    const-string/jumbo v3, "dbinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2276
    const-string/jumbo v3, "cpuinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$CpuBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$CpuBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2278
    const-string/jumbo v3, "permission"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2279
    const-string/jumbo v3, "processinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2281
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 2282
    const-string/jumbo v4, "android"

    const/16 v5, 0x400

    .line 2281
    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    .line 2283
    .local v2, "info":Landroid/content/pm/ApplicationInfo;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getClass()Ljava/lang/Class;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    .line 2285
    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 2286
    :try_start_1
    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 2287
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 2288
    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 2289
    const/16 v3, -0x10

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 2290
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v3}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 2291
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2292
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v3, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    monitor-exit v4

    .line 2294
    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, v0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 2295
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_4 .. :try_end_4} :catch_0

    .line 2268
    return-void

    .line 2291
    :catchall_0
    move-exception v3

    :try_start_5
    monitor-exit v4

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 2285
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v3

    :try_start_6
    monitor-exit p0

    throw v3
    :try_end_6
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_6 .. :try_end_6} :catch_0

    .line 2297
    .end local v2    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v1

    .line 2298
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v3, Ljava/lang/RuntimeException;

    .line 2299
    const-string/jumbo v4, "Unable to find android system package"

    .line 2298
    invoke-direct {v3, v4, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0
    .param p1, "mgr"    # Lcom/android/server/SystemServiceManager;

    .prologue
    .line 2522
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    .line 2521
    return-void
.end method

.method public setTaskDescription(Landroid/os/IBinder;Landroid/app/ActivityManager$TaskDescription;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "td"    # Landroid/app/ActivityManager$TaskDescription;

    .prologue
    .line 8782
    monitor-enter p0

    .line 8783
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 8784
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 8785
    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityRecord;->setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V

    .line 8786
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 8781
    return-void

    .line 8782
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setTaskResizeable(IZ)V
    .locals 4
    .param p1, "taskId"    # I
    .param p2, "resizeable"    # Z

    .prologue
    .line 8793
    monitor-enter p0

    .line 8794
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 8795
    .local v0, "task":Lcom/android/server/am/TaskRecord;
    if-nez v0, :cond_0

    .line 8796
    const-string/jumbo v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setTaskResizeable: taskId="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " not found"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 8797
    return-void

    .line 8799
    :cond_0
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/am/TaskRecord;->mResizeable:Z

    if-eq v1, p2, :cond_1

    .line 8800
    iput-boolean p2, v0, Lcom/android/server/am/TaskRecord;->mResizeable:Z

    .line 8801
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 8802
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_1
    monitor-exit p0

    .line 8792
    return-void

    .line 8793
    .end local v0    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setTestPssMode(Z)V
    .locals 4
    .param p1, "enabled"    # Z

    .prologue
    .line 18699
    monitor-enter p0

    .line 18700
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 18701
    if-eqz p1, :cond_0

    .line 18704
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const/4 v2, 0x1

    const/4 v3, 0x1

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 18698
    return-void

    .line 18699
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 0
    .param p1, "usageStatsManager"    # Landroid/app/usage/UsageStatsManagerInternal;

    .prologue
    .line 2309
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2308
    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 6
    .param p1, "userIsMonkey"    # Z

    .prologue
    .line 10851
    monitor-enter p0

    .line 10852
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10853
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 10854
    .local v0, "callingPid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 10855
    .local v1, "precessRecord":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_0

    .line 10856
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10852
    .end local v0    # "callingPid":I
    .end local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v3

    throw v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 10851
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2

    .line 10858
    .restart local v0    # "callingPid":I
    .restart local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_3
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-nez v2, :cond_1

    .line 10859
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_1
    :try_start_4
    monitor-exit v3

    .line 10863
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    monitor-exit p0

    .line 10850
    return-void
.end method

.method public setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V
    .locals 2
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p2, "keepAwake"    # Z

    .prologue
    .line 4158
    monitor-enter p0

    .line 4159
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {v0}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    if-ne v0, v1, :cond_0

    .line 4160
    if-eqz p2, :cond_1

    .line 4161
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    :goto_0
    monitor-exit p0

    .line 4157
    return-void

    .line 4163
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 4158
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1
    .param p1, "wm"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 2304
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 2305
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 2303
    return-void
.end method

.method public shouldUpRecreateTask(Landroid/os/IBinder;Ljava/lang/String;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destAffinity"    # Ljava/lang/String;

    .prologue
    .line 17758
    monitor-enter p0

    .line 17759
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 17760
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 17761
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStack;->shouldUpRecreateTaskLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    :cond_0
    monitor-exit p0

    .line 17764
    const/4 v1, 0x0

    return v1

    .line 17758
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method final showAskCompatModeDialogLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 2867
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 2868
    .local v0, "msg":Landroid/os/Message;
    const/16 v1, 0x1e

    iput v1, v0, Landroid/os/Message;->what:I

    .line 2869
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-boolean v1, v1, Lcom/android/server/am/TaskRecord;->askedCompatMode:Z

    if-eqz v1, :cond_0

    const/4 p1, 0x0

    .end local p1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 2870
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 2866
    return-void
.end method

.method public showAssistFromActivity(Landroid/os/IBinder;Landroid/os/Bundle;)Z
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "args"    # Landroid/os/Bundle;

    .prologue
    const/4 v8, 0x0

    .line 11012
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 11014
    .local v2, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11015
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 11016
    .local v0, "caller":Lcom/android/server/am/ActivityRecord;
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 11017
    .local v1, "top":Lcom/android/server/am/ActivityRecord;
    if-eq v1, v0, :cond_0

    .line 11018
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "showAssistFromActivity failed: caller "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 11019
    const-string/jumbo v7, " is not current top "

    .line 11018
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11032
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11020
    return v8

    .line 11022
    :cond_0
    :try_start_3
    iget-boolean v5, v1, Lcom/android/server/am/ActivityRecord;->nowVisible:Z

    if-nez v5, :cond_1

    .line 11023
    const-string/jumbo v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "showAssistFromActivity failed: caller "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 11024
    const-string/jumbo v7, " is not visible"

    .line 11023
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11032
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11025
    return v8

    :cond_1
    :try_start_5
    monitor-exit p0

    .line 11028
    new-instance v4, Lcom/android/internal/app/AssistUtils;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v4, v5}, Lcom/android/internal/app/AssistUtils;-><init>(Landroid/content/Context;)V

    .line 11030
    .local v4, "utils":Lcom/android/internal/app/AssistUtils;
    const/16 v5, 0x8

    const/4 v6, 0x0

    .line 11029
    invoke-virtual {v4, p2, v5, v6, p1}, Lcom/android/internal/app/AssistUtils;->showSessionForActiveService(Landroid/os/Bundle;ILcom/android/internal/app/IVoiceInteractionSessionShowCallback;Landroid/os/IBinder;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-result v5

    .line 11032
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11029
    return v5

    .line 11014
    .end local v0    # "caller":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "top":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "utils":Lcom/android/internal/app/AssistUtils;
    :catchall_0
    move-exception v5

    :try_start_6
    monitor-exit p0

    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 11031
    :catchall_1
    move-exception v5

    .line 11032
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11031
    throw v5
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 2
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 6448
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-eq v0, v1, :cond_0

    .line 6452
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 6447
    return-void
.end method

.method final showLaunchWarningLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "cur"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "next"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 5258
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    if-nez v0, :cond_0

    .line 5259
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 5260
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$5;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->post(Ljava/lang/Runnable;)Z

    .line 5257
    :cond_0
    return-void
.end method

.method public showLockTaskEscapeMessage(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 9388
    monitor-enter p0

    .line 9389
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 9390
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 9391
    return-void

    .line 9393
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskEscapeMessageLocked(Lcom/android/server/am/TaskRecord;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 9387
    return-void

    .line 9388
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final showSafeModeOverlay()V
    .locals 6

    .prologue
    const/4 v5, -0x2

    .line 11383
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v2}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v2

    .line 11384
    const v3, 0x10900c5

    const/4 v4, 0x0

    .line 11383
    invoke-virtual {v2, v3, v4}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v1

    .line 11385
    .local v1, "v":Landroid/view/View;
    new-instance v0, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v0}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .line 11386
    .local v0, "lp":Landroid/view/WindowManager$LayoutParams;
    const/16 v2, 0x7df

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 11387
    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 11388
    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 11389
    const v2, 0x800053

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 11390
    invoke-virtual {v1}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 11391
    const/16 v2, 0x18

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 11393
    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 11394
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 11395
    const-string/jumbo v3, "window"

    .line 11394
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManager;

    invoke-interface {v2, v1, v0}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 11382
    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 3
    .param p1, "who"    # Landroid/app/IApplicationThread;
    .param p2, "waiting"    # Z

    .prologue
    .line 8428
    monitor-enter p0

    .line 8430
    if-eqz p1, :cond_0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 8431
    :goto_0
    if-nez v0, :cond_1

    monitor-exit p0

    return-void

    .line 8430
    :cond_0
    const/4 v0, 0x0

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 8433
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v1

    .line 8434
    .local v1, "msg":Landroid/os/Message;
    const/4 v2, 0x6

    iput v2, v1, Landroid/os/Message;->what:I

    .line 8435
    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 8436
    if-eqz p2, :cond_2

    const/4 v2, 0x1

    :goto_1
    iput v2, v1, Landroid/os/Message;->arg1:I

    .line 8437
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 8427
    return-void

    .line 8436
    :cond_2
    const/4 v2, 0x0

    goto :goto_1

    .line 8428
    .end local v1    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public shutdown(I)Z
    .locals 3
    .param p1, "timeout"    # I

    .prologue
    .line 10596
    const-string/jumbo v1, "android.permission.SHUTDOWN"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 10598
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10602
    :cond_0
    const/4 v0, 0x0

    .line 10604
    .local v0, "timedout":Z
    monitor-enter p0

    .line 10605
    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 10606
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 10607
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->shutdownLocked(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    .local v0, "timedout":Z
    monitor-exit p0

    .line 10610
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/AppOpsService;->shutdown()V

    .line 10611
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_1

    .line 10612
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v1}, Landroid/app/usage/UsageStatsManagerInternal;->prepareShutdown()V

    .line 10614
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    .line 10615
    monitor-enter p0

    .line 10616
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->shutdownLocked()V

    .line 10617
    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    .line 10620
    return v0

    .line 10604
    .local v0, "timedout":Z
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 10615
    .local v0, "timedout":Z
    :catchall_1
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public signalPersistentProcesses(I)V
    .locals 4
    .param p1, "sig"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 19819
    const/16 v2, 0xa

    if-eq p1, v2, :cond_0

    .line 19820
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Only SIGNAL_USR1 is allowed"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 19823
    :cond_0
    monitor-enter p0

    .line 19824
    :try_start_0
    const-string/jumbo v2, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_1

    .line 19826
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19823
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 19830
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 19831
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 19832
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_2

    .line 19833
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2, p1}, Landroid/os/Process;->sendSignal(II)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19830
    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit p0

    .line 19818
    return-void
.end method

.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 12329
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    array-length v3, v2

    :goto_0
    if-ge v1, v3, :cond_0

    aget-object v0, v2, v1

    .line 12330
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12329
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 12328
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method skipPendingBroadcastLocked(I)V
    .locals 4
    .param p1, "pid"    # I

    .prologue
    .line 16431
    const-string/jumbo v1, "ActivityManager"

    const-string/jumbo v2, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16432
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    array-length v3, v2

    :goto_0
    if-ge v1, v3, :cond_0

    aget-object v0, v2, v1

    .line 16433
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->skipPendingBroadcastLocked(I)V

    .line 16432
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 16430
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public final startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    .line 4333
    const-string/jumbo v0, "startActivities"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4334
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 4335
    const-string/jumbo v6, "startActivity"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p7

    .line 4334
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 4337
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, -0x1

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v9

    .line 4339
    .local v9, "ret":I
    return v9
.end method

.method final startActivitiesInPackage(ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 10
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    .line 4346
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 4347
    const-string/jumbo v6, "startActivityInPackage"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p7

    .line 4346
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 4349
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v1, 0x0

    move v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v9

    .line 4351
    .local v9, "ret":I
    return v9
.end method

.method public final startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 12
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;

    .prologue
    .line 3975
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    .line 3973
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/IActivityManager$WaitResult;
    .locals 21
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 4074
    const-string/jumbo v1, "startActivityAndWait"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4075
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 4076
    const-string/jumbo v7, "startActivityAndWait"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    .line 4075
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 4077
    new-instance v14, Landroid/app/IActivityManager$WaitResult;

    invoke-direct {v14}, Landroid/app/IActivityManager$WaitResult;-><init>()V

    .line 4079
    .local v14, "res":Landroid/app/IActivityManager$WaitResult;
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    .line 4080
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v15, 0x0

    .line 4081
    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    .line 4079
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    .line 4082
    return-object v14
.end method

.method public final startActivityAsCaller(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;ZI)I
    .locals 24
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "ignoreTargetSecurity"    # Z
    .param p12, "userId"    # I

    .prologue
    .line 4004
    monitor-enter p0

    .line 4005
    if-nez p5, :cond_0

    .line 4006
    :try_start_0
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Must be called from an activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4004
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 4008
    :cond_0
    :try_start_1
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p5

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v23

    .line 4009
    .local v23, "sourceRecord":Lcom/android/server/am/ActivityRecord;
    if-nez v23, :cond_1

    .line 4010
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Called with bad activity token: "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4012
    :cond_1
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v2, "android"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 4013
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v2, "org.cyanogenmod.resolver"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 4017
    :cond_2
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_4

    .line 4018
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Called without a process attached to activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4014
    :cond_3
    new-instance v1, Ljava/lang/SecurityException;

    .line 4015
    const-string/jumbo v2, "Must be called from an activity that is declared in the android package"

    .line 4014
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4020
    :cond_4
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_5

    .line 4023
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    if-eq v1, v2, :cond_5

    .line 4024
    new-instance v1, Ljava/lang/SecurityException;

    .line 4025
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Calling activity in uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v23

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 4026
    const-string/jumbo v5, " must be system uid or original calling uid "

    .line 4025
    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 4027
    move-object/from16 v0, v23

    iget v5, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 4025
    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4024
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4030
    :cond_5
    if-eqz p11, :cond_7

    .line 4031
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_6

    .line 4032
    new-instance v1, Ljava/lang/SecurityException;

    .line 4033
    const-string/jumbo v2, "Component must be specified with ignoreTargetSecurity"

    .line 4032
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4035
    :cond_6
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v1

    if-eqz v1, :cond_7

    .line 4036
    new-instance v1, Ljava/lang/SecurityException;

    .line 4037
    const-string/jumbo v2, "Selector not allowed with ignoreTargetSecurity"

    .line 4036
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4040
    :cond_7
    move-object/from16 v0, v23

    iget v3, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 4041
    .local v3, "targetUid":I
    move-object/from16 v0, v23

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v4, "targetPackage":Ljava/lang/String;
    monitor-exit p0

    .line 4044
    const/16 v1, -0x2710

    move/from16 v0, p12

    if-ne v0, v1, :cond_8

    .line 4045
    move-object/from16 v0, v23

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p12

    .line 4050
    :cond_8
    :try_start_2
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    .line 4051
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    .line 4052
    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p10

    move/from16 v17, p11

    move/from16 v18, p12

    .line 4050
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    :try_end_2
    .catch Ljava/lang/SecurityException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v22

    .line 4053
    .local v22, "ret":I
    return v22

    .line 4054
    .end local v22    # "ret":I
    :catch_0
    move-exception v21

    .line 4066
    .local v21, "e":Ljava/lang/SecurityException;
    throw v21
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 21
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 3982
    const-string/jumbo v1, "startActivity"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3983
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 3984
    const-string/jumbo v7, "startActivity"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    .line 3983
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 3986
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    .line 3987
    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 3988
    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    .line 3986
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    return v1
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    .line 4277
    const-string/jumbo v1, "android.permission.START_TASKS_FROM_RECENTS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 4278
    const-string/jumbo v0, "Permission Denial: startActivityFromRecents called without android.permission.START_TASKS_FROM_RECENTS"

    .line 4280
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4281
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4283
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->startActivityFromRecentsInner(ILandroid/os/Bundle;)I

    move-result v1

    return v1
.end method

.method final startActivityFromRecentsInner(ILandroid/os/Bundle;)I
    .locals 13
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    const/4 v7, 0x0

    const/4 v4, 0x0

    .line 4292
    monitor-enter p0

    .line 4293
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v12

    .line 4294
    .local v12, "task":Lcom/android/server/am/TaskRecord;
    if-nez v12, :cond_0

    .line 4295
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Task "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " not found."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4292
    .end local v12    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    .line 4297
    .restart local v12    # "task":Lcom/android/server/am/TaskRecord;
    :cond_0
    :try_start_1
    invoke-virtual {v12}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 4298
    iget v0, v12, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4299
    const/4 v0, 0x2

    monitor-exit p0

    return v0

    .line 4301
    :cond_1
    :try_start_2
    iget v1, v12, Lcom/android/server/am/TaskRecord;->mCallingUid:I

    .line 4302
    .local v1, "callingUid":I
    iget-object v2, v12, Lcom/android/server/am/TaskRecord;->mCallingPackage:Ljava/lang/String;

    .line 4303
    .local v2, "callingPackage":Ljava/lang/String;
    iget-object v3, v12, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    .line 4304
    .local v3, "intent":Landroid/content/Intent;
    iget-object v0, v12, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    if-eqz v0, :cond_2

    .line 4305
    iget-object v0, v12, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    invoke-virtual {v3, v0}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4307
    :cond_2
    const/high16 v0, 0x100000

    invoke-virtual {v3, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 4308
    iget v10, v12, Lcom/android/server/am/TaskRecord;->userId:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .local v10, "userId":I
    monitor-exit p0

    move-object v0, p0

    move-object v5, v4

    move-object v6, v4

    move v8, v7

    move-object v9, p2

    move-object v11, v4

    .line 4310
    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/ActivityManagerService;->startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v0

    return v0
.end method

.method final startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    .locals 22
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I
    .param p11, "container"    # Landroid/app/IActivityContainer;
    .param p12, "inTask"    # Lcom/android/server/am/TaskRecord;

    .prologue
    .line 4319
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 4320
    const-string/jumbo v7, "startActivityInPackage"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    .line 4319
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p10

    .line 4323
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    .line 4324
    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 4325
    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x0

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p9

    move/from16 v18, p10

    move-object/from16 v19, p11

    move-object/from16 v20, p12

    .line 4323
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v21

    .line 4326
    .local v21, "ret":I
    return v21
.end method

.method public startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
    .locals 18
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/IntentSender;
    .param p3, "fillInIntent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "flagsMask"    # I
    .param p9, "flagsValues"    # I
    .param p10, "options"    # Landroid/os/Bundle;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 4104
    const-string/jumbo v3, "startActivityIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4106
    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 4107
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "File descriptors passed in Intent"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4110
    :cond_0
    invoke-virtual/range {p2 .. p2}, Landroid/content/IntentSender;->getTarget()Landroid/content/IIntentSender;

    move-result-object v16

    .line 4111
    .local v16, "sender":Landroid/content/IIntentSender;
    move-object/from16 v0, v16

    instance-of v3, v0, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_1

    .line 4112
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "Bad PendingIntent object"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_1
    move-object/from16 v2, v16

    .line 4115
    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 4117
    .local v2, "pir":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0

    .line 4120
    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v17

    .line 4121
    .local v17, "stack":Lcom/android/server/am/ActivityStack;
    move-object/from16 v0, v17

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v3, :cond_2

    .line 4122
    move-object/from16 v0, v17

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    if-ne v3, v4, :cond_2

    .line 4123
    const-wide/16 v4, 0x0

    move-object/from16 v0, p0

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_2
    monitor-exit p0

    .line 4126
    const/4 v3, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 4127
    const/4 v14, 0x0

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v8, p5

    move-object/from16 v9, p6

    move/from16 v10, p7

    move/from16 v11, p8

    move/from16 v12, p9

    move-object/from16 v13, p10

    .line 4126
    invoke-virtual/range {v2 .. v14}, Lcom/android/server/am/PendingIntentRecord;->sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;Landroid/app/IActivityContainer;)I

    move-result v15

    .line 4128
    .local v15, "ret":I
    return v15

    .line 4117
    .end local v15    # "ret":I
    .end local v17    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public final startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I
    .locals 22
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "config"    # Landroid/content/res/Configuration;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 4089
    const-string/jumbo v1, "startActivityWithConfig"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4090
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 4091
    const-string/jumbo v7, "startActivityWithConfig"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    .line 4090
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 4093
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    .line 4094
    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 4095
    const/4 v13, 0x0

    const/4 v14, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v15, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    .line 4093
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v21

    .line 4096
    .local v21, "ret":I
    return v21
.end method

.method startAlarmActivityLocked()V
    .locals 3

    .prologue
    .line 3624
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "org.codeaurora.alarm.action.POWER_OFF_ALARM"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3625
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x10000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 3626
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 3623
    return-void
.end method

.method startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 12317
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    .line 12319
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    const/4 v1, 0x0

    array-length v3, v2

    :goto_0
    if-ge v1, v3, :cond_1

    aget v0, v2, v1

    .line 12320
    .local v0, "userId":I
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v4, v0, :cond_0

    .line 12322
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 12321
    invoke-static {v4, v5, v6}, Landroid/app/ApplicationErrorReport;->getErrorReportReceiver(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v4

    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    .line 12319
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 12325
    .end local v0    # "userId":I
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12313
    return-void
.end method

.method startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 9
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;
    .param p5, "targetProcess"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 17837
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v1, :cond_0

    .line 17838
    return-object v2

    .line 17841
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 17842
    .local v6, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v6, :cond_1

    .line 17843
    new-instance v6, Landroid/util/ArrayMap;

    .end local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    invoke-direct {v6}, Landroid/util/ArrayMap;-><init>()V

    .line 17844
    .restart local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3, v6}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 17846
    :cond_1
    invoke-virtual {v6, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/SparseArray;

    .line 17847
    .local v8, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v8, :cond_2

    .line 17848
    new-instance v8, Landroid/util/SparseArray;

    .end local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-direct {v8}, Landroid/util/SparseArray;-><init>()V

    .line 17849
    .restart local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-virtual {v6, p4, v8}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17851
    :cond_2
    invoke-virtual {v8, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .line 17852
    .local v7, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v7, :cond_3

    .line 17853
    new-instance v7, Landroid/util/ArrayMap;

    .end local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-direct {v7}, Landroid/util/ArrayMap;-><init>()V

    .line 17854
    .restart local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-virtual {v8, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 17856
    :cond_3
    invoke-virtual {v7, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .line 17857
    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-nez v0, :cond_4

    .line 17858
    new-instance v0, Lcom/android/server/am/ActivityManagerService$Association;

    .end local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    move v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    .line 17860
    .restart local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    invoke-virtual {v7, p2, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17862
    :cond_4
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    .line 17863
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 17864
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v2, 0x1

    if-ne v1, v2, :cond_5

    .line 17865
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    .line 17867
    :cond_5
    return-object v0
.end method

.method startHomeActivityLocked(ILjava/lang/String;)Z
    .locals 8
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v7, 0x1

    .line 3592
    iget v4, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v4, v7, :cond_0

    .line 3593
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    if-nez v4, :cond_0

    .line 3597
    const/4 v4, 0x0

    return v4

    .line 3599
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent()Landroid/content/Intent;

    move-result-object v3

    .line 3601
    .local v3, "intent":Landroid/content/Intent;
    const/16 v4, 0x400

    invoke-direct {p0, v3, v4, p1}, Lcom/android/server/am/ActivityManagerService;->resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 3602
    .local v0, "aInfo":Landroid/content/pm/ActivityInfo;
    if-eqz v0, :cond_2

    .line 3603
    new-instance v4, Landroid/content/ComponentName;

    .line 3604
    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 3603
    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v4}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 3607
    new-instance v1, Landroid/content/pm/ActivityInfo;

    invoke-direct {v1, v0}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 3608
    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .local v1, "aInfo":Landroid/content/pm/ActivityInfo;
    iget-object v4, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v4, p1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    iput-object v4, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 3609
    iget-object v4, v1, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    .line 3610
    iget-object v5, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3609
    invoke-virtual {p0, v4, v5, v7}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 3611
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_1

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v4, :cond_3

    .line 3612
    :cond_1
    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v5, 0x10000000

    or-int/2addr v4, v5

    invoke-virtual {v3, v4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 3613
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v3, v1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->startHomeActivity(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/String;)V

    move-object v0, v1

    .line 3617
    .end local v1    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    :cond_2
    :goto_0
    return v7

    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v1    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_3
    move-object v0, v1

    .line 3611
    .end local v1    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_0
.end method

.method public startInPlaceAnimationOnFrontMostApplication(Landroid/app/ActivityOptions;)V
    .locals 3
    .param p1, "opts"    # Landroid/app/ActivityOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v2, 0x0

    .line 8838
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v0

    const/16 v1, 0xa

    if-ne v0, v1, :cond_0

    .line 8839
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v0

    if-nez v0, :cond_1

    .line 8840
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Expected in-place ActivityOption with valid animation"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8843
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/16 v1, 0x11

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    .line 8844
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 8845
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v2

    .line 8844
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransitionInPlace(Ljava/lang/String;I)V

    .line 8846
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    .line 8837
    return-void
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 24
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "profileFile"    # Ljava/lang/String;
    .param p3, "flags"    # I
    .param p4, "arguments"    # Landroid/os/Bundle;
    .param p5, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p6, "uiAutomationConnection"    # Landroid/app/IUiAutomationConnection;
    .param p7, "userId"    # I
    .param p8, "abiOverride"    # Ljava/lang/String;

    .prologue
    .line 17372
    const-string/jumbo v4, "startInstrumentation"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 17373
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 17374
    const-string/jumbo v10, "startInstrumentation"

    const/4 v8, 0x0

    const/4 v9, 0x2

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p7

    .line 17373
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 17376
    if-eqz p4, :cond_0

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 17377
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v5, "File descriptors passed in Bundle"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 17380
    :cond_0
    monitor-enter p0

    .line 17381
    const/16 v18, 0x0

    .line 17382
    .local v18, "ii":Landroid/content/pm/InstrumentationInfo;
    const/4 v14, 0x0

    .line 17384
    .local v14, "ai":Landroid/content/pm/ApplicationInfo;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 17385
    const/16 v5, 0x400

    .line 17384
    move-object/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;

    move-result-object v18

    .line 17386
    .local v18, "ii":Landroid/content/pm/InstrumentationInfo;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 17387
    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/16 v6, 0x400

    .line 17386
    move/from16 v0, p7

    invoke-interface {v4, v5, v6, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v14

    .line 17391
    .end local v14    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v18    # "ii":Landroid/content/pm/InstrumentationInfo;
    :goto_0
    if-nez v18, :cond_1

    .line 17393
    :try_start_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Unable to find instrumentation info for: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 17392
    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 17394
    const/4 v4, 0x0

    monitor-exit p0

    return v4

    .line 17396
    :cond_1
    if-nez v14, :cond_2

    .line 17398
    :try_start_2
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Unable to find instrumentation target package: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 17397
    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 17399
    const/4 v4, 0x0

    monitor-exit p0

    return v4

    .line 17402
    :cond_2
    :try_start_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 17403
    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    move-object/from16 v0, v18

    iget-object v6, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    .line 17402
    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v19

    .line 17404
    .local v19, "match":I
    if-gez v19, :cond_3

    const/4 v4, -0x1

    move/from16 v0, v19

    if-eq v0, v4, :cond_3

    .line 17405
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Permission Denial: starting instrumentation "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17406
    const-string/jumbo v5, " from pid="

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17407
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17408
    const-string/jumbo v5, ", uid="

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17408
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17409
    const-string/jumbo v5, " not allowed because package "

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17409
    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17410
    const-string/jumbo v5, " does not have a signature matching the target "

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 17411
    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    .line 17405
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    .line 17412
    .local v20, "msg":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    move-object/from16 v3, v20

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 17413
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v20

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 17380
    .end local v19    # "match":I
    .end local v20    # "msg":Ljava/lang/String;
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .line 17416
    .restart local v19    # "match":I
    :cond_3
    :try_start_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v22

    .line 17418
    .local v22, "origId":J
    move-object/from16 v0, v18

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    .line 17419
    const-string/jumbo v13, "start instr"

    .line 17418
    const/4 v6, -0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x1

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v12, p7

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 17420
    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p8

    invoke-virtual {v0, v14, v4, v1}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    .line 17421
    .local v15, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 17422
    iput-object v14, v15, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 17423
    move-object/from16 v0, p2

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    .line 17424
    move-object/from16 v0, p4

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    .line 17425
    move-object/from16 v0, p5

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 17426
    move-object/from16 v0, p6

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 17427
    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationResultClass:Landroid/content/ComponentName;

    .line 17428
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    monitor-exit p0

    .line 17431
    const/4 v4, 0x1

    return v4

    .line 17388
    .end local v15    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "match":I
    .end local v22    # "origId":J
    .restart local v14    # "ai":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v16

    .local v16, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    goto/16 :goto_0

    .line 17389
    .end local v16    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :catch_1
    move-exception v17

    .local v17, "e":Landroid/os/RemoteException;
    goto/16 :goto_0
.end method

.method startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)I
    .locals 17
    .param p1, "entryPoint"    # Ljava/lang/String;
    .param p2, "entryPointArgs"    # [Ljava/lang/String;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "uid"    # I
    .param p6, "crashHandler"    # Ljava/lang/Runnable;

    .prologue
    .line 3188
    monitor-enter p0

    .line 3189
    :try_start_0
    new-instance v3, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v3}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .line 3198
    .local v3, "info":Landroid/content/pm/ApplicationInfo;
    const/16 v1, 0x3e8

    iput v1, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3199
    move-object/from16 v0, p3

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 3200
    move-object/from16 v0, p1

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    .line 3201
    const-string/jumbo v1, "android"

    iput-object v1, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 3203
    const-string/jumbo v6, ""

    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 3204
    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    .line 3205
    const/4 v11, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p3

    move/from16 v10, p5

    move-object/from16 v12, p4

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p6

    .line 3202
    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v16

    .line 3207
    .local v16, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v16, :cond_0

    move-object/from16 v0, v16

    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 3188
    .end local v3    # "info":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public startLockTaskMode(I)V
    .locals 2
    .param p1, "taskId"    # I

    .prologue
    .line 9287
    monitor-enter p0

    .line 9288
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 9289
    .local v0, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_0

    .line 9290
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 9286
    return-void

    .line 9287
    .end local v0    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public startLockTaskMode(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 9297
    monitor-enter p0

    .line 9298
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    .line 9299
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    .line 9300
    return-void

    .line 9302
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 9303
    .local v1, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v1, :cond_1

    .line 9304
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_1
    monitor-exit p0

    .line 9296
    return-void

    .line 9297
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V
    .locals 10
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v6, 0x1

    .line 9245
    iget v7, p1, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    if-nez v7, :cond_0

    .line 9246
    return-void

    .line 9252
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9253
    .local v0, "callingUid":I
    const/16 v7, 0x3e8

    if-ne v0, v7, :cond_2

    const/4 v1, 0x1

    .line 9254
    .local v1, "isSystemInitiated":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9256
    .local v2, "ident":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v4

    .line 9257
    .local v4, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v1, :cond_5

    .line 9258
    iput v0, p1, Lcom/android/server/am/TaskRecord;->mLockTaskUid:I

    .line 9259
    iget v7, p1, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    if-ne v7, v6, :cond_3

    .line 9263
    const-class v6, Lcom/android/server/statusbar/StatusBarManagerInternal;

    invoke-static {v6}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/statusbar/StatusBarManagerInternal;

    .line 9264
    .local v5, "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    if-eqz v5, :cond_1

    .line 9265
    invoke-interface {v5}, Lcom/android/server/statusbar/StatusBarManagerInternal;->showScreenPinningRequest()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9281
    :cond_1
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9267
    return-void

    .line 9253
    .end local v1    # "isSystemInitiated":Z
    .end local v2    # "ident":J
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v5    # "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    :cond_2
    const/4 v1, 0x0

    .restart local v1    # "isSystemInitiated":Z
    goto :goto_0

    .line 9270
    .restart local v2    # "ident":J
    .restart local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_3
    if-eqz v4, :cond_4

    :try_start_1
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->topTask()Lcom/android/server/am/TaskRecord;

    move-result-object v7

    if-eq p1, v7, :cond_5

    .line 9271
    :cond_4
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v7, "Invalid task, not in foreground"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9280
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v6

    .line 9281
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9280
    throw v6

    .line 9276
    .restart local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_5
    :try_start_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    if-eqz v1, :cond_6

    .line 9277
    const/4 v6, 0x2

    .line 9279
    :cond_6
    const-string/jumbo v8, "startLockTask"

    const/4 v9, 0x1

    .line 9276
    invoke-virtual {v7, p1, v6, v8, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9281
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9243
    return-void
.end method

.method public startLockTaskModeOnCurrent()V
    .locals 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 9311
    const-string/jumbo v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9312
    const-string/jumbo v4, "startLockTaskModeOnCurrent"

    .line 9311
    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9313
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9315
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9316
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 9317
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 9318
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9322
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9310
    return-void

    .line 9315
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9321
    :catchall_1
    move-exception v3

    .line 9322
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9321
    throw v3
.end method

.method public startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z
    .locals 36
    .param p1, "callingActivity"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    .line 4173
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4174
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 4177
    :cond_0
    monitor-enter p0

    .line 4178
    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v30

    .line 4179
    .local v30, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v30, :cond_1

    .line 4180
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4181
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4183
    :cond_1
    :try_start_1
    move-object/from16 v0, v30

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_2

    move-object/from16 v0, v30

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_3

    .line 4185
    :cond_2
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4186
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4188
    :cond_3
    :try_start_2
    new-instance v4, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 4190
    .end local p2    # "intent":Landroid/content/Intent;
    .local v4, "intent":Landroid/content/Intent;
    :try_start_3
    move-object/from16 v0, v30

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getType()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v2, v3}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;

    .line 4192
    const/4 v2, 0x0

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4194
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v2

    and-int/lit8 v2, v2, 0x8

    if-eqz v2, :cond_7

    const/16 v25, 0x1

    .line 4196
    .local v25, "debug":Z
    :goto_0
    const/4 v6, 0x0

    .line 4199
    .local v6, "aInfo":Landroid/content/pm/ActivityInfo;
    :try_start_4
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 4200
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    .line 4202
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v5

    .line 4201
    const v7, 0x10400

    .line 4199
    invoke-interface {v2, v4, v3, v7, v5}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v33

    .line 4205
    .local v33, "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v33, :cond_8

    invoke-interface/range {v33 .. v33}, Ljava/util/List;->size()I

    move-result v24

    .line 4206
    .local v24, "N":I
    :goto_1
    const/16 v27, 0x0

    .local v27, "i":I
    :goto_2
    move/from16 v0, v27

    move/from16 v1, v24

    if-ge v0, v1, :cond_5

    .line 4207
    move-object/from16 v0, v33

    move/from16 v1, v27

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Landroid/content/pm/ResolveInfo;

    .line 4208
    .local v31, "rInfo":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v31

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 4209
    move-object/from16 v0, v31

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 4208
    if-eqz v2, :cond_a

    .line 4212
    add-int/lit8 v27, v27, 0x1

    .line 4213
    move/from16 v0, v27

    move/from16 v1, v24

    if-ge v0, v1, :cond_4

    .line 4214
    move-object/from16 v0, v33

    move/from16 v1, v27

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v6, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 4216
    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    :cond_4
    if-eqz v25, :cond_5

    .line 4217
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Next matching activity: found current "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v30

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 4218
    const-string/jumbo v5, "/"

    .line 4217
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 4218
    move-object/from16 v0, v30

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 4217
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4219
    const-string/jumbo v3, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Next matching activity: next is "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    if-nez v6, :cond_9

    .line 4220
    const-string/jumbo v2, "null"

    .line 4219
    :goto_3
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4228
    .end local v24    # "N":I
    .end local v27    # "i":I
    .end local v31    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v33    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_5
    :goto_4
    if-nez v6, :cond_b

    .line 4230
    :try_start_5
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 4231
    if-eqz v25, :cond_6

    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Next matching activity: nothing found"

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 4232
    :cond_6
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4194
    .end local v25    # "debug":Z
    :cond_7
    const/16 v25, 0x0

    .restart local v25    # "debug":Z
    goto/16 :goto_0

    .line 4205
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v33    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_8
    const/16 v24, 0x0

    .restart local v24    # "N":I
    goto/16 :goto_1

    .line 4220
    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v27    # "i":I
    .restart local v31    # "rInfo":Landroid/content/pm/ResolveInfo;
    :cond_9
    :try_start_6
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v7, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v7, "/"

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v7, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    move-result-object v2

    goto :goto_3

    .line 4206
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    :cond_a
    add-int/lit8 v27, v27, 0x1

    goto/16 :goto_2

    .line 4235
    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v24    # "N":I
    .end local v27    # "i":I
    .end local v31    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v33    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_b
    :try_start_7
    new-instance v2, Landroid/content/ComponentName;

    .line 4236
    iget-object v3, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 4235
    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4237
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const v3, -0x1e000001

    and-int/2addr v2, v3

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 4248
    move-object/from16 v0, v30

    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    move/from16 v35, v0

    .line 4249
    .local v35, "wasFinishing":Z
    const/4 v2, 0x1

    move-object/from16 v0, v30

    iput-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 4252
    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v34, v0

    .line 4253
    .local v34, "resultTo":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v30

    iget-object v10, v0, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 4254
    .local v10, "resultWho":Ljava/lang/String;
    move-object/from16 v0, v30

    iget v11, v0, Lcom/android/server/am/ActivityRecord;->requestCode:I

    .line 4255
    .local v11, "requestCode":I
    const/4 v2, 0x0

    move-object/from16 v0, v30

    iput-object v2, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    .line 4256
    if-eqz v34, :cond_c

    .line 4257
    move-object/from16 v0, v34

    move-object/from16 v1, v30

    invoke-virtual {v0, v1, v10, v11}, Lcom/android/server/am/ActivityRecord;->removeResultsLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 4260
    :cond_c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 4261
    .local v28, "origId":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 4262
    move-object/from16 v0, v30

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    if-eqz v34, :cond_d

    move-object/from16 v0, v34

    iget-object v9, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    .line 4263
    :goto_5
    move-object/from16 v0, v30

    iget v13, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move-object/from16 v0, v30

    iget-object v14, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 4264
    move-object/from16 v0, v30

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move/from16 v16, v0

    .line 4262
    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 4263
    const/4 v12, -0x1

    .line 4264
    const/4 v15, -0x1

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    move-object/from16 v18, p3

    .line 4261
    invoke-virtual/range {v2 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;ZZ[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v32

    .line 4265
    .local v32, "res":I
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4267
    move/from16 v0, v35

    move-object/from16 v1, v30

    iput-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 4268
    if-eqz v32, :cond_e

    .line 4269
    const/4 v2, 0x0

    monitor-exit p0

    return v2

    .line 4262
    .end local v32    # "res":I
    :cond_d
    const/4 v9, 0x0

    goto :goto_5

    .line 4271
    .restart local v32    # "res":I
    :cond_e
    const/4 v2, 0x1

    monitor-exit p0

    return v2

    .line 4177
    .end local v4    # "intent":Landroid/content/Intent;
    .end local v10    # "resultWho":Ljava/lang/String;
    .end local v11    # "requestCode":I
    .end local v25    # "debug":Z
    .end local v28    # "origId":J
    .end local v30    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v32    # "res":I
    .end local v34    # "resultTo":Lcom/android/server/am/ActivityRecord;
    .end local v35    # "wasFinishing":Z
    .restart local p2    # "intent":Landroid/content/Intent;
    :catchall_0
    move-exception v2

    :goto_6
    monitor-exit p0

    throw v2

    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    .restart local v30    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_1
    move-exception v2

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto :goto_6

    .line 4225
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    .restart local v25    # "debug":Z
    :catch_0
    move-exception v26

    .local v26, "e":Landroid/os/RemoteException;
    goto/16 :goto_4
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .prologue
    .line 2313
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 2314
    .local v0, "ncl":Lcom/android/server/am/NativeCrashListener;
    invoke-virtual {v0}, Lcom/android/server/am/NativeCrashListener;->start()V

    .line 2312
    return-void
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;
    .locals 12
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "isolatedUid"    # I
    .param p10, "keepIfLarge"    # Z
    .param p11, "abiOverride"    # Ljava/lang/String;
    .param p12, "entryPoint"    # Ljava/lang/String;
    .param p13, "entryPointArgs"    # [Ljava/lang/String;
    .param p14, "crashHandler"    # Ljava/lang/Runnable;

    .prologue
    .line 3225
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    .line 3227
    .local v10, "startTime":J
    if-nez p8, :cond_3

    .line 3228
    iget v2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p10

    invoke-virtual {p0, p1, v2, v0}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 3229
    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    const-string/jumbo v2, "startProcess: after getProcessRecord"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3231
    and-int/lit8 v2, p4, 0x4

    if-eqz v2, :cond_0

    .line 3234
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 3237
    const/4 v2, 0x0

    return-object v2

    .line 3246
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 3247
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 3248
    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    .line 3249
    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v6, 0x0

    aput-object v4, v2, v6

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v6, 0x1

    aput-object v4, v2, v6

    .line 3250
    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v6, 0x2

    aput-object v4, v2, v6

    .line 3248
    const/16 v4, 0x7540

    invoke-static {v4, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 3251
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 3252
    if-eqz v3, :cond_1

    .line 3253
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->bad:Z

    .line 3264
    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :goto_0
    monitor-enter p0

    .line 3265
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->nativeMigrateToBoost()I

    .line 3266
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    .line 3267
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    iput-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    .line 3268
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x3a

    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v9

    .line 3269
    .local v9, "msg":Landroid/os/Message;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v6, 0xbb8

    invoke-virtual {v2, v9, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 3282
    if-eqz v3, :cond_5

    iget v2, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_5

    .line 3283
    if-eqz p3, :cond_2

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_4

    .line 3288
    :cond_2
    iget-object v2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 3289
    const-string/jumbo v2, "startProcess: done, added package to proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3290
    return-object v3

    .line 3259
    .end local v9    # "msg":Landroid/os/Message;
    :cond_3
    const/4 v3, 0x0

    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 3264
    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2

    .line 3296
    .restart local v9    # "msg":Landroid/os/Message;
    :cond_4
    const-string/jumbo v2, "startProcess: bad proc running, killing"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3297
    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2, v4}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 3298
    const/4 v2, 0x1

    const/4 v4, 0x1

    invoke-direct {p0, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 3299
    const-string/jumbo v2, "startProcess: done killing old proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3302
    :cond_5
    if-eqz p6, :cond_6

    .line 3303
    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v5

    .line 3305
    :goto_1
    if-nez v3, :cond_9

    .line 3306
    const-string/jumbo v2, "startProcess: creating new process record"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3307
    move/from16 v0, p8

    move/from16 v1, p9

    invoke-virtual {p0, p2, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 3308
    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_7

    .line 3309
    const-string/jumbo v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Failed making new process record for "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 3310
    const-string/jumbo v6, "/"

    .line 3309
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 3310
    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 3309
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 3310
    const-string/jumbo v6, " isolated="

    .line 3309
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3311
    const/4 v2, 0x0

    return-object v2

    .line 3303
    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_6
    const/4 v5, 0x0

    .local v5, "hostingNameStr":Ljava/lang/String;
    goto :goto_1

    .line 3313
    .end local v5    # "hostingNameStr":Ljava/lang/String;
    .restart local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_7
    move-object/from16 v0, p14

    iput-object v0, v3, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    .line 3314
    const-string/jumbo v2, "startProcess: done creating new process record"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3323
    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :goto_2
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_8

    .line 3324
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 3335
    :cond_8
    const-string/jumbo v2, "startProcess: stepping in to startProcess"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v2, p0

    move-object/from16 v4, p5

    move-object/from16 v6, p11

    move-object/from16 v7, p12

    move-object/from16 v8, p13

    .line 3336
    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 3338
    const-string/jumbo v2, "startProcess: done starting proc!"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3339
    iget v2, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v2, :cond_c

    :goto_3
    return-object v3

    .line 3317
    :cond_9
    iget-object v2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 3318
    const-string/jumbo v2, "startProcess: added package to existing proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_2

    .line 3325
    :cond_a
    if-nez p7, :cond_8

    .line 3326
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_b

    .line 3327
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3331
    :cond_b
    const-string/jumbo v2, "startProcess: returning with proc on hold"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3332
    return-object v3

    .line 3339
    :cond_c
    const/4 v3, 0x0

    goto :goto_3
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "keepIfLarge"    # Z

    .prologue
    .line 3216
    const/4 v9, 0x0

    .line 3217
    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    .line 3218
    const/4 v14, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v10, p9

    .line 3215
    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method startProfilesLocked()V
    .locals 9

    .prologue
    .line 20544
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v6

    .line 20545
    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/4 v8, 0x0

    .line 20544
    invoke-virtual {v6, v7, v8}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v2

    .line 20546
    .local v2, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    new-instance v3, Ljava/util/ArrayList;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v6

    invoke-direct {v3, v6}, Ljava/util/ArrayList;-><init>(I)V

    .line 20547
    .local v3, "toStart":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v2}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v5

    .local v5, "user$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_1

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/UserInfo;

    .line 20548
    .local v4, "user":Landroid/content/pm/UserInfo;
    iget v6, v4, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v6, v6, 0x10

    const/16 v7, 0x10

    if-ne v6, v7, :cond_0

    .line 20549
    iget v6, v4, Landroid/content/pm/UserInfo;->id:I

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v6, v7, :cond_0

    .line 20550
    invoke-interface {v3, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 20553
    .end local v4    # "user":Landroid/content/pm/UserInfo;
    :cond_1
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v1

    .line 20554
    .local v1, "n":I
    const/4 v0, 0x0

    .line 20555
    .local v0, "i":I
    :goto_1
    if-ge v0, v1, :cond_2

    const/4 v6, 0x2

    if-ge v0, v6, :cond_2

    .line 20556
    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/pm/UserInfo;

    iget v6, v6, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->startUserInBackground(I)Z

    .line 20555
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 20558
    :cond_2
    if-ge v0, v1, :cond_3

    .line 20559
    const-string/jumbo v6, "ActivityManager_MU"

    const-string/jumbo v7, "More profiles than MAX_RUNNING_USERS"

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20542
    :cond_3
    return-void
.end method

.method startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V
    .locals 3
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p2, "targetUid"    # I

    .prologue
    .line 10655
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v2, Landroid/os/WorkSource;

    invoke-direct {v2, p2}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 10656
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {v1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-eq v1, v2, :cond_1

    .line 10657
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_2

    const/4 v0, 0x1

    .line 10658
    .local v0, "wasRunningVoice":Z
    :goto_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 10659
    if-nez v0, :cond_1

    .line 10660
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 10661
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 10654
    .end local v0    # "wasRunningVoice":Z
    :cond_1
    return-void

    .line 10657
    :cond_2
    const/4 v0, 0x0

    .restart local v0    # "wasRunningVoice":Z
    goto :goto_0
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 11
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 15978
    const-string/jumbo v0, "startService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15980
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15981
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15984
    :cond_0
    if-nez p4, :cond_1

    .line 15985
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15990
    :cond_1
    monitor-enter p0

    .line 15991
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .line 15992
    .local v4, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 15993
    .local v5, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 15994
    .local v8, "origId":J
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v6, p4

    move/from16 v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IILjava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v10

    .line 15996
    .local v10, "res":Landroid/content/ComponentName;
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 15997
    return-object v10

    .line 15990
    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .end local v8    # "origId":J
    .end local v10    # "res":Landroid/content/ComponentName;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 11
    .param p1, "uid"    # I
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 16004
    monitor-enter p0

    .line 16007
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 16008
    .local v8, "origId":J
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v1, 0x0

    .line 16009
    const/4 v4, -0x1

    move-object v2, p2

    move-object v3, p3

    move v5, p1

    move-object v6, p4

    move/from16 v7, p5

    .line 16008
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IILjava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v10

    .line 16010
    .local v10, "res":Landroid/content/ComponentName;
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 16011
    return-object v10

    .line 16004
    .end local v8    # "origId":J
    .end local v10    # "res":Landroid/content/ComponentName;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method startSetupActivityLocked()V
    .locals 30

    .prologue
    .line 3658
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    if-eqz v2, :cond_0

    .line 3659
    return-void

    .line 3665
    :cond_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v26

    .line 3666
    .local v26, "resolver":Landroid/content/ContentResolver;
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_3

    .line 3668
    const-string/jumbo v2, "device_provisioned"

    const/4 v3, 0x0

    .line 3667
    move-object/from16 v0, v26

    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_3

    .line 3669
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    .line 3672
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v2, "android.intent.action.UPGRADE_SETUP"

    invoke-direct {v4, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3673
    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    .line 3674
    const/16 v3, 0x80

    .line 3673
    invoke-virtual {v2, v4, v3}, Landroid/content/pm/PackageManager;->queryIntentActivities(Landroid/content/Intent;I)Ljava/util/List;

    move-result-object v28

    .line 3677
    .local v28, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/16 v27, 0x0

    .line 3678
    .local v27, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v24, 0x0

    .local v24, "i":I
    :goto_0
    if-eqz v28, :cond_1

    invoke-interface/range {v28 .. v28}, Ljava/util/List;->size()I

    move-result v2

    move/from16 v0, v24

    if-ge v0, v2, :cond_1

    .line 3679
    move-object/from16 v0, v28

    move/from16 v1, v24

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_4

    .line 3681
    move-object/from16 v0, v28

    move/from16 v1, v24

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v27

    .end local v27    # "ri":Landroid/content/pm/ResolveInfo;
    check-cast v27, Landroid/content/pm/ResolveInfo;

    .line 3686
    :cond_1
    if-eqz v27, :cond_3

    .line 3687
    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_5

    .line 3688
    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string/jumbo v3, "android.SETUP_VERSION"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 3690
    :goto_1
    if-nez v29, :cond_2

    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_2

    .line 3691
    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    .line 3692
    const-string/jumbo v3, "android.SETUP_VERSION"

    .line 3691
    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 3695
    :cond_2
    const-string/jumbo v2, "last_setup_shown"

    .line 3694
    move-object/from16 v0, v26

    invoke-static {v0, v2}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v25

    .line 3696
    .local v25, "lastVers":Ljava/lang/String;
    if-eqz v29, :cond_3

    move-object/from16 v0, v29

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 3656
    .end local v4    # "intent":Landroid/content/Intent;
    .end local v24    # "i":I
    .end local v25    # "lastVers":Ljava/lang/String;
    .end local v28    # "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_3
    :goto_2
    return-void

    .line 3678
    .restart local v4    # "intent":Landroid/content/Intent;
    .restart local v24    # "i":I
    .restart local v27    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v28    # "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_4
    add-int/lit8 v24, v24, 0x1

    goto :goto_0

    .line 3689
    .end local v27    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_5
    const/16 v29, 0x0

    .local v29, "vers":Ljava/lang/String;
    goto :goto_1

    .line 3697
    .end local v29    # "vers":Ljava/lang/String;
    .restart local v25    # "lastVers":Ljava/lang/String;
    :cond_6
    const/high16 v2, 0x10000000

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 3698
    new-instance v2, Landroid/content/ComponentName;

    .line 3699
    move-object/from16 v0, v27

    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v27

    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 3698
    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 3700
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v27

    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    const/4 v3, 0x0

    const/4 v5, 0x0

    .line 3701
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    .line 3702
    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    .line 3700
    invoke-virtual/range {v2 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;ZZ[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    goto :goto_2
.end method

.method startTimeTrackingFocusedActivityLocked()V
    .locals 2

    .prologue
    .line 10523
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_0

    .line 10524
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v1, v1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Lcom/android/server/am/AppTimeTracker;->start(Ljava/lang/String;)V

    .line 10522
    :cond_0
    return-void
.end method

.method public startUserInBackground(I)Z
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 20094
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    return v0
.end method

.method startUserInForeground(ILandroid/app/Dialog;)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "dlg"    # Landroid/app/Dialog;

    .prologue
    .line 20101
    const/4 v1, 0x1

    invoke-direct {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    .line 20102
    .local v0, "result":Z
    invoke-virtual {p2}, Landroid/app/Dialog;->dismiss()V

    .line 20103
    return v0
.end method

.method public startVoiceActivity(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 22
    .param p1, "callingPackage"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p7, "interactor"    # Lcom/android/internal/app/IVoiceInteractor;
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 4136
    const-string/jumbo v1, "android.permission.BIND_VOICE_INTERACTION"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 4138
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: startVoiceActivity() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4139
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 4138
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4140
    const-string/jumbo v2, ", uid="

    .line 4138
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4140
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 4138
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4141
    const-string/jumbo v2, " requires "

    .line 4138
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4141
    const-string/jumbo v2, "android.permission.BIND_VOICE_INTERACTION"

    .line 4138
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    .line 4142
    .local v21, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    move-object/from16 v0, v21

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4143
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v21

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4145
    .end local v21    # "msg":Ljava/lang/String;
    :cond_0
    if-eqz p6, :cond_1

    if-nez p7, :cond_2

    .line 4146
    :cond_1
    new-instance v1, Ljava/lang/NullPointerException;

    const-string/jumbo v2, "null session or interactor"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4149
    :cond_2
    const-string/jumbo v7, "startVoiceActivity"

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p11

    .line 4148
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 4151
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    .line 4152
    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v14, 0x0

    .line 4153
    const/4 v15, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move/from16 v3, p3

    move-object/from16 v4, p1

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    .line 4151
    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    return v1
.end method

.method public stopAppSwitches()V
    .locals 6

    .prologue
    const-wide/16 v4, 0x1388

    .line 10691
    const-string/jumbo v1, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 10693
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10697
    :cond_0
    monitor-enter p0

    .line 10698
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    add-long/2addr v2, v4

    iput-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 10700
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidAppSwitch:Z

    .line 10701
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 10702
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 10703
    .local v0, "msg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x1388

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 10690
    return-void

    .line 10697
    .end local v0    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V
    .locals 10
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;

    .prologue
    .line 17872
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v4, :cond_0

    .line 17873
    return-void

    .line 17876
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v4, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 17877
    .local v1, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v1, :cond_1

    .line 17878
    return-void

    .line 17880
    :cond_1
    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/SparseArray;

    .line 17881
    .local v3, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v3, :cond_2

    .line 17882
    return-void

    .line 17884
    :cond_2
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .line 17885
    .local v2, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v2, :cond_3

    .line 17886
    return-void

    .line 17888
    :cond_3
    invoke-virtual {v2, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .line 17889
    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz v0, :cond_4

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-gtz v4, :cond_5

    .line 17890
    :cond_4
    return-void

    .line 17892
    :cond_5
    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 17893
    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez v4, :cond_6

    .line 17894
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long/2addr v6, v8

    add-long/2addr v4, v6

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 17871
    :cond_6
    return-void
.end method

.method public stopLockTaskMode()V
    .locals 10

    .prologue
    const/4 v6, 0x1

    .line 9328
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->getLockedTaskLocked()Lcom/android/server/am/TaskRecord;

    move-result-object v1

    .line 9329
    .local v1, "lockTask":Lcom/android/server/am/TaskRecord;
    if-nez v1, :cond_0

    .line 9331
    return-void

    .line 9334
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9335
    .local v0, "callingUid":I
    iget v4, v1, Lcom/android/server/am/TaskRecord;->mLockTaskUid:I

    .line 9341
    .local v4, "lockTaskUid":I
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getLockTaskModeState()I

    move-result v5

    if-ne v5, v6, :cond_2

    .line 9342
    if-eq v0, v4, :cond_2

    .line 9343
    if-nez v4, :cond_1

    .line 9344
    if-nez v4, :cond_2

    iget v5, v1, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-eq v0, v5, :cond_2

    .line 9345
    :cond_1
    new-instance v5, Ljava/lang/SecurityException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Invalid uid, expected "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 9346
    const-string/jumbo v7, " callingUid="

    .line 9345
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 9346
    const-string/jumbo v7, " effectiveUid="

    .line 9345
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 9346
    iget v7, v1, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    .line 9345
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9349
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9351
    .local v2, "ident":J
    :try_start_0
    const-string/jumbo v5, "ActivityManager"

    const-string/jumbo v6, "stopLockTaskMode"

    invoke-static {v5, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9353
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9354
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 9355
    const-string/jumbo v6, "stopLockTask"

    .line 9354
    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 9355
    const/4 v9, 0x1

    .line 9354
    invoke-virtual {v5, v7, v8, v6, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9358
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9327
    return-void

    .line 9353
    :catchall_0
    move-exception v5

    :try_start_3
    monitor-exit p0

    throw v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9357
    :catchall_1
    move-exception v5

    .line 9358
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9357
    throw v5
.end method

.method public stopLockTaskModeOnCurrent()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 9364
    const-string/jumbo v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    .line 9365
    const-string/jumbo v3, "stopLockTaskModeOnCurrent"

    .line 9364
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9366
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9368
    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->stopLockTaskMode()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9370
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9363
    return-void

    .line 9369
    :catchall_0
    move-exception v2

    .line 9370
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9369
    throw v2
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 2
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .prologue
    .line 16018
    const-string/jumbo v0, "stopService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16020
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16021
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16024
    :cond_0
    monitor-enter p0

    .line 16025
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 16024
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 1
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "startId"    # I

    .prologue
    .line 16049
    monitor-enter p0

    .line 16050
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 16049
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public stopUser(ILandroid/app/IStopUserCallback;)I
    .locals 4
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    .line 20620
    const-string/jumbo v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 20622
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: switchUser() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20623
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 20622
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20624
    const-string/jumbo v2, ", uid="

    .line 20622
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20624
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 20622
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20625
    const-string/jumbo v2, " requires "

    .line 20622
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 20625
    const-string/jumbo v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 20622
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20626
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20627
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20629
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    if-ltz p1, :cond_1

    if-nez p1, :cond_2

    .line 20630
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Can\'t stop primary user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 20632
    :cond_2
    const-string/jumbo v1, "no_debugging_features"

    invoke-virtual {p0, v1, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    .line 20633
    monitor-enter p0

    .line 20634
    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 20633
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public switchUser(I)Z
    .locals 6
    .param p1, "userId"    # I

    .prologue
    const/16 v4, 0x2e

    const/4 v5, 0x0

    .line 20144
    const-string/jumbo v2, "no_debugging_features"

    invoke-virtual {p0, v2, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    .line 20146
    monitor-enter p0

    .line 20147
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v0

    .line 20148
    .local v0, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v0, :cond_0

    .line 20149
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "No user info for user #"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 20150
    return v5

    .line 20152
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 20153
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Cannot switch to User #"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, ": not a full user"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit p0

    .line 20154
    return v5

    .line 20156
    :cond_1
    :try_start_2
    iget-object v1, v0, Landroid/content/pm/UserInfo;->name:Ljava/lang/String;

    .line 20157
    .local v1, "userName":Ljava/lang/String;
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 20159
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeMessages(I)V

    .line 20160
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v3, v4, p1, v5, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20161
    const/4 v2, 0x1

    return v2

    .line 20146
    .end local v0    # "userInfo":Landroid/content/pm/UserInfo;
    .end local v1    # "userName":Ljava/lang/String;
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public systemReady(Ljava/lang/Runnable;)V
    .locals 40
    .param p1, "goingCallback"    # Ljava/lang/Runnable;

    .prologue
    .line 11923
    monitor-enter p0

    .line 11924
    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v4, :cond_1

    .line 11927
    if-eqz p1, :cond_0

    .line 11928
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    .line 11930
    return-void

    .line 11934
    :cond_1
    :try_start_1
    const-class v4, Lcom/android/server/DeviceIdleController$LocalService;

    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/DeviceIdleController$LocalService;

    .line 11933
    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

    .line 11938
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 11940
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->clear()V

    .line 11941
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v5}, Lcom/android/server/am/TaskPersister;->restoreTasksLocked()Ljava/util/ArrayList;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/RecentTasks;->addAll(Ljava/util/Collection;)Z

    .line 11942
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v5, -0x1

    invoke-virtual {v4, v5}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    .line 11943
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->startPersisting()V

    .line 11946
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-nez v4, :cond_4

    .line 11947
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v4, :cond_2

    monitor-exit p0

    .line 11948
    return-void

    .line 11950
    :cond_2
    :try_start_2
    new-instance v25, Ljava/util/ArrayList;

    invoke-direct/range {v25 .. v25}, Ljava/util/ArrayList;-><init>()V

    .line 11951
    .local v25, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    new-instance v4, Lcom/android/server/am/ActivityManagerService$14;

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    move-object/from16 v2, p1

    invoke-direct {v4, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/Runnable;)V

    .line 11962
    const/4 v5, 0x0

    .line 11951
    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v4, v1, v5}, Lcom/android/server/am/ActivityManagerService;->deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z

    move-result v4

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    .line 11964
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v4, :cond_3

    monitor-exit p0

    .line 11965
    return-void

    .line 11967
    :cond_3
    const/4 v4, 0x1

    :try_start_3
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .line 11970
    .end local v25    # "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v4}, Lcom/android/server/AppOpsService;->systemReady()V

    .line 11971
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    monitor-exit p0

    .line 11974
    const/16 v36, 0x0

    .line 11975
    .local v36, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 11976
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-result v4

    add-int/lit8 v29, v4, -0x1

    .local v29, "i":I
    move-object/from16 v37, v36

    .end local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v37, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_0
    if-ltz v29, :cond_5

    .line 11977
    :try_start_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v29

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Lcom/android/server/am/ProcessRecord;

    .line 11978
    .local v35, "proc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v35

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v4

    if-nez v4, :cond_12

    .line 11979
    if-nez v37, :cond_11

    .line 11980
    new-instance v36, Ljava/util/ArrayList;

    invoke-direct/range {v36 .. v36}, Ljava/util/ArrayList;-><init>()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_7

    .line 11982
    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v36, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_1
    :try_start_6
    move-object/from16 v0, v36

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 11976
    :goto_2
    add-int/lit8 v29, v29, -0x1

    move-object/from16 v37, v36

    .end local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto :goto_0

    .line 11923
    .end local v29    # "i":I
    .end local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v4

    monitor-exit p0

    throw v4

    .restart local v29    # "i":I
    .restart local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    monitor-exit v5

    .line 11987
    monitor-enter p0

    .line 11988
    if-eqz v37, :cond_6

    .line 11989
    :try_start_7
    invoke-virtual/range {v37 .. v37}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v29, v4, -0x1

    :goto_3
    if-ltz v29, :cond_6

    .line 11990
    move-object/from16 v0, v37

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Lcom/android/server/am/ProcessRecord;

    .line 11991
    .restart local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    const-string/jumbo v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Removing system update proc: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v35

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11992
    const-string/jumbo v4, "system update done"

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v35

    invoke-direct {v0, v1, v5, v6, v4}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 11989
    add-int/lit8 v29, v29, -0x1

    goto :goto_3

    .line 11975
    .end local v29    # "i":I
    .end local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_1
    move-exception v4

    :goto_4
    monitor-exit v5

    throw v4

    .line 11999
    .restart local v29    # "i":I
    .restart local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_6
    const/4 v4, 0x1

    :try_start_8
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    monitor-exit p0

    .line 12002
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v5, "System now ready"

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12004
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 12003
    const/16 v6, 0xbe0

    invoke-static {v6, v4, v5}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 12006
    monitor-enter p0

    .line 12009
    :try_start_9
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_7

    .line 12010
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 12011
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v6, "android.intent.action.FACTORY_TEST"

    invoke-direct {v5, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12012
    const/16 v6, 0x400

    .line 12010
    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;

    move-result-object v38

    .line 12013
    .local v38, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v27, 0x0

    .line 12014
    .local v27, "errorMsg":Ljava/lang/CharSequence;
    if-eqz v38, :cond_b

    .line 12015
    move-object/from16 v0, v38

    iget-object v0, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    move-object/from16 v22, v0

    .line 12016
    .local v22, "ai":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, v22

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v23, v0

    .line 12017
    .local v23, "app":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, v23

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-eqz v4, :cond_a

    .line 12018
    const-string/jumbo v4, "android.intent.action.FACTORY_TEST"

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 12019
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 12020
    new-instance v4, Landroid/content/ComponentName;

    move-object/from16 v0, v23

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 12021
    move-object/from16 v0, v22

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 12020
    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 12030
    .end local v22    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v23    # "app":Landroid/content/pm/ApplicationInfo;
    .end local v27    # "errorMsg":Ljava/lang/CharSequence;
    :goto_5
    if-eqz v27, :cond_7

    .line 12031
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 12032
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 12033
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 12034
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v34

    .line 12035
    .local v34, "msg":Landroid/os/Message;
    const/4 v4, 0x3

    move-object/from16 v0, v34

    iput v4, v0, Landroid/os/Message;->what:I

    .line 12036
    invoke-virtual/range {v34 .. v34}, Landroid/os/Message;->getData()Landroid/os/Bundle;

    move-result-object v4

    const-string/jumbo v5, "msg"

    move-object/from16 v0, v27

    invoke-virtual {v4, v5, v0}, Landroid/os/Bundle;->putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V

    .line 12037
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v34

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .end local v34    # "msg":Landroid/os/Message;
    .end local v38    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_7
    monitor-exit p0

    .line 12042
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    .line 12043
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->loadResourcesOnSystemReady()V

    .line 12045
    monitor-enter p0

    .line 12046
    :try_start_a
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->readGrantedUriPermissionsLocked()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    monitor-exit p0

    .line 12049
    if-eqz p1, :cond_8

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 12051
    :cond_8
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 12052
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v5}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 12051
    const v8, 0x8007

    invoke-virtual {v4, v8, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 12053
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 12054
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v5}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 12053
    const v8, 0x8008

    invoke-virtual {v4, v8, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 12055
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5}, Lcom/android/server/SystemServiceManager;->startUser(I)V

    .line 12057
    monitor-enter p0

    .line 12058
    :try_start_b
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    const/4 v5, 0x1

    if-eq v4, v5, :cond_d

    .line 12060
    :try_start_c
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    .line 12061
    const/16 v5, 0x400

    .line 12060
    invoke-interface {v4, v5}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Ljava/util/List;

    move-result-object v24

    .line 12062
    .local v24, "apps":Ljava/util/List;
    if-eqz v24, :cond_d

    .line 12063
    invoke-interface/range {v24 .. v24}, Ljava/util/List;->size()I

    move-result v21

    .line 12065
    .local v21, "N":I
    const/16 v29, 0x0

    :goto_6
    move/from16 v0, v29

    move/from16 v1, v21

    if-ge v0, v1, :cond_d

    .line 12067
    move-object/from16 v0, v24

    move/from16 v1, v29

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v32

    check-cast v32, Landroid/content/pm/ApplicationInfo;

    .line 12068
    .local v32, "info":Landroid/content/pm/ApplicationInfo;
    if-eqz v32, :cond_9

    .line 12069
    move-object/from16 v0, v32

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v5, "android"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_0
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    move-result v4

    if-eqz v4, :cond_c

    .line 12065
    :cond_9
    :goto_7
    add-int/lit8 v29, v29, 0x1

    goto :goto_6

    .line 11987
    .end local v21    # "N":I
    .end local v24    # "apps":Ljava/util/List;
    .end local v32    # "info":Landroid/content/pm/ApplicationInfo;
    :catchall_2
    move-exception v4

    monitor-exit p0

    throw v4

    .line 12023
    .restart local v22    # "ai":Landroid/content/pm/ActivityInfo;
    .restart local v23    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v27    # "errorMsg":Ljava/lang/CharSequence;
    .restart local v38    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_a
    :try_start_d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    .line 12024
    const v5, 0x104034b

    .line 12023
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v27

    .local v27, "errorMsg":Ljava/lang/CharSequence;
    goto/16 :goto_5

    .line 12027
    .end local v22    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v23    # "app":Landroid/content/pm/ApplicationInfo;
    .local v27, "errorMsg":Ljava/lang/CharSequence;
    :cond_b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    .line 12028
    const v5, 0x104034c

    .line 12027
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    move-result-object v27

    .local v27, "errorMsg":Ljava/lang/CharSequence;
    goto/16 :goto_5

    .line 12006
    .end local v27    # "errorMsg":Ljava/lang/CharSequence;
    .end local v38    # "ri":Landroid/content/pm/ResolveInfo;
    :catchall_3
    move-exception v4

    monitor-exit p0

    throw v4

    .line 12045
    :catchall_4
    move-exception v4

    monitor-exit p0

    throw v4

    .line 12070
    .restart local v21    # "N":I
    .restart local v24    # "apps":Ljava/util/List;
    .restart local v32    # "info":Landroid/content/pm/ApplicationInfo;
    :cond_c
    const/4 v4, 0x0

    const/4 v5, 0x0

    :try_start_e
    move-object/from16 v0, p0

    move-object/from16 v1, v32

    invoke-virtual {v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_e .. :try_end_e} :catch_0
    .catchall {:try_start_e .. :try_end_e} :catchall_5

    goto :goto_7

    .line 12074
    .end local v21    # "N":I
    .end local v24    # "apps":Ljava/util/List;
    .end local v32    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v28

    .line 12080
    :cond_d
    const/4 v4, 0x1

    :try_start_f
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 12081
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const-string/jumbo v5, "systemReady"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 12084
    const-string/jumbo v4, "ro.alarm_boot"

    const/4 v5, 0x0

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v33

    .line 12085
    .local v33, "isAlarmBoot":Z
    if-eqz v33, :cond_e

    .line 12086
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->startAlarmActivityLocked()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_5

    .line 12090
    :cond_e
    :try_start_10
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4}, Landroid/content/pm/IPackageManager;->hasSystemUidErrors()Z

    move-result v4

    if-eqz v4, :cond_f

    .line 12091
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v5, "UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable."

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12093
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0xe

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V
    :try_end_10
    .catch Landroid/os/RemoteException; {:try_start_10 .. :try_end_10} :catch_2
    .catchall {:try_start_10 .. :try_end_10} :catchall_5

    .line 12098
    :cond_f
    :goto_8
    :try_start_11
    invoke-static {}, Landroid/os/Build;->isBuildConsistent()Z

    move-result v4

    if-nez v4, :cond_10

    .line 12099
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v5, "Build fingerprint is not consistent, warning user"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12100
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0xf

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    .line 12103
    :cond_10
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_5

    move-result-wide v30

    .line 12105
    .local v30, "ident":J
    :try_start_12
    new-instance v7, Landroid/content/Intent;

    const-string/jumbo v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12106
    .local v7, "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12108
    const-string/jumbo v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12111
    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v20, v0

    .line 12109
    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 12110
    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    .line 12111
    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x3e8

    move-object/from16 v4, p0

    .line 12109
    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 12112
    new-instance v7, Landroid/content/Intent;

    .end local v7    # "intent":Landroid/content/Intent;
    const-string/jumbo v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12113
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12114
    const-string/jumbo v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12116
    new-instance v9, Lcom/android/server/am/ActivityManagerService$15;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$15;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 12123
    const/4 v4, 0x1

    new-array v13, v4, [Ljava/lang/String;

    const-string/jumbo v4, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v5, 0x0

    aput-object v4, v13, v5

    .line 12124
    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 12115
    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 12116
    const/4 v8, 0x0

    .line 12122
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    .line 12123
    const/4 v14, -0x1

    .line 12124
    const/4 v15, 0x0

    const/16 v16, 0x1

    const/16 v17, 0x0

    const/16 v19, 0x3e8

    const/16 v20, -0x1

    move-object/from16 v4, p0

    .line 12115
    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_12
    .catch Ljava/lang/Throwable; {:try_start_12 .. :try_end_12} :catch_1
    .catchall {:try_start_12 .. :try_end_12} :catchall_6

    .line 12128
    :try_start_13
    invoke-static/range {v30 .. v31}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12130
    .end local v7    # "intent":Landroid/content/Intent;
    :goto_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 12131
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/4 v5, -0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v4}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_5

    monitor-exit p0

    .line 11922
    return-void

    .line 12125
    :catch_1
    move-exception v39

    .line 12126
    .local v39, "t":Ljava/lang/Throwable;
    :try_start_14
    const-string/jumbo v4, "ActivityManager"

    const-string/jumbo v5, "Failed sending first user broadcasts"

    move-object/from16 v0, v39

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_6

    .line 12128
    :try_start_15
    invoke-static/range {v30 .. v31}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_5

    goto :goto_9

    .line 12057
    .end local v30    # "ident":J
    .end local v33    # "isAlarmBoot":Z
    .end local v39    # "t":Ljava/lang/Throwable;
    :catchall_5
    move-exception v4

    monitor-exit p0

    throw v4

    .line 12127
    .restart local v30    # "ident":J
    .restart local v33    # "isAlarmBoot":Z
    :catchall_6
    move-exception v4

    .line 12128
    :try_start_16
    invoke-static/range {v30 .. v31}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12127
    throw v4
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_5

    .line 12095
    .end local v30    # "ident":J
    :catch_2
    move-exception v26

    .local v26, "e":Landroid/os/RemoteException;
    goto/16 :goto_8

    .line 11975
    .end local v26    # "e":Landroid/os/RemoteException;
    .end local v33    # "isAlarmBoot":Z
    :catchall_7
    move-exception v4

    move-object/from16 v36, v37

    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_4

    .end local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v35    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_11
    move-object/from16 v36, v37

    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_1

    .end local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_12
    move-object/from16 v36, v37

    .end local v37    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v36    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_2
.end method

.method public takePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 10
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v7, 0x1

    .line 8264
    const-string/jumbo v8, "takePersistableUriPermission"

    invoke-virtual {p0, v8}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8267
    const/4 v8, 0x3

    .line 8266
    invoke-static {p2, v8}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 8269
    monitor-enter p0

    .line 8270
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8271
    .local v0, "callingUid":I
    const/4 v4, 0x0

    .line 8272
    .local v4, "persistChanged":Z
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v8, 0x0

    invoke-direct {v3, p3, p1, v8}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8275
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x0

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8274
    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 8277
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x1

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 8276
    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v5

    .line 8279
    .local v5, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_2

    .line 8280
    iget v8, v1, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_1

    const/4 v2, 0x1

    .line 8281
    .local v2, "exactValid":Z
    :goto_0
    if-eqz v5, :cond_4

    .line 8282
    iget v8, v5, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_3

    const/4 v6, 0x1

    .line 8284
    .local v6, "prefixValid":Z
    :goto_1
    if-nez v2, :cond_0

    move v7, v6

    :cond_0
    if-nez v7, :cond_5

    .line 8285
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "No persistable permission grants found for UID "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 8286
    const-string/jumbo v9, " and Uri "

    .line 8285
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 8286
    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    .line 8285
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8269
    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "exactValid":Z
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v4    # "persistChanged":Z
    .end local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    .end local v6    # "prefixValid":Z
    :catchall_0
    move-exception v7

    monitor-exit p0

    throw v7

    .line 8280
    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .restart local v4    # "persistChanged":Z
    .restart local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_1
    const/4 v2, 0x0

    .restart local v2    # "exactValid":Z
    goto :goto_0

    .line 8279
    .end local v2    # "exactValid":Z
    :cond_2
    const/4 v2, 0x0

    .restart local v2    # "exactValid":Z
    goto :goto_0

    .line 8282
    :cond_3
    const/4 v6, 0x0

    .restart local v6    # "prefixValid":Z
    goto :goto_1

    .line 8281
    .end local v6    # "prefixValid":Z
    :cond_4
    const/4 v6, 0x0

    .restart local v6    # "prefixValid":Z
    goto :goto_1

    .line 8289
    :cond_5
    if-eqz v2, :cond_6

    .line 8290
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v4

    .line 8292
    .end local v4    # "persistChanged":Z
    :cond_6
    if-eqz v6, :cond_7

    .line 8293
    invoke-virtual {v5, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v7

    or-int/2addr v4, v7

    .line 8296
    :cond_7
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->maybePrunePersistedUriGrantsLocked(I)Z

    move-result v7

    or-int/2addr v4, v7

    .line 8298
    .local v4, "persistChanged":Z
    if-eqz v4, :cond_8

    .line 8299
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_8
    monitor-exit p0

    .line 8263
    return-void
.end method

.method public testIsSystemReady()Z
    .locals 1

    .prologue
    .line 11727
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    return v0
.end method

.method timeoutUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 20436
    monitor-enter p0

    .line 20437
    :try_start_0
    const-string/jumbo v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "User switch timeout: from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20438
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 20435
    return-void

    .line 20436
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method final trimApplications()V
    .locals 7

    .prologue
    const/4 v4, 0x0

    .line 19780
    monitor-enter p0

    .line 19785
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v2, v3, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_3

    .line 19786
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 19787
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-nez v3, :cond_0

    .line 19788
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v3, :cond_0

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-nez v3, :cond_0

    .line 19790
    const-string/jumbo v5, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Exiting empty application process "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 19791
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 19790
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 19791
    const-string/jumbo v6, " ("

    .line 19790
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 19792
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    .line 19790
    :goto_1
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 19793
    const-string/jumbo v6, ")\n"

    .line 19790
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 19789
    invoke-static {v5, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 19794
    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v3, :cond_2

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v3, v5, :cond_2

    .line 19795
    const-string/jumbo v3, "empty"

    const/4 v5, 0x0

    invoke-virtual {v0, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 19803
    :goto_2
    const/4 v3, 0x0

    const/4 v5, 0x1

    const/4 v6, -0x1

    invoke-direct {p0, v0, v3, v5, v6}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    .line 19804
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 19806
    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v3, :cond_0

    .line 19807
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19785
    :cond_0
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    :cond_1
    move-object v3, v4

    .line 19792
    goto :goto_1

    .line 19798
    :cond_2
    :try_start_1
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 19799
    :catch_0
    move-exception v1

    .local v1, "e":Ljava/lang/Exception;
    goto :goto_2

    .line 19813
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "e":Ljava/lang/Exception;
    :cond_3
    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    .line 19779
    return-void

    .line 19780
    .end local v2    # "i":I
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 5
    .param p1, "appInfo"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 16384
    if-nez p1, :cond_0

    .line 16385
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "unbind backup agent for null app"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16386
    return-void

    .line 16389
    :cond_0
    monitor-enter p0

    .line 16391
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    if-nez v2, :cond_1

    .line 16392
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Unbinding backup agent with no active backup"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16416
    const/4 v2, 0x0

    :try_start_1
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16417
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    .line 16393
    return-void

    .line 16396
    :cond_1
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 16397
    const-string/jumbo v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Unbind of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " but is not the current backup target"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16416
    const/4 v2, 0x0

    :try_start_3
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16417
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    monitor-exit p0

    .line 16398
    return-void

    .line 16402
    :cond_2
    :try_start_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 16403
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 16406
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    if-eqz v2, :cond_3

    .line 16408
    :try_start_5
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 16409
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v3

    .line 16408
    invoke-interface {v2, p1, v3}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 16416
    :cond_3
    :goto_0
    const/4 v2, 0x0

    :try_start_6
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16417
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    monitor-exit p0

    .line 16382
    return-void

    .line 16410
    :catch_0
    move-exception v0

    .line 16411
    .local v0, "e":Ljava/lang/Exception;
    :try_start_7
    const-string/jumbo v2, "ActivityManager"

    const-string/jumbo v3, "Exception when unbinding backup agent:"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16412
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto :goto_0

    .line 16415
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    .line 16416
    const/4 v3, 0x0

    :try_start_8
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 16417
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 16415
    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 16389
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "doRebind"    # Z

    .prologue
    .line 16253
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16254
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16257
    :cond_0
    monitor-enter p0

    .line 16258
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 16251
    return-void

    .line 16257
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 1
    .param p1, "connection"    # Landroid/app/IServiceConnection;

    .prologue
    .line 16232
    monitor-enter p0

    .line 16233
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    monitor-exit p0

    return v0

    .line 16232
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "userId"    # I

    .prologue
    .line 17285
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 17286
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17289
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 17290
    const-string/jumbo v7, "removeStickyBroadcast"

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p3

    .line 17289
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 17292
    monitor-enter p0

    .line 17293
    :try_start_0
    const-string/jumbo v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_1

    .line 17295
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 17296
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 17295
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 17297
    const-string/jumbo v2, ", uid="

    .line 17295
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 17297
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 17295
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 17298
    const-string/jumbo v2, " requires "

    .line 17295
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 17298
    const-string/jumbo v2, "android.permission.BROADCAST_STICKY"

    .line 17295
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    .line 17299
    .local v12, "msg":Ljava/lang/String;
    const-string/jumbo v1, "ActivityManager"

    invoke-static {v1, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17300
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17292
    .end local v12    # "msg":Ljava/lang/String;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 17302
    :cond_1
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/ArrayMap;

    .line 17303
    .local v13, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v13, :cond_4

    .line 17304
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/util/ArrayList;

    .line 17305
    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v11, :cond_3

    .line 17306
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v9

    .line 17308
    .local v9, "N":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_2

    .line 17309
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-virtual {v0, v1}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 17310
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 17314
    :cond_2
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_3

    .line 17315
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 17318
    .end local v9    # "N":I
    .end local v10    # "i":I
    :cond_3
    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v1

    if-gtz v1, :cond_4

    .line 17319
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_4
    monitor-exit p0

    .line 17283
    return-void

    .line 17308
    .restart local v9    # "N":I
    .restart local v10    # "i":I
    .restart local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_5
    add-int/lit8 v10, v10, 0x1

    goto :goto_0
.end method

.method public unhandledBack()V
    .locals 4

    .prologue
    .line 10451
    const-string/jumbo v2, "android.permission.FORCE_BACK"

    .line 10452
    const-string/jumbo v3, "unhandledBack()"

    .line 10451
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10454
    monitor-enter p0

    .line 10455
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 10457
    .local v0, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->unhandledBackLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10459
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 10450
    return-void

    .line 10458
    :catchall_0
    move-exception v2

    .line 10459
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10458
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10454
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    .line 11201
    monitor-enter p0

    .line 11202
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 11200
    return-void

    .line 11201
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 12
    .param p1, "receiver"    # Landroid/content/IIntentReceiver;

    .prologue
    .line 16598
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 16600
    .local v10, "origId":J
    const/4 v8, 0x0

    .line 16602
    .local v8, "doTrim":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16603
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ReceiverList;

    .line 16604
    .local v9, "rl":Lcom/android/server/am/ReceiverList;
    if-eqz v9, :cond_2

    .line 16605
    iget-object v1, v9, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 16606
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_0

    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v0

    if-ne v1, v0, :cond_0

    .line 16607
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    .line 16608
    iget v2, v1, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v3, v1, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    .line 16609
    iget-boolean v5, v1, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    const/4 v6, 0x0

    .line 16607
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v7

    .line 16610
    .local v7, "doNext":Z
    if-eqz v7, :cond_0

    .line 16611
    const/4 v8, 0x1

    .line 16612
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    .line 16616
    .end local v7    # "doNext":Z
    :cond_0
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_1

    .line 16617
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v0, v9}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 16619
    :cond_1
    invoke-virtual {p0, v9}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 16620
    iget-boolean v0, v9, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v0, :cond_2

    .line 16621
    const/4 v0, 0x0

    iput-boolean v0, v9, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 16622
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v0}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    const/4 v2, 0x0

    invoke-interface {v0, v9, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_2
    :try_start_2
    monitor-exit p0

    .line 16629
    if-eqz v8, :cond_3

    .line 16630
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16635
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16631
    return-void

    .line 16602
    .end local v9    # "rl":Lcom/android/server/am/ReceiverList;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 16634
    :catchall_1
    move-exception v0

    .line 16635
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16634
    throw v0

    .line 16635
    .restart local v9    # "rl":Lcom/android/server/am/ReceiverList;
    :cond_3
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16595
    return-void
.end method

.method public unregisterUidObserver(Landroid/app/IUidObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUidObserver;

    .prologue
    .line 11216
    monitor-enter p0

    .line 11217
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 11215
    return-void

    .line 11216
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    .line 20872
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 20871
    return-void
.end method

.method unsafeConvertIncomingUser(I)I
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 16071
    const/4 v0, -0x2

    if-eq p1, v0, :cond_0

    const/4 v0, -0x3

    if-ne p1, v0, :cond_1

    .line 16072
    :cond_0
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 16071
    .end local p1    # "userId":I
    :cond_1
    return p1
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 12
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    .line 10191
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10198
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    .line 10199
    new-instance v9, Ljava/lang/NullPointerException;

    const-string/jumbo v10, "connection is null"

    invoke-direct {v9, v10}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 10192
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v3

    .line 10193
    .local v3, "e":Ljava/lang/ClassCastException;
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "refContentProvider: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    .line 10194
    const-string/jumbo v10, " not a ContentProviderConnection"

    .line 10193
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 10195
    .local v6, "msg":Ljava/lang/String;
    const-string/jumbo v9, "ActivityManager"

    invoke-static {v9, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10196
    new-instance v9, Ljava/lang/IllegalArgumentException;

    invoke-direct {v9, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 10204
    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    .line 10205
    :try_start_1
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v8, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v8, "provider":Landroid/content/IContentProvider;
    monitor-exit p0

    .line 10208
    if-nez v8, :cond_1

    .line 10210
    return-void

    .line 10204
    .end local v8    # "provider":Landroid/content/IContentProvider;
    :catchall_0
    move-exception v9

    monitor-exit p0

    throw v9

    .line 10214
    .restart local v8    # "provider":Landroid/content/IContentProvider;
    :cond_1
    invoke-interface {v8}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    invoke-interface {v9}, Landroid/os/IBinder;->pingBinder()Z

    move-result v9

    if-eqz v9, :cond_2

    .line 10216
    monitor-enter p0

    .line 10217
    :try_start_2
    const-string/jumbo v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "unstableProviderDied: caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 10218
    const-string/jumbo v11, " says "

    .line 10217
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 10218
    const-string/jumbo v11, " died, but we don\'t agree"

    .line 10217
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    monitor-exit p0

    .line 10219
    return-void

    .line 10216
    :catchall_1
    move-exception v9

    monitor-exit p0

    throw v9

    .line 10224
    :cond_2
    monitor-enter p0

    .line 10225
    :try_start_3
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v9, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    if-eq v9, v8, :cond_3

    monitor-exit p0

    .line 10227
    return-void

    .line 10230
    :cond_3
    :try_start_4
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v9, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 10231
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_4

    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    if-nez v9, :cond_5

    :cond_4
    monitor-exit p0

    .line 10233
    return-void

    .line 10238
    :cond_5
    :try_start_5
    const-string/jumbo v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "Process "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v11, " (pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    .line 10239
    const-string/jumbo v11, ") early provider death"

    .line 10238
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10240
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    move-result-wide v4

    .line 10242
    .local v4, "ident":J
    :try_start_6
    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 10244
    :try_start_7
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    monitor-exit p0

    .line 10188
    return-void

    .line 10243
    :catchall_2
    move-exception v9

    .line 10244
    :try_start_8
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10243
    throw v9
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 10224
    .end local v4    # "ident":J
    .end local v7    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_3
    move-exception v9

    monitor-exit p0

    throw v9
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    .line 17590
    const-string/jumbo v2, "android.permission.CHANGE_CONFIGURATION"

    .line 17591
    const-string/jumbo v3, "updateConfiguration()"

    .line 17590
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 17593
    monitor-enter p0

    .line 17594
    if-nez p1, :cond_0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_0

    .line 17596
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration()Landroid/content/res/Configuration;

    move-result-object p1

    .line 17599
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_1

    .line 17600
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    .line 17603
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 17604
    .local v0, "origId":J
    if-eqz p1, :cond_2

    .line 17605
    invoke-static {p1}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V

    .line 17607
    :cond_2
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 17608
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17589
    return-void

    .line 17593
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
    .locals 32
    .param p1, "values"    # Landroid/content/res/Configuration;
    .param p2, "starting"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "persistent"    # Z
    .param p4, "initLocale"    # Z

    .prologue
    .line 17622
    const/16 v22, 0x0

    .line 17624
    .local v22, "changes":I
    if-eqz p1, :cond_9

    .line 17625
    new-instance v31, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v31

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 17626
    .local v31, "newConfig":Landroid/content/res/Configuration;
    move-object/from16 v0, v31

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result v22

    .line 17627
    if-eqz v22, :cond_9

    .line 17631
    const/16 v3, 0xa9f

    move/from16 v0, v22

    invoke-static {v3, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 17633
    if-nez p4, :cond_0

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    if-eqz v3, :cond_0

    move-object/from16 v0, p1

    iget-boolean v3, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    if-eqz v3, :cond_0

    .line 17634
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v3}, Ljava/util/Locale;->toLanguageTag()Ljava/lang/String;

    move-result-object v28

    .line 17635
    .local v28, "languageTag":Ljava/lang/String;
    const-string/jumbo v3, "persist.sys.locale"

    move-object/from16 v0, v28

    invoke-static {v3, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 17636
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 17637
    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    .line 17636
    const/16 v7, 0x2f

    invoke-virtual {v4, v7, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 17640
    .end local v28    # "languageTag":Ljava/lang/String;
    :cond_0
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;

    if-eqz v3, :cond_1

    .line 17641
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;

    .line 17642
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget-object v5, v5, Landroid/content/res/Configuration;->themeConfig:Landroid/content/res/ThemeConfig;

    invoke-virtual {v3, v5}, Landroid/content/res/ThemeConfig;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_6

    const/4 v3, 0x0

    .line 17641
    :goto_0
    move-object/from16 v0, p0

    invoke-direct {v0, v4, v3}, Lcom/android/server/am/ActivityManagerService;->saveThemeResourceLocked(Landroid/content/res/ThemeConfig;Z)V

    .line 17645
    :cond_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 17646
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    if-gtz v3, :cond_2

    .line 17647
    const/4 v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 17649
    :cond_2
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    move-object/from16 v0, v31

    iput v3, v0, Landroid/content/res/Configuration;->seq:I

    .line 17650
    move-object/from16 v0, v31

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 17651
    const-string/jumbo v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Config changes="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17652
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, v31

    invoke-virtual {v3, v0, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportConfigurationChange(Landroid/content/res/Configuration;I)V

    .line 17655
    new-instance v23, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v23

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 17659
    .local v23, "configCopy":Landroid/content/res/Configuration;
    invoke-static/range {v31 .. v31}, Lcom/android/server/am/ActivityManagerService;->shouldShowDialogs(Landroid/content/res/Configuration;)Z

    move-result v3

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 17661
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v20

    .line 17662
    .local v20, "ac":Lcom/android/server/AttributeCache;
    if-eqz v20, :cond_3

    .line 17663
    move-object/from16 v0, v20

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V

    .line 17673
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    move-object/from16 v0, v23

    invoke-virtual {v3, v0}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V

    .line 17675
    if-eqz p3, :cond_4

    invoke-static/range {v22 .. v22}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z

    move-result v3

    if-eqz v3, :cond_4

    .line 17676
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v30

    .line 17677
    .local v30, "msg":Landroid/os/Message;
    new-instance v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v23

    invoke-direct {v3, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v30

    iput-object v3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 17678
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v30

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 17681
    .end local v30    # "msg":Landroid/os/Message;
    :cond_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v25, v3, -0x1

    .local v25, "i":I
    :goto_1
    if-ltz v25, :cond_7

    .line 17682
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/ProcessRecord;

    .line 17684
    .local v21, "app":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_5

    .line 17687
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v23

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationChanged(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 17681
    :cond_5
    :goto_2
    add-int/lit8 v25, v25, -0x1

    goto :goto_1

    .line 17642
    .end local v20    # "ac":Lcom/android/server/AttributeCache;
    .end local v21    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "configCopy":Landroid/content/res/Configuration;
    .end local v25    # "i":I
    :cond_6
    const/4 v3, 0x1

    goto/16 :goto_0

    .line 17692
    .restart local v20    # "ac":Lcom/android/server/AttributeCache;
    .restart local v23    # "configCopy":Landroid/content/res/Configuration;
    .restart local v25    # "i":I
    :cond_7
    new-instance v6, Landroid/content/Intent;

    const-string/jumbo v3, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17693
    .local v6, "intent":Landroid/content/Intent;
    const/high16 v3, 0x70000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17698
    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 17696
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    .line 17697
    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move/from16 v0, v22

    move-object/from16 v1, v31

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerServiceInjector;->handleExtraConfigurationChangesForSystem(ILandroid/content/res/Configuration;)V

    and-int/lit8 v3, v22, 0x4

    if-eqz v3, :cond_9

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v3}, Landroid/text/format/DateFormat;->is24HourFormat(Landroid/content/Context;)Z

    move-result v3

    if-eqz v3, :cond_d

    const/16 v26, 0x1

    .line 17702
    .local v26, "is24Hour":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x29

    const/4 v7, 0x0

    move/from16 v0, v26

    invoke-virtual {v4, v5, v0, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 17704
    new-instance v6, Landroid/content/Intent;

    .end local v6    # "intent":Landroid/content/Intent;
    const-string/jumbo v3, "android.intent.action.LOCALE_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17705
    .restart local v6    # "intent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17706
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v3, :cond_8

    .line 17707
    const/high16 v3, 0x40000000    # 2.0f

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17711
    :cond_8
    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 17709
    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 17710
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    .line 17711
    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    .line 17709
    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 17716
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v20    # "ac":Lcom/android/server/AttributeCache;
    .end local v23    # "configCopy":Landroid/content/res/Configuration;
    .end local v25    # "i":I
    .end local v26    # "is24Hour":I
    .end local v31    # "newConfig":Landroid/content/res/Configuration;
    :cond_9
    const/16 v27, 0x1

    .line 17717
    .local v27, "kept":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v29

    .line 17719
    .local v29, "mainStack":Lcom/android/server/am/ActivityStack;
    if-eqz v29, :cond_b

    .line 17720
    if-eqz v22, :cond_a

    if-nez p2, :cond_a

    .line 17724
    const/4 v3, 0x0

    move-object/from16 v0, v29

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    .line 17727
    :cond_a
    if-eqz p2, :cond_b

    .line 17728
    move-object/from16 v0, v29

    move-object/from16 v1, p2

    move/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    move-result v27

    .line 17731
    .local v27, "kept":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 17735
    .end local v27    # "kept":Z
    :cond_b
    if-eqz p1, :cond_c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v3, :cond_c

    .line 17736
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService;->setNewConfiguration(Landroid/content/res/Configuration;)V

    .line 17739
    :cond_c
    return v27

    .line 17701
    .end local v29    # "mainStack":Lcom/android/server/am/ActivityStack;
    .restart local v6    # "intent":Landroid/content/Intent;
    .restart local v20    # "ac":Lcom/android/server/AttributeCache;
    .restart local v23    # "configCopy":Landroid/content/res/Configuration;
    .restart local v25    # "i":I
    .restart local v31    # "newConfig":Landroid/content/res/Configuration;
    :cond_d
    const/16 v26, 0x0

    .restart local v26    # "is24Hour":I
    goto/16 :goto_3

    .line 17689
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v26    # "is24Hour":I
    .restart local v21    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v24

    .local v24, "e":Ljava/lang/Exception;
    goto/16 :goto_2
.end method

.method updateCpuStats()V
    .locals 6

    .prologue
    .line 2591
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 2592
    .local v0, "now":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v2

    const-wide/16 v4, 0x1388

    sub-long v4, v0, v4

    cmp-long v2, v2, v4

    if-ltz v2, :cond_0

    .line 2593
    return-void

    .line 2595
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 2596
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    monitor-enter v3

    .line 2597
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v2}, Ljava/lang/Thread;->notify()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v3

    .line 2590
    :cond_1
    return-void

    .line 2596
    :catchall_0
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method updateCpuStatsNow()V
    .locals 36

    .prologue
    .line 2603
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v29, v0

    monitor-enter v29

    .line 2604
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    move-object/from16 v28, v0

    const/16 v30, 0x0

    move-object/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 2605
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v20

    .line 2606
    .local v20, "now":J
    const/4 v14, 0x0

    .line 2609
    .local v14, "haveNewCpuStats":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v30

    const-wide/16 v32, 0x1388

    sub-long v32, v20, v32

    cmp-long v28, v30, v32

    if-gez v28, :cond_1

    .line 2610
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    move-wide/from16 v1, v20

    invoke-virtual {v0, v1, v2}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    .line 2611
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 2612
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->hasGoodLastStats()Z

    move-result v28

    if-eqz v28, :cond_1

    .line 2613
    const/4 v14, 0x1

    .line 2619
    const-string/jumbo v28, "true"

    const-string/jumbo v30, "events.cpu"

    invoke-static/range {v30 .. v30}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v30

    move-object/from16 v0, v28

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v28

    if-eqz v28, :cond_1

    .line 2620
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v27

    .line 2621
    .local v27, "user":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v25

    .line 2622
    .local v25, "system":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v17

    .line 2623
    .local v17, "iowait":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v18

    .line 2624
    .local v18, "irq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v23

    .line 2625
    .local v23, "softIrq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v16

    .line 2627
    .local v16, "idle":I
    add-int v28, v27, v25

    add-int v28, v28, v17

    add-int v28, v28, v18

    add-int v28, v28, v23

    add-int v26, v28, v16

    .line 2628
    .local v26, "total":I
    if-nez v26, :cond_0

    const/16 v26, 0x1

    .line 2630
    :cond_0
    const/16 v28, 0x6

    move/from16 v0, v28

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v28, v0

    .line 2631
    add-int v30, v27, v25

    add-int v30, v30, v17

    add-int v30, v30, v18

    add-int v30, v30, v23

    mul-int/lit8 v30, v30, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x0

    aput-object v30, v28, v31

    .line 2632
    mul-int/lit8 v30, v27, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x1

    aput-object v30, v28, v31

    .line 2633
    mul-int/lit8 v30, v25, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x2

    aput-object v30, v28, v31

    .line 2634
    mul-int/lit8 v30, v17, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x3

    aput-object v30, v28, v31

    .line 2635
    mul-int/lit8 v30, v18, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x4

    aput-object v30, v28, v31

    .line 2636
    mul-int/lit8 v30, v23, 0x64

    div-int v30, v30, v26

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    const/16 v31, 0x5

    aput-object v30, v28, v31

    .line 2630
    const/16 v30, 0xaa1

    move/from16 v0, v30

    move-object/from16 v1, v28

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 2641
    .end local v16    # "idle":I
    .end local v17    # "iowait":I
    .end local v18    # "irq":I
    .end local v23    # "softIrq":I
    .end local v25    # "system":I
    .end local v26    # "total":I
    .end local v27    # "user":I
    :cond_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v4

    .line 2642
    .local v4, "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 2643
    :try_start_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v30, v0

    monitor-enter v30
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2644
    if-eqz v14, :cond_7

    .line 2645
    :try_start_2
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl;->startAddingCpuLocked()Z

    move-result v28

    if-eqz v28, :cond_7

    .line 2646
    const/4 v5, 0x0

    .line 2647
    .local v5, "totalUTime":I
    const/4 v6, 0x0

    .line 2648
    .local v6, "totalSTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v13

    .line 2649
    .local v13, "N":I
    const/4 v15, 0x0

    .local v15, "i":I
    :goto_0
    if-ge v15, v13, :cond_6

    .line 2650
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    invoke-virtual {v0, v15}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v24

    .line 2651
    .local v24, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->working:Z

    move/from16 v28, v0

    if-nez v28, :cond_2

    .line 2649
    :goto_1
    add-int/lit8 v15, v15, 0x1

    goto :goto_0

    .line 2654
    :cond_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v31, v0

    move-object/from16 v0, v28

    move/from16 v1, v31

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    .line 2655
    .local v19, "pr":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    add-int v5, v5, v28

    .line 2656
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v28, v0

    add-int v6, v6, v28

    .line 2657
    if-eqz v19, :cond_4

    .line 2658
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v22, v0

    .line 2659
    .local v22, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v22, :cond_3

    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v28

    if-eqz v28, :cond_3

    .line 2663
    :goto_2
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    move-object/from16 v0, v22

    move/from16 v1, v28

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    .line 2664
    move-object/from16 v0, v19

    iget-wide v0, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v32, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    add-int v28, v28, v31

    move/from16 v0, v28

    int-to-long v0, v0

    move-wide/from16 v34, v0

    add-long v32, v32, v34

    move-wide/from16 v0, v32

    move-object/from16 v2, v19

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1

    .line 2643
    .end local v5    # "totalUTime":I
    .end local v6    # "totalSTime":I
    .end local v13    # "N":I
    .end local v15    # "i":I
    .end local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_0
    move-exception v28

    :try_start_3
    monitor-exit v30

    throw v28
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 2642
    :catchall_1
    move-exception v28

    :try_start_4
    monitor-exit v4

    throw v28
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 2603
    .end local v4    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v14    # "haveNewCpuStats":Z
    .end local v20    # "now":J
    :catchall_2
    move-exception v28

    monitor-exit v29

    throw v28

    .line 2661
    .restart local v4    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v5    # "totalUTime":I
    .restart local v6    # "totalSTime":I
    .restart local v13    # "N":I
    .restart local v14    # "haveNewCpuStats":Z
    .restart local v15    # "i":I
    .restart local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "now":J
    .restart local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .restart local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_3
    :try_start_5
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v31, v0

    .line 2660
    move/from16 v0, v28

    move-object/from16 v1, v31

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v22

    move-object/from16 v0, v22

    move-object/from16 v1, v19

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    goto :goto_2

    .line 2666
    .end local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    :cond_4
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v22, v0

    .line 2667
    .restart local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v22, :cond_5

    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v28

    if-eqz v28, :cond_5

    .line 2671
    :goto_3
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    move-object/from16 v0, v22

    move/from16 v1, v28

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    goto/16 :goto_1

    .line 2669
    :cond_5
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    move/from16 v28, v0

    move/from16 v0, v28

    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v28

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v31, v0

    .line 2668
    move/from16 v0, v28

    move-object/from16 v1, v31

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v22

    move-object/from16 v0, v22

    move-object/from16 v1, v24

    iput-object v0, v1, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    goto :goto_3

    .line 2674
    .end local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v7

    .line 2675
    .local v7, "userTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v8

    .line 2676
    .local v8, "systemTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v9

    .line 2677
    .local v9, "iowaitTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v10

    .line 2678
    .local v10, "irqTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v11

    .line 2679
    .local v11, "softIrqTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v12

    .line 2680
    .local v12, "idleTime":I
    invoke-virtual/range {v4 .. v12}, Lcom/android/internal/os/BatteryStatsImpl;->finishAddingCpuLocked(IIIIIIII)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .end local v5    # "totalUTime":I
    .end local v6    # "totalSTime":I
    .end local v7    # "userTime":I
    .end local v8    # "systemTime":I
    .end local v9    # "iowaitTime":I
    .end local v10    # "irqTime":I
    .end local v11    # "softIrqTime":I
    .end local v12    # "idleTime":I
    .end local v13    # "N":I
    .end local v15    # "i":I
    :cond_7
    :try_start_6
    monitor-exit v30

    .line 2686
    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    move-wide/from16 v30, v0

    const-wide/32 v32, 0x1b7740

    sub-long v32, v20, v32

    cmp-long v28, v30, v32

    if-gez v28, :cond_8

    .line 2687
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 2688
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :cond_8
    :try_start_7
    monitor-exit v4
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    monitor-exit v29

    .line 2602
    return-void
.end method

.method public updateDeviceOwner(Ljava/lang/String;)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 9219
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9220
    .local v0, "callingUid":I
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 9221
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "updateDeviceOwner called from non-system process"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9223
    :cond_0
    monitor-enter p0

    .line 9224
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 9218
    return-void

    .line 9223
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public updateLockTaskPackages(I[Ljava/lang/String;)V
    .locals 3
    .param p1, "userId"    # I
    .param p2, "packages"    # [Ljava/lang/String;

    .prologue
    .line 9230
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9231
    .local v0, "callingUid":I
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 9232
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "updateLockTaskPackage called from non-system process"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9234
    :cond_0
    monitor-enter p0

    .line 9237
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskPackages:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, p2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9238
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->onLockTaskPackagesUpdatedLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 9229
    return-void

    .line 9234
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 29
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activityChange"    # Z
    .param p3, "client"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 2936
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-nez v2, :cond_0

    .line 2937
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    move/from16 v20, v0

    .line 2938
    :goto_0
    const/16 v21, 0x0

    .line 2939
    .local v21, "hasService":Z
    if-nez p2, :cond_1

    if-eqz v20, :cond_1

    .line 2944
    return-void

    .line 2936
    .end local v21    # "hasService":Z
    :cond_0
    const/16 v20, 0x1

    .local v20, "hasActivity":Z
    goto :goto_0

    .line 2947
    .end local v20    # "hasActivity":Z
    .restart local v21    # "hasService":Z
    :cond_1
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 2948
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 2949
    .local v4, "now":J
    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 2953
    if-eqz v20, :cond_2

    .line 2954
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .line 2955
    .local v18, "N":I
    if-lez v18, :cond_3

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v2, v0, :cond_3

    .line 2957
    return-void

    .line 2960
    .end local v18    # "N":I
    :cond_2
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-lez v2, :cond_3

    .line 2961
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v3, v3, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v2, v0, :cond_3

    .line 2963
    return-void

    .line 2967
    :cond_3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v25

    .line 2969
    .local v25, "lrui":I
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_4

    if-ltz v25, :cond_4

    .line 2973
    return-void

    .line 3010
    :cond_4
    if-ltz v25, :cond_7

    .line 3011
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_5

    .line 3012
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 3014
    :cond_5
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_6

    .line 3015
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 3025
    :cond_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3039
    :cond_7
    if-eqz v20, :cond_c

    .line 3040
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .line 3041
    .restart local v18    # "N":I
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_9

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v3, v18, -0x1

    if-ge v2, v3, :cond_9

    .line 3047
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    move-object/from16 v0, p1

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 3050
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    .line 3051
    .local v28, "uid":I
    add-int/lit8 v22, v18, -0x2

    .local v22, "i":I
    :goto_1
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v22

    if-le v0, v2, :cond_a

    .line 3052
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    .line 3053
    .local v26, "subProc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v26

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-ne v2, v0, :cond_a

    .line 3057
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-eq v2, v0, :cond_8

    .line 3061
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Lcom/android/server/am/ProcessRecord;

    .line 3062
    .local v27, "tmp":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v7, v22, -0x1

    invoke-virtual {v2, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    move/from16 v0, v22

    invoke-virtual {v3, v0, v2}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 3063
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    move-object/from16 v0, v27

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 3064
    add-int/lit8 v22, v22, -0x1

    .line 3051
    .end local v27    # "tmp":Lcom/android/server/am/ProcessRecord;
    :cond_8
    add-int/lit8 v22, v22, -0x1

    goto :goto_1

    .line 3074
    .end local v22    # "i":I
    .end local v26    # "subProc":Lcom/android/server/am/ProcessRecord;
    .end local v28    # "uid":I
    :cond_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3076
    :cond_a
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 3110
    .end local v18    # "N":I
    .local v6, "nextIndex":I
    :goto_2
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    .local v24, "j":I
    :goto_3
    if-ltz v24, :cond_10

    .line 3111
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ConnectionRecord;

    .line 3112
    .local v8, "cr":Lcom/android/server/am/ConnectionRecord;
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    if-eqz v2, :cond_b

    iget-boolean v2, v8, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    if-eqz v2, :cond_f

    .line 3110
    :cond_b
    :goto_4
    add-int/lit8 v24, v24, -0x1

    goto :goto_3

    .line 3085
    .end local v6    # "nextIndex":I
    .end local v8    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v24    # "j":I
    :cond_c
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v23, v0

    .line 3086
    .local v23, "index":I
    if-eqz p3, :cond_e

    .line 3089
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v19

    .line 3092
    .local v19, "clientIndex":I
    move/from16 v0, v19

    move/from16 v1, v25

    if-gt v0, v1, :cond_d

    .line 3095
    move/from16 v19, v25

    .line 3097
    :cond_d
    if-ltz v19, :cond_e

    move/from16 v0, v23

    move/from16 v1, v19

    if-le v0, v1, :cond_e

    .line 3098
    move/from16 v23, v19

    .line 3102
    .end local v19    # "clientIndex":I
    :cond_e
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v23

    move-object/from16 v1, p1

    invoke-virtual {v2, v0, v1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 3103
    add-int/lit8 v6, v23, -0x1

    .line 3104
    .restart local v6    # "nextIndex":I
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 3105
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    goto :goto_2

    .line 3112
    .end local v23    # "index":I
    .restart local v8    # "cr":Lcom/android/server/am/ConnectionRecord;
    .restart local v24    # "j":I
    :cond_f
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    if-eqz v2, :cond_b

    .line 3113
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_b

    .line 3114
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_b

    .line 3115
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v2, :cond_b

    .line 3116
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 3117
    const-string/jumbo v7, "service connection"

    move-object/from16 v2, p0

    move-object/from16 v9, p1

    .line 3116
    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    goto :goto_4

    .line 3120
    .end local v8    # "cr":Lcom/android/server/am/ConnectionRecord;
    :cond_10
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    :goto_5
    if-ltz v24, :cond_13

    .line 3121
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;

    iget-object v0, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v16, v0

    .line 3122
    .local v16, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_11

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_11

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_12

    .line 3120
    :cond_11
    :goto_6
    add-int/lit8 v24, v24, -0x1

    goto :goto_5

    .line 3123
    :cond_12
    move-object/from16 v0, v16

    iget-object v11, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 3124
    const-string/jumbo v15, "provider reference"

    move-object/from16 v10, p0

    move-wide v12, v4

    move v14, v6

    move-object/from16 v17, p1

    .line 3123
    invoke-direct/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    goto :goto_6

    .line 2935
    .end local v16    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_13
    return-void
.end method

.method final updateOomAdjLocked()V
    .locals 53

    .prologue
    .line 19338
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v10

    .line 19339
    .local v10, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v10, :cond_0

    iget-object v6, v10, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 19340
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 19341
    .local v8, "now":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v16

    .line 19342
    .local v16, "nowElapsed":J
    const-wide/32 v12, 0x1b7740

    sub-long v42, v8, v12

    .line 19343
    .local v42, "oldTime":J
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 19352
    .local v2, "N":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v29, v3, -0x1

    .local v29, "i":I
    :goto_1
    if-ltz v29, :cond_1

    .line 19353
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v52

    check-cast v52, Lcom/android/server/am/UidRecord;

    .line 19356
    .local v52, "uidRec":Lcom/android/server/am/UidRecord;
    invoke-virtual/range {v52 .. v52}, Lcom/android/server/am/UidRecord;->reset()V

    .line 19352
    add-int/lit8 v29, v29, -0x1

    goto :goto_1

    .line 19339
    .end local v2    # "N":I
    .end local v8    # "now":J
    .end local v16    # "nowElapsed":J
    .end local v29    # "i":I
    .end local v42    # "oldTime":J
    .end local v52    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_0
    const/4 v6, 0x0

    .local v6, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 19359
    .end local v6    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v2    # "N":I
    .restart local v8    # "now":J
    .restart local v16    # "nowElapsed":J
    .restart local v29    # "i":I
    .restart local v42    # "oldTime":J
    :cond_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 19360
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 19361
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 19365
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-gtz v3, :cond_6

    .line 19366
    const/16 v20, 0x0

    .local v20, "cachedProcessLimit":I
    const/16 v26, 0x0

    .line 19381
    .local v26, "emptyProcessLimit":I
    :goto_2
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    sub-int v3, v2, v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    sub-int v39, v3, v5

    .line 19382
    .local v39, "numEmptyProcs":I
    move/from16 v0, v39

    move/from16 v1, v20

    if-le v0, v1, :cond_2

    .line 19389
    move/from16 v39, v20

    .line 19391
    :cond_2
    div-int/lit8 v25, v39, 0x3

    .line 19392
    .local v25, "emptyFactor":I
    const/4 v3, 0x1

    move/from16 v0, v25

    if-ge v0, v3, :cond_3

    const/16 v25, 0x1

    .line 19393
    :cond_3
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    if-lez v3, :cond_8

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    :goto_3
    div-int/lit8 v19, v3, 0x3

    .line 19394
    .local v19, "cachedFactor":I
    const/4 v3, 0x1

    move/from16 v0, v19

    if-ge v0, v3, :cond_4

    const/16 v19, 0x1

    .line 19395
    :cond_4
    const/16 v49, 0x0

    .line 19396
    .local v49, "stepCached":I
    const/16 v50, 0x0

    .line 19397
    .local v50, "stepEmpty":I
    const/16 v36, 0x0

    .line 19398
    .local v36, "numCached":I
    const/16 v38, 0x0

    .line 19399
    .local v38, "numEmpty":I
    const/16 v40, 0x0

    .line 19401
    .local v40, "numTrimming":I
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 19402
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 19406
    const/16 v21, 0x9

    .line 19407
    .local v21, "curCachedAdj":I
    const/16 v33, 0xa

    .line 19408
    .local v33, "nextCachedAdj":I
    const/16 v22, 0x9

    .line 19409
    .local v22, "curEmptyAdj":I
    const/16 v34, 0xb

    .line 19410
    .local v34, "nextEmptyAdj":I
    const/16 v44, 0x0

    .line 19411
    .local v44, "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    const-wide/16 v46, 0x0

    .line 19412
    .local v46, "serviceLastActivity":J
    const/16 v35, 0x0

    .line 19413
    .local v35, "numBServices":I
    add-int/lit8 v29, v2, -0x1

    .end local v44    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    :goto_4
    if-ltz v29, :cond_13

    .line 19414
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 19415
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    if-eqz v3, :cond_b

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_b

    .line 19416
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x8

    if-ne v3, v5, :cond_b

    .line 19417
    add-int/lit8 v35, v35, 0x1

    .line 19418
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v41, v3, -0x1

    .local v41, "s":I
    :goto_5
    if-ltz v41, :cond_b

    .line 19419
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v41

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v45

    check-cast v45, Lcom/android/server/am/ServiceRecord;

    .line 19424
    .local v45, "sr":Lcom/android/server/am/ServiceRecord;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, v45

    iget-wide v14, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    sub-long/2addr v12, v14

    .line 19425
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    int-to-long v14, v3

    .line 19424
    cmp-long v3, v12, v14

    if-gez v3, :cond_9

    .line 19418
    :cond_5
    :goto_6
    add-int/lit8 v41, v41, -0x1

    goto :goto_5

    .line 19367
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "cachedFactor":I
    .end local v20    # "cachedProcessLimit":I
    .end local v21    # "curCachedAdj":I
    .end local v22    # "curEmptyAdj":I
    .end local v25    # "emptyFactor":I
    .end local v26    # "emptyProcessLimit":I
    .end local v33    # "nextCachedAdj":I
    .end local v34    # "nextEmptyAdj":I
    .end local v35    # "numBServices":I
    .end local v36    # "numCached":I
    .end local v38    # "numEmpty":I
    .end local v39    # "numEmptyProcs":I
    .end local v40    # "numTrimming":I
    .end local v41    # "s":I
    .end local v45    # "sr":Lcom/android/server/am/ServiceRecord;
    .end local v46    # "serviceLastActivity":J
    .end local v49    # "stepCached":I
    .end local v50    # "stepEmpty":I
    :cond_6
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_7

    .line 19368
    const/16 v26, 0x1

    .line 19369
    .restart local v26    # "emptyProcessLimit":I
    const/16 v20, 0x0

    .restart local v20    # "cachedProcessLimit":I
    goto/16 :goto_2

    .line 19371
    .end local v20    # "cachedProcessLimit":I
    .end local v26    # "emptyProcessLimit":I
    :cond_7
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    invoke-static {v3}, Lcom/android/server/am/ProcessList;->computeEmptyProcessLimit(I)I

    move-result v26

    .line 19372
    .restart local v26    # "emptyProcessLimit":I
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    sub-int v20, v3, v26

    .restart local v20    # "cachedProcessLimit":I
    goto/16 :goto_2

    .line 19393
    .restart local v25    # "emptyFactor":I
    .restart local v39    # "numEmptyProcs":I
    :cond_8
    const/4 v3, 0x1

    goto/16 :goto_3

    .line 19431
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v19    # "cachedFactor":I
    .restart local v21    # "curCachedAdj":I
    .restart local v22    # "curEmptyAdj":I
    .restart local v33    # "nextCachedAdj":I
    .restart local v34    # "nextEmptyAdj":I
    .restart local v35    # "numBServices":I
    .restart local v36    # "numCached":I
    .restart local v38    # "numEmpty":I
    .restart local v40    # "numTrimming":I
    .restart local v41    # "s":I
    .restart local v45    # "sr":Lcom/android/server/am/ServiceRecord;
    .restart local v46    # "serviceLastActivity":J
    .restart local v49    # "stepCached":I
    .restart local v50    # "stepEmpty":I
    :cond_9
    const-wide/16 v12, 0x0

    cmp-long v3, v46, v12

    if-nez v3, :cond_a

    .line 19432
    move-object/from16 v0, v45

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v46, v0

    .line 19433
    move-object/from16 v44, v4

    .local v44, "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    goto :goto_6

    .line 19434
    .end local v44    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    :cond_a
    move-object/from16 v0, v45

    iget-wide v12, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    cmp-long v3, v12, v46

    if-gez v3, :cond_5

    .line 19435
    move-object/from16 v0, v45

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v46, v0

    .line 19436
    move-object/from16 v44, v4

    .restart local v44    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    goto :goto_6

    .line 19443
    .end local v41    # "s":I
    .end local v44    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    .end local v45    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_b
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_f

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_f

    .line 19444
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 19445
    const/16 v5, 0x10

    const/4 v7, 0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    .line 19449
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x10

    if-lt v3, v5, :cond_c

    .line 19450
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_0

    .line 19479
    move/from16 v0, v22

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 19480
    move/from16 v0, v22

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 19484
    move/from16 v0, v22

    move/from16 v1, v34

    if-eq v0, v1, :cond_c

    .line 19485
    add-int/lit8 v50, v50, 0x1

    .line 19486
    move/from16 v0, v50

    move/from16 v1, v25

    if-lt v0, v1, :cond_c

    .line 19487
    const/16 v50, 0x0

    .line 19488
    move/from16 v22, v34

    .line 19489
    add-int/lit8 v34, v34, 0x2

    .line 19490
    const/16 v3, 0xf

    move/from16 v0, v34

    if-le v0, v3, :cond_c

    .line 19491
    const/16 v34, 0xf

    .line 19499
    :cond_c
    :goto_7
    const/4 v13, 0x1

    move-object/from16 v11, p0

    move-object v12, v4

    move-wide v14, v8

    invoke-direct/range {v11 .. v17}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    .line 19502
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_1

    .line 19525
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 19529
    :cond_d
    :goto_8
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v3, :cond_11

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-gtz v3, :cond_11

    .line 19536
    const-string/jumbo v3, "isolated not needed"

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 19545
    :cond_e
    :goto_9
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xc

    if-lt v3, v5, :cond_f

    .line 19546
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v3, :cond_12

    .line 19413
    :cond_f
    :goto_a
    add-int/lit8 v29, v29, -0x1

    goto/16 :goto_4

    .line 19456
    :pswitch_0
    move/from16 v0, v21

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 19457
    move/from16 v0, v21

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 19461
    move/from16 v0, v21

    move/from16 v1, v33

    if-eq v0, v1, :cond_c

    .line 19462
    add-int/lit8 v49, v49, 0x1

    .line 19463
    move/from16 v0, v49

    move/from16 v1, v19

    if-lt v0, v1, :cond_c

    .line 19464
    const/16 v49, 0x0

    .line 19465
    move/from16 v21, v33

    .line 19466
    add-int/lit8 v33, v33, 0x2

    .line 19467
    const/16 v3, 0xf

    move/from16 v0, v33

    if-le v0, v3, :cond_c

    .line 19468
    const/16 v33, 0xf

    goto :goto_7

    .line 19505
    :pswitch_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 19506
    add-int/lit8 v36, v36, 0x1

    .line 19507
    move/from16 v0, v36

    move/from16 v1, v20

    if-le v0, v1, :cond_d

    .line 19508
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "cached #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v36

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_8

    .line 19512
    :pswitch_2
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v38

    if-le v0, v3, :cond_10

    .line 19513
    iget-wide v12, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    cmp-long v3, v12, v42

    if-gez v3, :cond_10

    .line 19514
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "empty for "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 19515
    const-wide/32 v12, 0x1b7740

    add-long v12, v12, v42

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long/2addr v12, v14

    .line 19516
    const-wide/16 v14, 0x3e8

    .line 19515
    div-long/2addr v12, v14

    .line 19514
    invoke-virtual {v3, v12, v13}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 19516
    const-string/jumbo v5, "s"

    .line 19514
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 19516
    const/4 v5, 0x1

    .line 19514
    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_8

    .line 19518
    :cond_10
    add-int/lit8 v38, v38, 0x1

    .line 19519
    move/from16 v0, v38

    move/from16 v1, v26

    if-le v0, v1, :cond_d

    .line 19520
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "empty #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v38

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_8

    .line 19539
    :cond_11
    iget-object v0, v4, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    move-object/from16 v52, v0

    .line 19540
    .restart local v52    # "uidRec":Lcom/android/server/am/UidRecord;
    if-eqz v52, :cond_e

    move-object/from16 v0, v52

    iget v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    iget v5, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-le v3, v5, :cond_e

    .line 19541
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, v52

    iput v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    goto/16 :goto_9

    .line 19547
    .end local v52    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_12
    add-int/lit8 v40, v40, 0x1

    goto/16 :goto_a

    .line 19551
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_13
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    move/from16 v0, v35

    if-le v0, v3, :cond_14

    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-eqz v3, :cond_14

    .line 19552
    if-eqz v44, :cond_14

    .line 19553
    move-object/from16 v0, v44

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v44

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19554
    const/16 v7, 0xf

    .line 19553
    invoke-static {v3, v5, v7}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 19555
    move-object/from16 v0, v44

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, v44

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 19560
    :cond_14
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 19568
    add-int v37, v36, v38

    .line 19570
    .local v37, "numCachedAndEmpty":I
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_CACHED_APPS:I

    move/from16 v0, v36

    if-gt v0, v3, :cond_22

    .line 19571
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v38

    if-gt v0, v3, :cond_22

    .line 19572
    const/4 v3, 0x3

    move/from16 v0, v37

    if-gt v0, v3, :cond_20

    .line 19573
    const/16 v31, 0x3

    .line 19588
    .local v31, "memFactor":I
    :goto_b
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v0, v31

    if-le v0, v3, :cond_16

    .line 19589
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-eqz v3, :cond_15

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    if-lt v3, v5, :cond_16

    .line 19590
    :cond_15
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v31, v0

    .line 19594
    :cond_16
    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 19595
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    .line 19596
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    if-eqz v3, :cond_23

    const/4 v3, 0x0

    :goto_c
    move/from16 v0, v31

    invoke-virtual {v5, v0, v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->setMemFactorLocked(IZJ)Z

    move-result v18

    .line 19597
    .local v18, "allChanged":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v51

    .line 19598
    .local v51, "trackerMemFactor":I
    if-eqz v31, :cond_2b

    .line 19599
    move-object/from16 v0, p0

    iget-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v14, 0x0

    cmp-long v3, v12, v14

    if-nez v3, :cond_17

    .line 19600
    move-object/from16 v0, p0

    iput-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 19602
    :cond_17
    const/16 v48, 0x0

    .line 19604
    .local v48, "step":I
    packed-switch v31, :pswitch_data_2

    .line 19612
    const/16 v28, 0x5

    .line 19615
    .local v28, "fgTrimLevel":I
    :goto_d
    div-int/lit8 v27, v40, 0x3

    .line 19616
    .local v27, "factor":I
    const/16 v32, 0x2

    .line 19617
    .local v32, "minFactor":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_18

    const/16 v32, 0x3

    .line 19618
    :cond_18
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_19

    add-int/lit8 v32, v32, 0x1

    .line 19619
    :cond_19
    move/from16 v0, v27

    move/from16 v1, v32

    if-ge v0, v1, :cond_1a

    move/from16 v27, v32

    .line 19620
    :cond_1a
    const/16 v23, 0x50

    .line 19621
    .local v23, "curLevel":I
    add-int/lit8 v29, v2, -0x1

    :goto_e
    if-ltz v29, :cond_32

    .line 19622
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 19623
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v18, :cond_1b

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_1c

    .line 19624
    :cond_1b
    move-object/from16 v0, p0

    move/from16 v1, v51

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 19625
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 19627
    :cond_1c
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xc

    if-lt v3, v5, :cond_1d

    .line 19628
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v3, :cond_24

    .line 19663
    :cond_1d
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0x9

    if-ne v3, v5, :cond_26

    .line 19664
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x28

    if-ge v3, v5, :cond_1e

    .line 19665
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1e

    .line 19670
    :try_start_0
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 19671
    const/16 v5, 0x28

    .line 19670
    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3

    .line 19675
    :cond_1e
    :goto_f
    const/16 v3, 0x28

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 19621
    :cond_1f
    :goto_10
    add-int/lit8 v29, v29, -0x1

    goto :goto_e

    .line 19574
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "allChanged":Z
    .end local v23    # "curLevel":I
    .end local v27    # "factor":I
    .end local v28    # "fgTrimLevel":I
    .end local v31    # "memFactor":I
    .end local v32    # "minFactor":I
    .end local v48    # "step":I
    .end local v51    # "trackerMemFactor":I
    :cond_20
    const/4 v3, 0x5

    move/from16 v0, v37

    if-gt v0, v3, :cond_21

    .line 19575
    const/16 v31, 0x2

    .restart local v31    # "memFactor":I
    goto/16 :goto_b

    .line 19577
    .end local v31    # "memFactor":I
    :cond_21
    const/16 v31, 0x1

    .restart local v31    # "memFactor":I
    goto/16 :goto_b

    .line 19580
    .end local v31    # "memFactor":I
    :cond_22
    const/16 v31, 0x0

    .restart local v31    # "memFactor":I
    goto/16 :goto_b

    .line 19596
    :cond_23
    const/4 v3, 0x1

    goto/16 :goto_c

    .line 19606
    .restart local v18    # "allChanged":Z
    .restart local v48    # "step":I
    .restart local v51    # "trackerMemFactor":I
    :pswitch_3
    const/16 v28, 0xf

    .line 19607
    .restart local v28    # "fgTrimLevel":I
    goto :goto_d

    .line 19609
    .end local v28    # "fgTrimLevel":I
    :pswitch_4
    const/16 v28, 0xa

    .line 19610
    .restart local v28    # "fgTrimLevel":I
    goto :goto_d

    .line 19629
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v23    # "curLevel":I
    .restart local v27    # "factor":I
    .restart local v32    # "minFactor":I
    :cond_24
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v23

    if-ge v3, v0, :cond_25

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_25

    .line 19633
    :try_start_1
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v23

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_4

    .line 19650
    :cond_25
    :goto_11
    move/from16 v0, v23

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 19651
    add-int/lit8 v48, v48, 0x1

    .line 19652
    move/from16 v0, v48

    move/from16 v1, v27

    if-lt v0, v1, :cond_1f

    .line 19653
    const/16 v48, 0x0

    .line 19654
    sparse-switch v23, :sswitch_data_0

    goto :goto_10

    .line 19659
    :sswitch_0
    const/16 v23, 0x28

    .line 19660
    goto :goto_10

    .line 19656
    :sswitch_1
    const/16 v23, 0x3c

    .line 19657
    goto :goto_10

    .line 19677
    :cond_26
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x7

    if-ge v3, v5, :cond_27

    .line 19678
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 19677
    if-eqz v3, :cond_29

    .line 19678
    :cond_27
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 19677
    if-eqz v3, :cond_29

    .line 19682
    const/16 v30, 0x14

    .line 19683
    .local v30, "level":I
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_28

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_28

    .line 19688
    :try_start_2
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x14

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    .line 19692
    :cond_28
    :goto_12
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 19694
    .end local v30    # "level":I
    :cond_29
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v28

    if-ge v3, v0, :cond_2a

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_2a

    .line 19699
    :try_start_3
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v28

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 19703
    :cond_2a
    :goto_13
    move/from16 v0, v28

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto :goto_10

    .line 19707
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v23    # "curLevel":I
    .end local v27    # "factor":I
    .end local v28    # "fgTrimLevel":I
    .end local v32    # "minFactor":I
    .end local v48    # "step":I
    :cond_2b
    move-object/from16 v0, p0

    iget-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v14, 0x0

    cmp-long v3, v12, v14

    if-eqz v3, :cond_2c

    .line 19708
    move-object/from16 v0, p0

    iget-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    move-object/from16 v0, p0

    iget-wide v14, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v14, v8, v14

    add-long/2addr v12, v14

    move-object/from16 v0, p0

    iput-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 19709
    const-wide/16 v12, 0x0

    move-object/from16 v0, p0

    iput-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 19711
    :cond_2c
    add-int/lit8 v29, v2, -0x1

    :goto_14
    if-ltz v29, :cond_32

    .line 19712
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 19713
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v18, :cond_2d

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_2e

    .line 19714
    :cond_2d
    move-object/from16 v0, p0

    move/from16 v1, v51

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 19715
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 19717
    :cond_2e
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x7

    if-ge v3, v5, :cond_2f

    .line 19718
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 19717
    if-eqz v3, :cond_31

    .line 19718
    :cond_2f
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 19717
    if-eqz v3, :cond_31

    .line 19719
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_30

    .line 19720
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_30

    .line 19725
    :try_start_4
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 19726
    const/16 v5, 0x14

    .line 19725
    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 19730
    :cond_30
    :goto_15
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 19732
    :cond_31
    const/4 v3, 0x0

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 19711
    add-int/lit8 v29, v29, -0x1

    goto :goto_14

    .line 19736
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_32
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v3, :cond_33

    .line 19739
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v5, "always-finish"

    const/4 v7, 0x0

    invoke-virtual {v3, v7, v5}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    .line 19742
    :cond_33
    if-eqz v18, :cond_34

    .line 19743
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->isMemFactorLowered()Z

    move-result v3

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v8, v9, v5, v3}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    .line 19747
    :cond_34
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v29, v3, -0x1

    :goto_16
    if-ltz v29, :cond_36

    .line 19748
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v52

    check-cast v52, Lcom/android/server/am/UidRecord;

    .line 19749
    .restart local v52    # "uidRec":Lcom/android/server/am/UidRecord;
    move-object/from16 v0, v52

    iget v3, v0, Lcom/android/server/am/UidRecord;->setProcState:I

    move-object/from16 v0, v52

    iget v5, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    if-eq v3, v5, :cond_35

    .line 19753
    move-object/from16 v0, v52

    iget v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    move-object/from16 v0, v52

    iput v3, v0, Lcom/android/server/am/UidRecord;->setProcState:I

    .line 19754
    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v52

    invoke-direct {v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 19747
    :cond_35
    add-int/lit8 v29, v29, -0x1

    goto :goto_16

    .line 19758
    .end local v52    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_36
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->shouldWriteNowLocked(J)Z

    move-result v3

    if-eqz v3, :cond_37

    .line 19759
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$24;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$24;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v3, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 19337
    :cond_37
    return-void

    .line 19727
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v24

    .local v24, "e":Landroid/os/RemoteException;
    goto :goto_15

    .line 19700
    .end local v24    # "e":Landroid/os/RemoteException;
    .restart local v23    # "curLevel":I
    .restart local v27    # "factor":I
    .restart local v28    # "fgTrimLevel":I
    .restart local v32    # "minFactor":I
    .restart local v48    # "step":I
    :catch_1
    move-exception v24

    .restart local v24    # "e":Landroid/os/RemoteException;
    goto/16 :goto_13

    .line 19689
    .end local v24    # "e":Landroid/os/RemoteException;
    .restart local v30    # "level":I
    :catch_2
    move-exception v24

    .restart local v24    # "e":Landroid/os/RemoteException;
    goto/16 :goto_12

    .line 19672
    .end local v24    # "e":Landroid/os/RemoteException;
    .end local v30    # "level":I
    :catch_3
    move-exception v24

    .restart local v24    # "e":Landroid/os/RemoteException;
    goto/16 :goto_f

    .line 19634
    .end local v24    # "e":Landroid/os/RemoteException;
    :catch_4
    move-exception v24

    .restart local v24    # "e":Landroid/os/RemoteException;
    goto/16 :goto_11

    .line 19450
    nop

    :pswitch_data_0
    .packed-switch 0xe
        :pswitch_0
        :pswitch_0
    .end packed-switch

    .line 19502
    :pswitch_data_1
    .packed-switch 0xe
        :pswitch_1
        :pswitch_1
        :pswitch_2
    .end packed-switch

    .line 19604
    :pswitch_data_2
    .packed-switch 0x2
        :pswitch_4
        :pswitch_3
    .end packed-switch

    .line 19654
    :sswitch_data_0
    .sparse-switch
        0x3c -> :sswitch_0
        0x50 -> :sswitch_1
    .end sparse-switch
.end method

.method final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 10
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 19315
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 19316
    .local v0, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_2

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 19317
    :goto_0
    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 19319
    .local v9, "wasCached":Z
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 19325
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0x9

    if-lt v1, v2, :cond_3

    .line 19326
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 19328
    .local v3, "cachedAdj":I
    :goto_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 19327
    const/4 v5, 0x0

    move-object v1, p0

    move-object v2, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v8

    .line 19329
    .local v8, "success":Z
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-ne v9, v1, :cond_0

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0x10

    if-ne v1, v2, :cond_1

    .line 19332
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 19334
    :cond_1
    return v8

    .line 19316
    .end local v3    # "cachedAdj":I
    .end local v8    # "success":Z
    .end local v9    # "wasCached":Z
    :cond_2
    const/4 v4, 0x0

    .local v4, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 19326
    .end local v4    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "wasCached":Z
    :cond_3
    const/16 v3, 0x10

    .restart local v3    # "cachedAdj":I
    goto :goto_1
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    .line 17556
    const-string/jumbo v2, "android.permission.CHANGE_CONFIGURATION"

    .line 17557
    const-string/jumbo v3, "updateConfiguration()"

    .line 17556
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 17558
    const-string/jumbo v2, "updateConfiguration()"

    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;)V

    .line 17559
    if-nez p1, :cond_0

    .line 17560
    new-instance v2, Ljava/lang/NullPointerException;

    const-string/jumbo v3, "Configuration must not be null"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 17563
    :cond_0
    monitor-enter p0

    .line 17564
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 17565
    .local v0, "origId":J
    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 17566
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    .line 17555
    return-void

    .line 17563
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 5
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "isForeground"    # Z
    .param p3, "oomAdj"    # Z

    .prologue
    .line 19254
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eq p2, v1, :cond_2

    .line 19255
    iput-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    .line 19256
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 19257
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19256
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 19258
    .local v0, "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz p2, :cond_3

    .line 19259
    if-nez v0, :cond_0

    .line 19260
    new-instance v0, Ljava/util/ArrayList;

    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 19261
    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v0}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 19263
    :cond_0
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 19264
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19265
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 19266
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19265
    const v4, 0x8002

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 19280
    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    .line 19281
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 19253
    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    return-void

    .line 19269
    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    if-eqz v0, :cond_1

    .line 19270
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 19271
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 19273
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19272
    const/16 v4, 0x4002

    .line 19271
    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 19274
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_1

    .line 19275
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    goto :goto_0
.end method

.method updateSleepIfNeededLocked()V
    .locals 4

    .prologue
    const/16 v3, 0x1b

    const/4 v2, 0x0

    .line 10529
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-eqz v1, :cond_0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 10535
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v1, :cond_2

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 10536
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 10537
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_1

    .line 10538
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 10540
    :cond_1
    const/4 v1, 0x5

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 10541
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->goingToSleepLocked()V

    .line 10542
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 10545
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLocked(Z)V

    .line 10546
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 10547
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 10548
    .local v0, "nmsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v2, 0xdbba0

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 10528
    .end local v0    # "nmsg":Landroid/os/Message;
    :cond_2
    :goto_0
    return-void

    .line 10530
    :cond_3
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 10531
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    .line 10532
    const/4 v1, 0x2

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 10533
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->comeOutOfSleepIfNeededLocked()V

    .line 10534
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    goto :goto_0
.end method

.method updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
    .locals 5
    .param p1, "component"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "resumed"    # Z

    .prologue
    .line 3562
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    .line 3563
    .local v0, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    if-eqz p2, :cond_1

    .line 3564
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_0

    .line 3565
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 3566
    const/4 v4, 0x1

    .line 3565
    invoke-virtual {v1, v2, v3, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    .line 3568
    :cond_0
    monitor-enter v0

    .line 3569
    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    monitor-exit v0

    .line 3559
    return-void

    .line 3568
    :catchall_0
    move-exception v1

    monitor-exit v0

    throw v1

    .line 3572
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_2

    .line 3573
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 3574
    const/4 v4, 0x2

    .line 3573
    invoke-virtual {v1, v2, v3, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    .line 3576
    :cond_2
    monitor-enter v0

    .line 3577
    :try_start_1
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityPausedLocked(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    .line 3576
    :catchall_1
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 4
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 17213
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 17214
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17217
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .line 17219
    .local v0, "flags":I
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_1

    .line 17222
    const/high16 v1, 0x4000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_2

    .line 17231
    :cond_1
    const/high16 v1, 0x2000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_3

    .line 17232
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 17233
    const-string/jumbo v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    .line 17232
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17224
    :cond_2
    const/high16 v1, 0x40000000    # 2.0f

    and-int/2addr v1, v0

    if-nez v1, :cond_1

    .line 17225
    const-string/jumbo v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 17226
    const-string/jumbo v3, " before boot completion"

    .line 17225
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17227
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string/jumbo v2, "Cannot broadcast before boot completed"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17236
    :cond_3
    return-object p1
.end method

.method public willActivityBeVisible(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4654
    monitor-enter p0

    .line 4655
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 4656
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 4657
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->willActivityBeVisibleLocked(Landroid/os/IBinder;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    monitor-exit p0

    return v1

    .line 4659
    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    return v1

    .line 4654
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method
